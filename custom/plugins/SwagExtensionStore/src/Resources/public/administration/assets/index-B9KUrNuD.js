const s=`{% block sw_extension_store_index %} <sw-meteor-page class="sw-extension-store-index" hide-icon> {% block sw_extension_store_index_slots %} {% block sw_extension_store_index_slot_search_bar %} <template #search-bar> {% block sw_extension_store_index_search_bar %} <sw-search-bar :key="storeSearchKey" :initial-search="searchValue" initial-search-type="extension" :placeholder="$t('sw-extension-store.listing.placeholderSearchBar')" @search="updateSearch" /> {% endblock %} </template> {% endblock %} {% block sw_extension_store_index_slot_tabs %} <template #page-tabs> {% block sw_extension_store_index_tabs %} {% block sw_extension_store_index_tabs_extensions_app %} <sw-tabs-item :route="{ name: 'sw.extension.store.listing.app' }" :disabled="!isAvailable"> {{ $t('sw-extension-store.tabs.apps') }} </sw-tabs-item> {% endblock %} {% block sw_extension_store_index_tabs_extensions_theme %} <sw-tabs-item :route="{ name: 'sw.extension.store.listing.theme' }" :disabled="!isAvailable"> {{ $t('sw-extension-store.tabs.themes') }} </sw-tabs-item> {% endblock %} {% endblock %} </template> {% endblock %} {% block sw_extension_store_index_slot_default %} <template #default> {% block sw_extension_store_index_loader %} <sw-loader v-if="isLoading" /> {% endblock %} <template v-else> {% block sw_extension_store_index_content %} {% block sw_extension_store_index_content_view %} <router-view v-if="isAvailable" @extension-listing-errors="onExtensionListingError" /> {% endblock %} {% block sw_extension_store_index_content_offline_warning %} <sw-extension-store-error-card v-else-if="failReason === 'offline'" :title="$t('sw-extension-store.offline.headline')" variant="danger" > {{ $t('sw-extension-store.offline.description') }} </sw-extension-store-error-card> {% endblock %} {% block sw_extension_store_index_content_update_warning %} <sw-extension-store-update-warning v-else-if="failReason === 'outdated'" /> {% endblock %} {% block sw_extension_store_index_content_listing_error %} <sw-extension-store-error-card v-else :title="listingError?.title" variant="danger" > <template v-if="listingError"> {{ listingError.message }} </template> </sw-extension-store-error-card> {% endblock %} {% endblock %} </template> </template> {% endblock %} {% endblock %} </sw-meteor-page> {% endblock %}`,n={template:s,inject:["extensionStoreActionService","shopwareExtensionService","feature"],props:{id:{type:String,required:!1,default:null}},data(){return{isAvailable:!1,failReason:"",listingError:null,isLoading:!1}},computed:{storeSearchKey(){return this.$route.name},activeFilters(){return Shopware.Store.get("shopwareExtensions").search.filter},searchValue(){return Shopware.Store.get("shopwareExtensions").search.term},isTheme(){return this.$route.name.includes("theme")?"themes":"apps"}},watch:{isTheme:{immediate:!0,handler(e){Shopware.Store.get("shopwareExtensions").setSearchValue({key:"page",value:this.isTheme===this.activeFilters.group?Shopware.Store.get("shopwareExtensions").search.page:1}),this.activeFilters.group=e}}},created(){this.createdComponent()},methods:{createdComponent(){this.checkStoreUpdates()},async checkStoreUpdates(){this.isLoading=!0,this.shopwareExtensionService.updateExtensionData();const e=await this.getExtensionStore();if(!e){this.isLoading=!1;return}if(this.isUpdateable(e)){this.isAvailable=!1,this.failReason="outdated",this.isLoading=!1;return}this.isAvailable=!0,this.isLoading=!1},onExtensionListingError(e){const t=Shopware.Service("extensionErrorService").handleErrorResponse(e,this);this.isAvailable=!1,this.listingError=t&&t[0],this.failReason="listing_error"},getExtensionStore(){return this.extensionStoreActionService.getMyExtensions().then(e=>e.find(t=>t.name==="SwagExtensionStore"))},isUpdateable(e){return!e||e.latestVersion===null?!1:e.latestVersion!==e.version},updateSearch(e){Shopware.Store.get("shopwareExtensions").setSearchValue({key:"term",value:e})}}};export{n as default};
