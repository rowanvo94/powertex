const o=`{% block sw_extension_store_detail %} <sw-meteor-page v-if="fetchError" :hide-icon="true" class="sw-extension-store-detail" > <div class="sw-extension-store-detail__extension-unknown"> <sw-label appearance="pill" variant="danger" > <mt-icon name="regular-times-circle" size="30px" /> </sw-label> <h2>{{ fetchError.title }}</h2> <p>{{ fetchError.detail }}</p> </div> </sw-meteor-page> <sw-meteor-page v-else-if="suspended || isLoading" :hide-icon="suspended" class="sw-extension-store-detail" > {% block sw_extension_store_detail_loader %}<sw-loader />{% endblock %} </sw-meteor-page> <sw-meteor-page v-else :class="variantClass" class="sw-extension-store-detail" > {% block sw_extension_store_detail_smart_bar %} {% block sw_extension_store_detail_slot_icon %} <template #smart-bar-icon> {% block sw_extension_store_detail_icon %} <sw-extension-icon class="sw-extension-store-detail__extension-icon" :src="extension.icon" /> {% endblock %} </template> {% endblock %} {% block sw_extension_store_detail_slot_smart_bar_header %} <template #smart-bar-header> {% block sw_extension_store_detail_smart_bar_title %} {{ extension.label }} {% endblock %} </template> {% endblock %} {% block sw_extension_store_detail_slot_smart_bar_header_meta %} <template #smart-bar-header-meta> {% block sw_extension_store_detail_smart_bar_producer_name %} <span v-if="extension.producerWebsite && extension.producerName"> {{ $t('sw-extension-store.detail.labelBy') }} <sw-external-link small :href="extension.producerWebsite" class="link sw-extension-store-detail__producer-link" > {{ extension.producerName }} </sw-external-link> </span> <span v-else-if="extension.producerName"> {{ $t('sw-extension-store.detail.labelBy') }} {{ extension.producerName }} </span> {% endblock %} {% block sw_extension_store_detail_slot_smart_bar_header_meta_extension_type_label %} <sw-extension-type-label :type="extension.type" class="sw-extension-store-detail__extension-type-label" /> {% endblock %} </template> {% endblock %} {% block sw_extension_store_detail_slot_smart_bar_description %} <template #smart-bar-description> {% block sw_extension_store_detail_smart_bar_description %} {% block sw_extension_store_detail_label_and_rating_overview %} <div class="sw-extension-store-detail__label-and-rating-overview"> {% block sw_extension_store_detail_rating_overview %} <div class="sw-extension-store-detail__rating-overview"> {% block sw_extension_store_detail_rating_overview_content %} <template v-if="extension.numberOfRatings > 0"> {% block sw_extension_store_detail_rating_overview_ratings %} <sw-extension-rating-stars :rating="extension.rating" :size="12" /> <router-link class="sw-extension-store-detail__number-of-reviews" :to="{ name: 'sw.extension.store.detail', params: { id: id }, hash: '#ratings-card'}" > {{ $t('sw-extension-store.detail.numberOfRatings', extension.numberOfRatings) }} </router-link> {% endblock %} {% block sw_extension_store_detail_label_display %} <sw-extension-store-label-display v-if="extension.labels.length > 0" :labels="extension.labels" class="sw-extension-store-detail__label-display" /> {% endblock %} </template> <template v-else> {% block sw_extension_store_detail_rating_overview_no_ratings %} <mt-icon name="solid-star" size="12px" /> <span class="sw-extension-store-detail__no-ratings-text">{{ $t('sw-extension-store.detail.noRatings') }}</span> {% endblock %} </template> {% endblock %} </div> {% endblock %} </div> {% endblock %} {% endblock %} </template> {% endblock %} {% block sw_extension_store_detail_slot_smart_bar_actions %} <template #smart-bar-actions> {% block sw_extension_store_detail_smart_bar_actions %} <template v-if="isPurchasable"> {% block sw_extension_store_detail_smart_bar_actions_add %} {% block sw_extension_store_detail_smart_bar_actions_add_button %} <mt-button variant="primary" class="sw-extension-store-detail__action-add-extension" @click="onClickAddExtension" > <template v-if="extension && extension.isTheme"> {{ $t('sw-extension-store.detail.labelButtonAddTheme') }} </template> <template v-else> {{ $t('sw-extension-store.detail.labelButtonAddExtension') }} </template> </mt-button> {% endblock %} {% block sw_extension_store_detail_smart_bar_price %} <template v-if="recommendedVariant && recommendedVariant.netPrice == 0"> <span class="sw-extension-store-detail__price-free"> {{ $t('sw-extension-store.general.labelFree') }} </span> </template> <span v-else-if="recommendedVariant" :class="discountClass" > <span class="sw-extension-store-detail__net-price"> {{ renderPrice(recommendedVariant.netPrice) }} </span> <span v-if="recommendedVariant.netPrice !== discountedPrice" class="sw-extension-store-detail__discounted-price" > {{ renderPrice(discountedPrice) }} </span> <span v-if="shopwareExtensionService.mapVariantToRecommendation(recommendedVariant) === 1" class="sw-extension-store-detail__rent-suffix" > {{ $t('sw-extension-store.general.labelRentSuffix') }} </span> </span> {% endblock %} {% block sw_extension_store_detail_smart_bar_discounted_price_info %} <small v-if="hasActiveDiscount" class="sw-extension-store-detail__discounted-price-info" > <template v-if="!!discountAppliesForMonths"> {{ $t('sw-extension-store.detail.labelDiscountPeriod', { months: discountAppliesForMonths }, discountAppliesForMonths) }} </template> {{ $t('sw-extension-store.detail.labelDiscountInfo', { endDate: dateFilter(recommendedVariant.discountCampaign.endDate) }) }} </small> {% endblock %} {% block sw_extension_store_detail_smart_bar_actions_trial_info %} <mt-button v-if="recommendedVariant && recommendedVariant.trialPhaseIncluded" class="sw-extension-store-detail__trial-info" variant="secondary" @click="onClickAddExtension" > {{ $t('sw-extension-store.detail.hasTrialPhase') }} </mt-button> {% endblock %} {% block sw_extension_store_detail_smart_bar_in_app_purchases_badge %} <span v-if="extension.inAppFeaturesAvailable" class="sw-extension-store-detail__in-app-purchases__badge"> {{ $t('sw-extension.in-app-purchase.badge-label') }} </span> {% endblock %} {% endblock %} </template> <template v-else-if="isLicensed"> {% block sw_extension_store_detail_smart_bar_actions_install %} <sw-button-process v-if="!isInstalled" variant="primary" :is-loading="isInstalling" :process-success="isInstallSuccessful" class="sw-extension-store-detail__action-install-extension" @click.prevent="handleInstallWithPermissionsModal" @process-finish="finishedInstall" > <template v-if="extension && extension.isTheme"> {{ $t('sw-extension-store.detail.labelButtonInstallTheme') }} </template> <template v-else> {{ $t('sw-extension-store.detail.labelButtonInstallExtension') }} </template> </sw-button-process> {% endblock %} {% block sw_extension_store_detail_smart_bar_actions_already_installed %} <mt-button v-else-if="!canBeOpened && !isConfigurable" variant="primary" class="sw-extension-store-detail__action-open-listing" @click="openListingPage" > <template v-if="extension && extension.isTheme"> {{ $t('sw-extension-store.detail.themeIsAlreadyInstalled') }} </template> <template v-else> {{ $t('sw-extension-store.detail.extensionIsAlreadyInstalled') }} </template> </mt-button> {% endblock %} {% block sw_extension_store_detail_smart_bar_actions %} <sw-button-group v-else-if="canBeOpened" split-button > {% block sw_extension_store_detail_smart_bar_actions_open_extension %} <mt-button variant="primary" class="sw-extension-store-detail__action-open-extension" @click="openExtension" > <template v-if="extension && extension.isTheme"> {{ $t('sw-extension-store.detail.labelButtonOpenTheme') }} </template> <template v-else> {{ $t('sw-extension-store.detail.labelButtonOpenExtension') }} </template> </mt-button> {% endblock %} {% block sw_extension_store_detail_smart_bar_actions_open_extension_context %} <sw-context-button v-if="isConfigurable" class="sw-extension-store-detail__action-context" > <template #button> <mt-button variant="primary" square > <mt-icon name="regular-chevron-down-xs" size="16" /> </mt-button> </template> <sw-context-menu-item @click="openConfiguration"> {{ $t('sw-extension-store.detail.openConfiguration') }} </sw-context-menu-item> </sw-context-button> {% endblock %} </sw-button-group> {% endblock %} {% block sw_extension_store_detail_smart_bar_actions_open_configuration %} <mt-button v-else variant="primary" class="sw-extension-store-detail__action-open-configuration" @click="openConfiguration" > {{ $t('sw-extension-store.detail.openConfiguration') }} </mt-button> {% endblock %} </template> <template v-else-if="isEnterpriseFeature"> {% block sw_extension_store_detail_smart_bar_actions_enterprise_contact %} <mt-button variant="primary" :link="$t('sw-extension-store.detail.enterpriseContactUrl')" class="sw-extension-store-detail__action-enterprise-contact" > {{ $t('sw-extension-store.detail.enterpriseContactLinkText') }} <mt-icon name="regular-external-link" size="12" /> </mt-button> {% endblock %} </template> {% block sw_extension_store_detail_buy_modal %} <sw-extension-buy-modal v-if="showBuyModal" :extension="extension" @modal-close="closeBuyModal" /> {% endblock %} {% block sw_extension_store_detail_installation_failed_modal %} <sw-modal v-if="showInstallationFailedModal" :title="extension.label" variant="small" @modal-close="closeInstallationFailedModal" > {% block sw_extension_store_detail_installation_failed_modal_content %} <sw-extension-adding-failed :extension-name="extension.name" :title="installationError && installationError.title" :detail="installationError && installationError.detail" :documentation-link="installationErrorDocumentationLink" @close="closeInstallationFailedModal" /> {% endblock %} </sw-modal> {% endblock %} {% block sw_extension_store_detail_in_app_purchases_listing_modal %} <sw-extension-store-in-app-purchases-listing-modal v-if="showInAppPurchasesListingModal" :extension="extension" :in-app-purchases="inAppPurchases" @modal-close="closeInAppPurchasesListingModal" /> {% endblock %} {% endblock %} </template> {% endblock %} {% block sw_extension_store_detail_slot_smart_bar_context_buttons %} <template #smart-bar-context-buttons> {% block sw_extension_store_detail_show_permissions %} <mt-button v-if="hasPermissions" variant="secondary" size="small" @click="openPermissionsModal" > <mt-icon name="solid-shield" size="16px" /> {{ $t('sw-extension-store.detail.labelButtonShowPermissions') }} </mt-button> {% endblock %} </template> {% endblock %} {% endblock %} {% block sw_extension_store_detail_page_content %} {% block sw_extension_sote_detail_page_info_alerts %} <mt-banner v-if="isEnterpriseFeature" variant="info" class="sw-extension-store-detail__alert" > {{ $t('sw-extension-store.detail.enterpriseFeatureAlertText') }} </mt-banner> {% endblock %} {% block sw_extension_store_detail_images %} <sw-extension-store-slider :images="images" :slide-count="1" /> {% endblock %} {% block sw_extension_store_detail_card_info %} <sw-meteor-card :title="$t('sw-extension-store.detail.cardTitleInformation')" class="sw-extension-store-detail--user-provided-data" > {% block sw_extension_store_detail_card_info_content %} <div :class="{ 'sw-extension-store-detail__description--collapsed': isDescriptionCollapsed }" class="sw-extension-store-detail__description" v-html="description" /> {% endblock %} {% block sw_extension_store_details_expand_description %} <mt-button v-if="isDescriptionCollapsed" size="small" class="sw-extension-store-detail__button-extend-description" variant="secondary" @click="expandDescription" > {{ $t('sw-extension-store.detail.labelButtonReadMore') }} </mt-button> {% endblock %} </sw-meteor-card> {% endblock %} {% block sw_extension_store_detail_card_details %} <sw-meteor-card :title="$t('sw-extension-store.detail.cardTitleDetails')"> {% block sw_extension_store_detail_card_details_content %} <dl class="sw-extension-store-detail__details-list"> {% block sw_extension_store_detail_card_details_category %} <dt>{{ $t('sw-extension-store.detail.details.labelCategory', extension.categories.length) }}</dt> <dd>{{ extensionCategoryNames }}</dd> {% endblock %} {% block sw_extension_store_detail_card_details_version %} <dt>{{ $t('sw-extension-store.detail.details.labelVersion') }}</dt> <dd>{{ extension.latestVersion }}</dd> {% endblock %} {% block sw_extension_store_detail_card_details_updated_at %} <dt>{{ $t('sw-extension-store.detail.details.labelUpdatedAt') }}</dt> <dd>{{ dateFilter(extension.lastUpdateDate, { month: 'numeric', year: 'numeric', hour: undefined, minute: undefined }) }}</dd> {% endblock %} {% block sw_extension_store_detail_card_details_languages %} <dt v-if="extensionLanguages.length"> {{ $t('sw-extension-store.detail.details.labelLanguages') }} </dt> <dd>{{ extensionLanguages }}</dd> {% endblock %} {% block sw_extension_store_detail_card_details_in_app_purchases %} <template v-if="inAppPurchases.length"> <dt>{{ $t('sw-extension-store.detail.inAppPurchases.label') }}</dt> <dd> <span class="sw-extension-store-detail-card-details-in-app-purchases__count"> {{ inAppPurchases.length }} </span> <a :title="$t('sw-extension-store.component.sw-extension-card-base.contextMenu.seeDetailsLabel')" class="sw-extension-store-detail-card-details-in-app-purchases__modal-link" role="button" @click="openInAppPurchasesListingModal" > {{ $t('sw-extension-store.component.sw-extension-card-base.contextMenu.seeDetailsLabel') }} </a> </dd> </template> {% endblock %} {% block sw_extension_store_detail_card_details_producer_website %} <template v-if="extension.producerWebsite"> <dt> <sw-external-link :href="extension.producerWebsite"> {{ $t('sw-extension-store.detail.details.labelWebsite') }} </sw-external-link> </dt> <dd /> </template> {% endblock %} {% block sw_extension_store_detail_card_details_privacy_policy %} <template v-if="extension.privacyPolicyLink"> <dt> <sw-external-link :href="extension.privacyPolicyLink"> {{ $t('sw-extension-store.detail.details.labelPrivacy') }} </sw-external-link> </dt> <dd /> </template> {% endblock %} {% block sw_extension_store_detail_card_details_additional_entries %}{% endblock %} </dl> {% endblock %} </sw-meteor-card> {% endblock %} {% block sw_extension_store_detail_card_ratings %} <sw-extension-ratings-card id="ratings-card" :extension="extension" :producer-name="extension.producerName" :is-installed-and-licensed="isLicensed && isInstalled" @update-extension="fetchExtensionAndScrollToRatings" /> {% endblock %} {% block sw_extension_store_detail_card_faq %} <sw-meteor-card v-if="extension.faq.length > 0" :title="$t('sw-extension-store.detail.cardTitleFAQ')" > {% block sw_extension_store_detail_card_faq_questions %} <section v-for="(question, index) in extension.faq" :key="\`sw-extension-store-detail__faq-question-\${index}\`" class="sw-extension-store-detail__faq-question sw-extension-store-detail--user-provided-data" > {% block sw_extension_store_detail_card_faq_questions_question %} <h4>{{ question.question }}</h4> {% endblock %} {% block sw_extension_store_detail_card_faq_questions_answer %} <p v-html="question.answer" /> {% endblock %} </section> {% endblock %} </sw-meteor-card> {% endblock %} {% block sw_extension_store_detail_card_changelog %} <sw-meteor-card v-if="orderedBinaries.length > 0" :title="$t('sw-extension-store.detail.cardTitleChangelog')" > {% block sw_extension_store_detail_card_changelog_entries %} <section v-for="(binary, index) in orderedBinaries" :key="\`sw-extension-store-detail__changelog-entry-\${index}\`" class="sw-extension-store-detail__changelog-entry" > {% block sw_extension_store_detail_card_changelog_entries_version %} <div class="sw-extension-store-detail__changelog-version"> {{ binary.version }} </div> {% endblock %} {% block sw_extension_store_detail_card_changelog_entries_creation_date %} <div class="sw-extension-store-detail__changelog-creation-date"> {{ dateFilter(binary.creationDate, { month: 'numeric', year: 'numeric', hour: undefined, minute: undefined }) }} </div> {% endblock %} {% block sw_extension_store_detail_card_changelog_entries_changelog_text %} <p class="sw-extension-store-detail__changelog-text" v-html="binary.text" /> {% endblock %} </section> {% endblock %} </sw-meteor-card> {% endblock %} {% endblock %} {% block sw_extension_store_detail_page_modals %} {% block sw_extension_store_detail_page_permission %} <sw-extension-permissions-modal v-if="showPermissionsModal" :extension-label="extension.label" :domains="extension.domains" :permissions="extension.permissions" @modal-close="closePermissionsModal" /> {% endblock %} {% block sw_extension_store_detail_page_permission_accept %} <sw-extension-permissions-modal v-if="showAcceptPermissionsModal" :extension-label="extension.label" :domains="extension.domains" :permissions="extension.permissions" :action-label="$t('sw-extension-store.component.sw-extension-card-base.labelAcceptAndInstall')" @modal-close="closeAcceptPermissionsModal" @close-with-action="closePermissionsModalAndInstallExtension" /> {% endblock %} {% block sw_extension_store_detail_page_account_modal %} <sw-modal v-if="showAccountModal" class="sw-extension-store-detail__account-modal" variant="large" @modal-close="closeAccountModal" > <sw-extension-my-extensions-account @login-success="onLoginSuccess" /> </sw-modal> {% endblock %} {% endblock %} </sw-meteor-page> {% endblock %}`,{Utils:s}=Shopware,a={template:o,inject:["extensionStoreDataService","shopwareExtensionService","extensionHelperService","cacheApiService","inAppPurchasesService"],mixins:["sw-extension-error"],props:{id:{type:String,required:!0}},data(){return{extension:null,inAppPurchases:[],isLoading:!1,showBuyModal:!1,showPermissionsModal:!1,showAcceptPermissionsModal:!1,showAccountModal:!1,showInstallationFailedModal:!1,showInAppPurchasesListingModal:!1,isInstalling:!1,isInstallSuccessful:!1,permissionsAccepted:!1,isDescriptionCollapsed:!1,installationError:null,fetchError:!1,canBeOpened:!1}},computed:{suspended(){return this.extension===null},extensionMetaData(){return this.suspended?null:Shopware.Store.get("shopwareExtensions").myExtensions.data.find(e=>e.id===this.extension.id)},isLicensed(){return this.extensionMetaData?!!this.extensionMetaData.storeLicense:!1},isInstalled(){return!!this.extensionMetaData&&!!this.extensionMetaData.installedAt},isConfigurable(){return!!this.extensionMetaData&&this.extensionMetaData.configurable},images(){return this.suspended?[]:this.extension.images.map(e=>e.remoteLink)},extensionCategoryNames(){return this.suspended?"":this.extension.categories.map(e=>e.details.name).join(", ")},extensionLanguages(){return this.suspended?"":this.extension.languages.join(", ")},isPurchasable(){return this.suspended||!this.extension.variants.length?!1:!this.isLicensed},languageId(){return Shopware.Store.get("session").languageId},recommendedVariant(){return this.shopwareExtensionService.orderVariantsByRecommendation(this.extension.variants)[0]},dateFilter(){return Shopware.Filter.getByName("date")},hasActiveDiscount(){return this.shopwareExtensionService.isVariantDiscounted(this.recommendedVariant)},discountAppliesForMonths(){return this.hasActiveDiscount?this.recommendedVariant.discountCampaign.discountAppliesForMonths:null},discountClass(){return{"is--discounted":this.hasActiveDiscount}},discountedPrice(){return this.shopwareExtensionService.getPriceFromVariant(this.recommendedVariant)},variantClass(){return{"is--theme":this.extension&&this.extension.isTheme}},orderedBinaries(){return s.get(this.extension,"binaries",[]).slice().reverse()},description(){return s.get(this.extension,"description")},hasPermissions(){return Object.keys(this.extension.permissions).length},installationErrorDocumentationLink(){return s.get(this.installationError,"meta.documentationLink",null)},isEnterpriseFeature(){return this.suspended?!1:!!this.extension.addons.find(e=>e==="SW6_EnterpriseFeature")}},watch:{id:{immediate:!0,handler(){this.fetchExtension()}},"$route.hash"(){this.scrollToElementFromHash()},suspended(){this.suspended||this.$nextTick(()=>{this.scrollToElementFromHash()})},languageId(e){e!==""&&this.fetchExtension()},description(){this.isDescriptionCollapsed=!0,this.$nextTick(()=>{this.checkDescriptionCollapsed()})}},async created(){await this.shopwareExtensionService.updateExtensionData(),this.canBeOpened=!!this.shopwareExtensionService.getOpenLink(this.extension),this.extension.inAppFeaturesAvailable&&this.fetchInAppPurchases()},methods:{async fetchExtension(){if(this.isLoading=!0,this.languageId!=="")try{this.fetchError=!1,this.extension=await this.extensionStoreDataService.getDetail(this.id,{...Shopware.Context.api,languageId:this.languageId})}catch(e){const t=e.response.data.errors[0];if(t.code==="FRAMEWORK__STORE_ERROR"&&t.title==="Extension unknown"){this.fetchError=t;const n=this.$t("sw-extension.errors.messageToTheShopwareDocumentation",t.meta);this.createNotificationError({title:t.title,message:`${t.detail} <br> ${n}`,autoClose:!1});return}this.showExtensionErrors(e)}finally{this.isLoading=!1}},async fetchExtensionAndScrollToRatings(){await this.fetchExtension(),this.$router.push({hash:"#ratings-card"})},scrollToElementFromHash(){if(!this.$route.hash)return;const e=this.$el.querySelector(this.$route.hash),t=document.querySelector("div.sw-meteor-page__body"),n=document.querySelector("header.sw-meteor-page__head-area"),i=e.offsetTop-n.getBoundingClientRect().height;t.scroll({top:i,behavior:"smooth"}),this.$router.push({...this.route,hash:null})},async onClickAddExtension(){if(await this.shopwareExtensionService.checkLogin(),!Shopware.Store.get("shopwareExtensions").userInfo){this.openAccountModal();return}this.openBuyModal()},renderPrice(e){return s.format.currency(e,"EUR")},onLoginSuccess(){this.closeAccountModal(),this.openBuyModal()},openBuyModal(){this.showBuyModal=!0},closeBuyModal(){this.showBuyModal=!1},openAccountModal(){this.showAccountModal=!0},closeAccountModal(){this.showAccountModal=!1},openPermissionsModal(){this.showPermissionsModal=!0},closePermissionsModal(){this.showPermissionsModal=!1},openAcceptPermissionsModal(){this.showAcceptPermissionsModal=!0},closeAcceptPermissionsModal(){this.showAcceptPermissionsModal=!1},openInAppPurchasesListingModal(){this.showInAppPurchasesListingModal=!0},closeInAppPurchasesListingModal(){this.showInAppPurchasesListingModal=!1},async closePermissionsModalAndInstallExtension(){this.permissionsAccepted=!0,this.closeAcceptPermissionsModal(),await this.installExtension()},async handleInstallWithPermissionsModal(){if(Object.keys(this.extension.permissions).length){this.openAcceptPermissionsModal();return}this.permissionsAccepted=!0,await this.installExtension()},async installExtension(){this.isInstalling=!0;try{await this.extensionHelperService.downloadAndActivateExtension(this.extension.name,this.extension.type),this.extension.type==="plugin"&&await this.cacheApiService.clear(),this.isInstallSuccessful=!0,window.location.reload()}catch(e){this.showExtensionErrors(e),s.get(e,"response.data.errors[0]",null)&&(this.installationError=e.response.data.errors[0]),this.openInstallationFailedModal()}finally{this.isInstalling=!1}},async finishedInstall(){await this.shopwareExtensionService.updateExtensionData(),this.isInstallSuccessful=!1},async openExtension(){const e=await this.shopwareExtensionService.getOpenLink(this.extension);e&&this.$router.push(e)},openConfiguration(){this.$router.push({name:"sw.extension.config",params:{namespace:this.extension.name}})},openListingPage(){if(this.extension&&this.extension.isTheme){this.$router.push({name:"sw.extension.my-extensions.listing.theme"});return}this.$router.push({name:"sw.extension.my-extensions.listing.app"})},checkDescriptionCollapsed(){const e=this.$el.querySelector(".sw-extension-store-detail__description");e&&e.scrollHeight<=300&&this.expandDescription()},expandDescription(){this.isDescriptionCollapsed=!1},openInstallationFailedModal(){this.showInstallationFailedModal=!0},closeInstallationFailedModal(){this.showInstallationFailedModal=!1},async fetchInAppPurchases(){this.inAppPurchases=await this.inAppPurchasesService.getAvailablePurchases(this.extension.name)}}};export{a as default};
