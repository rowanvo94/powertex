const s=`{% block sw_extension_listing_card %} <div class="sw-extension-listing-card" @click="openDetailPage"> {% block sw_extension_listing_card_content %} {% block sw_extension_listing_card_preview %} <div class="sw-extension-listing-card__preview" :style="previewMedia"> {% block sw_extension_listing_card_preview_type_label %} <sw-extension-type-label :type="extension.type" class="sw-extension-listing-card__extension-type-label" /> {% endblock %} </div> {% endblock %} {% block sw_extension_listing_card_info_grid %} <div class="sw-extension-listing-card__info-grid"> {% block sw_extension_listing_card_info_name %} <p class="sw-extension-listing-card__info-name"> {{ extension.label }} </p> {% endblock %} {% block sw_extension_listing_card_info_description %} <p class="sw-extension-listing-card__info-description is--wrap-content"> {{ extension.shortDescription }} </p> {% endblock %} {% block sw_extension_listing_card_info_rating %} <div class="sw-extension-listing-card__info-rating"> <sw-extension-rating-stars class="sw-extension-listing-card__info-rating-stars" :rating="extension.rating" :size="12" /> <span class="sw-extension-listing-card__info-rating-count"> {{ extension.numberOfRatings }} </span> </div> {% endblock %} {% block sw_extension_listing_card_info_price %} <div class="sw-extension-listing-card__info-price"> <template v-if="isInstalled"> {{ $t('sw-extension-store.component.sw-extension-listing-card.labelInstalled') }} </template> <template v-else-if="isLicensed"> {{ $t('sw-extension-store.component.sw-extension-listing-card.labelLicensed') }} </template> <span v-else :class="discountClass">{{ calculatedPrice }}</span> </div> {% endblock %} {% block sw_extension_listing_card_label_display %} <sw-extension-store-label-display v-if="extension.labels.length > 0" :labels="extension.labels" class="sw-extension-listing-card__label-display" /> {% endblock %} </div> {% endblock %} {% endblock %} </div> {% endblock %}`,{Utils:i}=Shopware,t={template:s,inject:["shopwareExtensionService"],props:{extension:{type:Object,required:!0}},computed:{assetFilter(){return Shopware.Filter.getByName("asset")},previewMedia(){const e=i.get(this.extension,"images[0]",null);return e?{"background-image":`url('${e.remoteLink}')`,"background-size":"cover"}:{"background-image":`url('${this.assetFilter("/swagextensionstore/administration/static/img/theme/default_theme_preview.jpg")}')`}},recommendedVariant(){return this.shopwareExtensionService.orderVariantsByRecommendation(this.extension.variants)[0]},hasActiveDiscount(){return this.shopwareExtensionService.isVariantDiscounted(this.recommendedVariant)},discountClass(){return{"sw-extension-listing-card__info-price-discounted":this.hasActiveDiscount}},calculatedPrice(){return this.recommendedVariant?this.$t("sw-extension-store.general.labelPrice",{price:i.format.currency(this.shopwareExtensionService.getPriceFromVariant(this.recommendedVariant),"EUR")},this.shopwareExtensionService.mapVariantToRecommendation(this.recommendedVariant)):null},isInstalled(){return!!Shopware.Store.get("shopwareExtensions").myExtensions.data.some(e=>e.installedAt&&e.name===this.extension.name)},isLicensed(){const e=Shopware.Store.get("shopwareExtensions").myExtensions.data.find(n=>n.name===this.extension.name);return e===void 0?!1:!!e.storeLicense}},methods:{openDetailPage(){this.$router.push({name:"sw.extension.store.detail",params:{id:this.extension.id.toString()}})}}};export{t as default};
