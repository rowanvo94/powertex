const t=`{% block sw_extension_store_update_warning %} <sw-extension-store-error-card variant="info" class="sw-extension-store-update-warning" :title="$t('sw-extension-store.updateWarning.headline')" > <template #default> {% block sw_extension_store_update_warning_description %} <p> {{ $t('sw-extension-store.updateWarning.description') }} </p> <p class="sw-extension-store-update-warning__strong-text"> {{ $t('sw-extension-store.updateWarning.requestDescription') }} </p> {% endblock %} </template> <template #actions> {% block sw_extension_store_update_warning_actions %} <mt-button variant="primary" :is-loading="isUpdating" @click="updateExtension" > {{ $t('sw-extension-store.updateWarning.update') }} </mt-button> {% endblock %} </template> </sw-extension-store-error-card> {% endblock %}`,{Mixin:n}=Shopware,i={template:t,inject:["shopwareExtensionService","extensionStoreActionService","cacheApiService"],mixins:[n.getByName("notification")],data(){return{isUpdating:!1}},computed:{},methods:{async updateExtension(){this.isUpdating=!0;try{await this.extensionStoreActionService.downloadExtension("SwagExtensionStore"),await this.shopwareExtensionService.updateExtension("SwagExtensionStore","plugin"),await this.clearCacheAndReloadPage()}catch(e){this.isUpdating=!1,Shopware.Utils.debug.error(e),this.createNotificationError({message:this.$t("global.notification.unspecifiedSaveErrorMessage")})}},clearCacheAndReloadPage(){return this.cacheApiService.clear().then(()=>{window.location.reload()})}}};export{i as default};
