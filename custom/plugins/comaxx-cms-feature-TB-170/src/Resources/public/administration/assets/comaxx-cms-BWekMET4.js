const d='{% block sw_cms_sidebar_block_overview_category_options %} {% parent %} <option value="cms-grid">Grid / Columns</option> <option value="cms-custom">CMS / Custom</option> {% endblock %}';Shopware.Component.override("sw-cms-sidebar",{template:d});const g=`{% block sw_text_editor %} <template v-if="!inheritedGrid"> <div class="sw-text-editor" :class="classes"> {% block sw_text_editor_label %} <div v-if="showLabel" class="sw-text-editor__label" > <slot name="label"> {{ label }} </slot> </div> {% endblock %} {% block sw_text_editor_box %} <div class="sw-text-editor__box"> <textarea v-if="!isInlineEdit && !isCodeEdit" :ref="uniqueNameTiny" :placeholder="placeholder" :disabled="disabled" :value="value" /> {% block sw_text_editor_box_content %} <sw-code-editor v-if="isCodeEdit" :value="value" setFocus @blur="emitHtmlContent" ref="codeEditor"> </sw-code-editor> <div class="sw-text-editor__content" v-if="!isCodeEdit && isInlineEdit"> <div class="sw-text-editor__content-editor" :ref="uniqueNameTiny" :contenteditable="!disabled" :style="verticalAlignStyle" spellcheck="false" @focus="onFocus" @paste="onPaste" @blur="emitContent" @input="onContentChange" tabindex="-1" v-html="$sanitize(content, { ADD_ATTR: ['target'] })"> </div> <div v-if="placeholderVisible" class="sw-text-editor__content-placeholder" v-html="$sanitize(placeholder)"></div> </div> {% endblock %} </div> {% endblock %} <sw-field-error v-if="error" :error="error" /> </div> </template> <template v-else> {% parent %} </template> {% endblock %}`,{Component:u}=Shopware,{Criteria:xe}=Shopware.Data;let r=[{title:"Button Primary",classes:"btn btn-primary",selector:"a"},{title:"Button Secondary",classes:"btn btn-secondary",selector:"a"},{title:"Button Tertiary",classes:"btn btn-tertiary",selector:"a"},{title:"Custom class 1",classes:"custom-style-first",inline:"span"},{title:"Custom class 2",classes:"custom-style-second",inline:"span"},{title:"Horizontal List",classes:"list-horizontal",selector:"ul, ol"},{title:"Vertical List",classes:"list-vertical",selector:"ul, ol"}];u.override("sw-text-editor",{template:g,inject:["systemConfigApiService","repositoryFactory"],data(){return{config:{},domain:"ComaxxCms.config",handleValue:!0,mediaModalIsOpen:!1,categoriesCollection:[],settings:{mainType:null,entityName:null,entityId:null,url:null,newTab:!1},loaded:!1,inheritedGrid:!1,currentEditorInstance:!1,uniqueNameTiny:"tinyMce"+this._uid}},watch:{value:{handler(){this.currentEditorInstance&&window.tinymce.setActive(this.currentEditorInstance),this.$refs[this.uniqueNameTiny]&&this.$refs[this.uniqueNameTiny].innerHtml!==this.value&&(window.tinymce&&window.tinymce.activeEditor&&!this.isInlineEdit&&(this.value?this.value!==window.tinymce.activeEditor.getContent()&&window.tinymce.activeEditor.setContent(this.value):window.tinymce.activeEditor.setContent("")),this.$refs[this.uniqueNameTiny].innerHtml=this.value,this.content=this.value,this.isEmpty=this.emptyCheck(this.content),this.placeholderVisible=this.isEmpty)}}},computed:{},mounted(){this.isInlineEdit?this.mountedComponent():!this.disabled&&!this.loaded?this.$nextTick(function(){this.loaded=!0,this.loadTinyMceEditor()}):this.inheritedGrid=!0},methods:{loadTinyMceEditor(){const e=Shopware.Application.getContainer("factory").locale.getLastKnownLocale();this.readConfig(e)},readConfig(e){let t="";var i=this;return this.systemConfigApiService.getValues(this.domain).then(l=>{this.config=l;const o=this.config&&this.config["ComaxxCms.config.customMceConfig"]?this.config["ComaxxCms.config.customMceConfig"]:"";let n=this.getTinyMceConfig(e);try{o&&(typeof o=="object"?t=o:t=JSON.parse(o),Object.keys(t).sort().forEach(a=>{a==="style_formats"?n[a]=r.concat(t[a]):n[a]=t[a]}))}catch{console.log("The custom configuration is invalid.")}window.tinymce.init(n),i.currentEditorInstance=window.tinymce.activeEditor})},getTinyMceConfig(e){const t=this,i=`${(Shopware.Context.api.assetsPath+"ComaxxCms.config".split(".")[0]).toLowerCase()+"/administration/css/comaxx-cms.css"}`;return{target:this.$refs[this.uniqueNameTiny],language:e.substring(0,2),skin:"oxide",themes:"advanced",height:450,plugins:"searchreplace wordcount link lists",menu:{file:{title:"File",items:""},edit:{title:"Edit",items:"searchreplace"},view:{title:"View",items:""},insert:{title:"Insert",items:""},format:{title:"Format",items:"formats"},tools:{title:"Tools",items:"wordcount"},help:{title:"Help",items:""}},menubar:"file edit view insert format tools",contextmenu:"",toolbar:"formatselect | undo redo | bold italic underline strikethrough | alignleft aligncenter alignright alignjustify | outdent indent | numlist bullist | forecolor backcolor | removeformat link",browser_spellcheck:!1,importcss_append:!0,autosave_ask_before_unload:!1,relative_urls:!1,convert_urls:!1,remove_script_host:!0,style_formats_merge:!1,style_formats:r,templates:[],template_cdate_format:"[Date Created (CDATE): %m/%d/%Y : %H:%M:%S]",template_mdate_format:"[Date Modified (MDATE): %m/%d/%Y : %H:%M:%S]",quickbars_selection_toolbar:"bold italic | h2 h3 blockquote quickimage quicktable",noneditable_noneditable_class:"mceNonEditable",toolbar_mode:"wrap",extended_valid_elements:"button[*]|script[src|async|defer|type|charset|crossorigin]",force_br_newlines:!0,formats:{span:{inline:"span",classes:"tinymce-span"},span:{inline:"div",classes:"tinymce-div"}},content_css:i,block_formats:"Paragraph=p;Heading 1=h1;Heading 2=h2;Heading 3=h3;Heading 4=h4;Heading 5=h5;Heading 6=h6;Preformatted=pre;",init_instance_callback:function(l){l.on("Change",t.onChange)},setup:l=>{l.on("SetContent",t.onChange),typeof $=="function"&&l.on("blur",()=>{$(".tox-pop").remove()})},file_picker_callback:function(l,o,n){t.mediaModalIsOpen=!0,t.filePickerCallback=l,t.filePickerMeta=n}}},resetSettings(){this.settings.mainType=null,this.settings.entityName=null,this.settings.entityId=null,this.settings.url=null,this.settings.newTab=!1,this.settings.title=null},onSelectionAdd(e){e&&(this.emptyCategoriesCollection(),this.setCategoriesCollection(e),this.categoriesCollection.add(e))},onChange(e){this.emitHtmlContent(e.target.getContent()),this.handleValue=!1},onContentChange(){this.isEmpty=this.emptyCheck(this.getContentValue()),this.placeholderVisible=this.isEmpty,this.setWordCount()},setWordCount(){this.$refs[this.uniqueNameTiny]&&(this.textLength=this.$refs[this.uniqueNameTiny].innerText.length)},getContentValue(){return!this.$refs[this.uniqueNameTiny]||!this.$refs[this.uniqueNameTiny].innerHTML||!this.$refs[this.uniqueNameTiny].textContent||!this.$refs[this.uniqueNameTiny].textContent.length||this.$refs[this.uniqueNameTiny].textContent.length<=0?null:this.$refs[this.uniqueNameTiny].innerHTML},removeFocus(){this.isActive&&(this.$refs[this.uniqueNameTiny]&&this.$refs[this.uniqueNameTiny].innerHTML.length<=0&&(this.placeholderVisible=!0),this.isActive=!1,this.emitContent(),document.removeEventListener("mousedown",this.onDocumentClick))}}});const p='{% block sw_cms_grid_block_12 %} <div class="sw-cms-grid-block-12-column"> <slot name="col-1"></slot> </div> {% endblock %}';Shopware.Component.register("sw-cms-block-grid-12",{template:p});const h='{% block sw_cms_block_grid_12_preview %} <div class="sas-cms-grid-block-12-column-preview"> <div class="sas-cms-block-grid"> <div class="sas-cms-block-column" style="width: 100%;"></div> </div> </div> {% endblock %}';Shopware.Component.register("sw-cms-preview-grid-12",{template:h});Shopware.Service("cmsService").registerCmsBlock({name:"grid-12",label:"sas-cms-grid.blocks.grid.oneColumn.label",category:"cms-grid",component:"sw-cms-block-grid-12",previewComponent:"sw-cms-preview-grid-12",defaultConfig:{marginBottom:"20px",marginTop:"20px",marginLeft:"20px",marginRight:"20px",sizingMode:"boxed"},slots:{"col-1":"text"}});const v='{% block sw_cms_grid_block_6_6 %} <div class="sw-cms-grid-block-6-6-column"> <slot name="col-1"></slot> <slot name="col-2"></slot> </div> {% endblock %}';Shopware.Component.register("sw-cms-block-grid-6-6",{template:v});const f='{% block sw_cms_block_grid_6_6_preview %} <div class="sas-cms-grid-block-6-6-column-preview"> <div class="sas-cms-block-grid"> <div class="sas-cms-block-column" style="width: 50%;"></div> <div class="sas-cms-block-column" style="width: 50%;"></div> </div> </div> {% endblock %}';Shopware.Component.register("sw-cms-preview-grid-6-6",{template:f});Shopware.Service("cmsService").registerCmsBlock({name:"grid-6-6",label:"sas-cms-grid.blocks.grid.twoColumn.label",category:"cms-grid",component:"sw-cms-block-grid-6-6",previewComponent:"sw-cms-preview-grid-6-6",defaultConfig:{marginBottom:"20px",marginTop:"20px",marginLeft:"20px",marginRight:"20px",sizingMode:"boxed"},slots:{"col-1":"text","col-2":"text"}});const b='{% block sw_cms_block_grid_4_4_4_column %} <div class="sw-cms-block-product-three-column"> <slot name="col-1"></slot> <slot name="col-2"></slot> <slot name="col-3"></slot> </div> {% endblock %}';Shopware.Component.register("sw-cms-block-grid-4-4-4",{template:b});const w='{% block sw_cms_block_grid_4_4_4_column_preview %} <div class="sas-cms-grid-block-two-column-preview"> <div class="sas-cms-block-grid"> <div class="sas-cms-block-column" style="width: 33.33%;"></div> <div class="sas-cms-block-column" style="width: 33.33%;"></div> <div class="sas-cms-block-column" style="width: 33.33%;"></div> </div> </div> {% endblock %}';Shopware.Component.register("sas-cms-grid-block-three-column-preview",{template:w});Shopware.Service("cmsService").registerCmsBlock({name:"grid-4-4-4",label:"sas-cms-grid.blocks.grid.threeColumn.label",category:"cms-grid",component:"sw-cms-block-grid-4-4-4",previewComponent:"sas-cms-grid-block-three-column-preview",defaultConfig:{marginBottom:"20px",marginTop:"20px",marginLeft:"20px",marginRight:"20px",sizingMode:"boxed"},slots:{"col-1":"text","col-2":"text","col-3":"text"}});const y='{% block sw_cms_block_grid__3_3_3_3_column %} <div class="sw-cms-grid-block-3-3-3-3-column"> <slot name="col-1"></slot> <slot name="col-2"></slot> <slot name="col-3"></slot> <slot name="col-4"></slot> </div> {% endblock %}';Shopware.Component.register("sw-cms-block-grid-3-3-3-3",{template:y});const C='{% block sw_cms_block_grid__3_3_3_3_column_preview %} <div class="sas-cms-grid-block-four-column-preview"> <div class="sas-cms-block-grid"> <div class="sas-cms-block-column" style="width: 25%;"></div> <div class="sas-cms-block-column" style="width: 25%;"></div> <div class="sas-cms-block-column" style="width: 25%;"></div> <div class="sas-cms-block-column" style="width: 25%;"></div> </div> </div> {% endblock %}';Shopware.Component.register("sas-cms-grid-block-four-column-preview",{template:C});Shopware.Service("cmsService").registerCmsBlock({name:"grid-3-3-3-3",label:"sas-cms-grid.blocks.grid.fourColumn.label",category:"cms-grid",component:"sw-cms-block-grid-3-3-3-3",previewComponent:"sas-cms-grid-block-four-column-preview",defaultConfig:{marginBottom:"20px",marginTop:"20px",marginLeft:"20px",marginRight:"20px",sizingMode:"boxed"},slots:{"col-1":"text","col-2":"text","col-3":"text","col-4":"text"}});const k='{% block sw_cms_grid_block_five_columns %} <div class="sw-cms-grid-block-five-columns"> <slot name="col-1"></slot> <slot name="col-2"></slot> <slot name="col-3"></slot> <slot name="col-4"></slot> <slot name="col-5"></slot> </div> {% endblock %}';Shopware.Component.register("sw-cms-block-grid-five-columns",{template:k});const S='{% block sw_cms_block_grid_12_preview %} <div class="sas-cms-grid-block-five-columns-preview"> <div class="sas-cms-block-grid"> <div class="sas-cms-block-column" style="width: 20%;"></div> <div class="sas-cms-block-column" style="width: 20%;"></div> <div class="sas-cms-block-column" style="width: 20%;"></div> <div class="sas-cms-block-column" style="width: 20%;"></div> <div class="sas-cms-block-column" style="width: 20%;"></div> </div> </div> {% endblock %}';Shopware.Component.register("sw-cms-preview-grid-five-columns",{template:S});Shopware.Service("cmsService").registerCmsBlock({name:"grid-five-columns",label:"sas-cms-grid.blocks.grid.fiveColumn.label",category:"cms-grid",component:"sw-cms-block-grid-five-columns",previewComponent:"sw-cms-preview-grid-five-columns",defaultConfig:{marginBottom:"20px",marginTop:"20px",marginLeft:"20px",marginRight:"20px",sizingMode:"boxed"},slots:{"col-1":"text","col-2":"text","col-3":"text","col-4":"text","col-5":"text"}});const x='{% block sw_cms_block_grid__2_2_2_2_2_2_column %} <div class="sw-cms-grid-block-2-2-2-2-2-2-column"> <slot name="col-1"></slot> <slot name="col-2"></slot> <slot name="col-3"></slot> <slot name="col-4"></slot> <slot name="col-5"></slot> <slot name="col-6"></slot> </div> {% endblock %}';Shopware.Component.register("sw-cms-block-grid-2-2-2-2-2-2",{template:x});const _='{% block sw_cms_block_grid__2_2_2_2_2_2_column_preview %} <div class="sas-cms-grid-block-four-column-preview"> <div class="sas-cms-block-grid"> <div class="sas-cms-block-column" style="width: 16.6667%;"></div> <div class="sas-cms-block-column" style="width: 16.6667%;"></div> <div class="sas-cms-block-column" style="width: 16.6667%;"></div> <div class="sas-cms-block-column" style="width: 16.6667%;"></div> <div class="sas-cms-block-column" style="width: 16.6667%;"></div> <div class="sas-cms-block-column" style="width: 16.6667%;"></div> </div> </div> {% endblock %}';Shopware.Component.register("sas-cms-grid-block-six-column-preview",{template:_});Shopware.Service("cmsService").registerCmsBlock({name:"grid-2-2-2-2-2-2",label:"sas-cms-grid.blocks.grid.sixColumn.label",category:"cms-grid",component:"sw-cms-block-grid-2-2-2-2-2-2",previewComponent:"sas-cms-grid-block-six-column-preview",defaultConfig:{marginBottom:"20px",marginTop:"20px",marginLeft:"20px",marginRight:"20px",sizingMode:"boxed"},slots:{"col-1":"text","col-2":"text","col-3":"text","col-4":"text","col-5":"text","col-6":"text"}});const B='{% block sw_cms_block_product_3_6_3_column %} <div class="sw-cms-block-product-3-6-3-column"> <slot name="col-1"></slot> <slot name="col-2"></slot> <slot name="col-3"></slot> </div> {% endblock %}';Shopware.Component.register("sw-cms-block-grid-3-6-3",{template:B});const T='{% block sw_cms_block_product_3_6_3_column_preview %} <div class="sas-cms-grid-block-3-6-3-column-preview"> <div class="sas-cms-block-grid"> <div class="sas-cms-block-column" style="width: 25%;"></div> <div class="sas-cms-block-column" style="width: 50%;"></div> <div class="sas-cms-block-column" style="width: 25%;"></div> </div> </div> {% endblock %}';Shopware.Component.register("sas-cms-grid-block-3-6-3-column-preview",{template:T});Shopware.Service("cmsService").registerCmsBlock({name:"grid-3-6-3",label:"sas-cms-grid.blocks.grid.3-6-3.label",category:"cms-grid",component:"sw-cms-block-grid-3-6-3",previewComponent:"sas-cms-grid-block-3-6-3-column-preview",defaultConfig:{marginBottom:"20px",marginTop:"20px",marginLeft:"20px",marginRight:"20px",sizingMode:"boxed"},slots:{"col-1":"text","col-2":"text","col-3":"text"}});const I='{% block sw_cms_block_grid__6_3_3_column %} <div class="sw-cms-block-product-6_3_3-column"> <slot name="col-1"></slot> <slot name="col-2"></slot> <slot name="col-3"></slot> </div> {% endblock %}';Shopware.Component.register("sw-cms-block-grid-6-3-3",{template:I});const M='{% block sw_cms_block_product_6_3_3_column_preview %} <div class="sas-cms-grid-block-6-3-3-column-preview"> <div class="sas-cms-block-grid"> <div class="sas-cms-block-column" style="width: 50%;"></div> <div class="sas-cms-block-column" style="width: 25%;"></div> <div class="sas-cms-block-column" style="width: 25%;"></div> </div> </div> {% endblock %}';Shopware.Component.register("sas-cms-grid-block-6-3-3-column-preview",{template:M});Shopware.Service("cmsService").registerCmsBlock({name:"grid-6-3-3",label:"sas-cms-grid.blocks.grid.6-3-3.label",category:"cms-grid",component:"sw-cms-block-grid-6-3-3",previewComponent:"sas-cms-grid-block-6-3-3-column-preview",defaultConfig:{marginBottom:"20px",marginTop:"20px",marginLeft:"20px",marginRight:"20px",sizingMode:"boxed"},slots:{"col-1":"text","col-2":"text","col-3":"text"}});const F='{% block sw_cms_block_grid__3_3_6_column %} <div class="sw-cms-block-product-3_3_6-column"> <slot name="col-1"></slot> <slot name="col-2"></slot> <slot name="col-3"></slot> </div> {% endblock %}';Shopware.Component.register("sw-cms-block-grid-3-3-6",{template:F});const P='{% block sw_cms_block_product_3_3_6_column_preview %} <div class="sas-cms-grid-block-3-3-6-column-preview"> <div class="sas-cms-block-grid"> <div class="sas-cms-block-column" style="width: 25%;"></div> <div class="sas-cms-block-column" style="width: 25%;"></div> <div class="sas-cms-block-column" style="width: 50%;"></div> </div> </div> {% endblock %}';Shopware.Component.register("sas-cms-grid-block-3-3-6-column-preview",{template:P});Shopware.Service("cmsService").registerCmsBlock({name:"grid-3-3-6",label:"sas-cms-grid.blocks.grid.3-3-6.label",category:"cms-grid",component:"sw-cms-block-grid-3-3-6",previewComponent:"sas-cms-grid-block-3-3-6-column-preview",defaultConfig:{marginBottom:"20px",marginTop:"20px",marginLeft:"20px",marginRight:"20px",sizingMode:"boxed"},slots:{"col-1":"text","col-2":"text","col-3":"text"}});const H='{% block sw_cms_block_grid__2_8_2_column %} <div class="sw-cms-block-product-2_8_2-column"> <slot name="col-1"></slot> <slot name="col-2"></slot> <slot name="col-3"></slot> </div> {% endblock %}';Shopware.Component.register("sw-cms-block-grid-2-8-2",{template:H});const L='{% block sw_cms_block_product_2_8_2_column_preview %} <div class="sas-cms-grid-block-2-8-2-column-preview"> <div class="sas-cms-block-grid"> <div class="sas-cms-block-column" style="width: 16.6667%;"></div> <div class="sas-cms-block-column" style="width: 66.6667%;"></div> <div class="sas-cms-block-column" style="width: 16.6667%;"></div> </div> </div> {% endblock %}';Shopware.Component.register("sas-cms-grid-block-2-8-2-column-preview",{template:L});Shopware.Service("cmsService").registerCmsBlock({name:"grid-2-8-2",label:"sas-cms-grid.blocks.grid.2-8-2.label",category:"cms-grid",component:"sw-cms-block-grid-2-8-2",previewComponent:"sas-cms-grid-block-2-8-2-column-preview",defaultConfig:{marginBottom:"20px",marginTop:"20px",marginLeft:"20px",marginRight:"20px",sizingMode:"boxed"},slots:{"col-1":"text","col-2":"text","col-3":"text"}});const E='{% block sw_cms_grid_block_3_9 %} <div class="sw-cms-grid-block-3-9-column"> <slot name="col-1"></slot> <slot name="col-2"></slot> </div> {% endblock %}';Shopware.Component.register("sw-cms-block-grid-3-9",{template:E});const z='{% block sw_cms_block_grid_3_9_preview %} <div class="sas-cms-grid-block-3-9-column-preview"> <div class="sas-cms-block-grid"> <div class="sas-cms-block-column" style="width: 25%;"></div> <div class="sas-cms-block-column" style="width: 75%;"></div> </div> </div> {% endblock %}';Shopware.Component.register("sw-cms-preview-grid-3-9",{template:z});Shopware.Service("cmsService").registerCmsBlock({name:"grid-3-9",label:"sas-cms-grid.blocks.grid.3-9.label",category:"cms-grid",component:"sw-cms-block-grid-3-9",previewComponent:"sw-cms-preview-grid-3-9",defaultConfig:{marginBottom:"20px",marginTop:"20px",marginLeft:"20px",marginRight:"20px",sizingMode:"boxed"},slots:{"col-1":"text","col-2":"text"}});const D='{% block sw_cms_grid_block_9_3 %} <div class="sw-cms-grid-block-9-3-column"> <slot name="col-1"></slot> <slot name="col-2"></slot> </div> {% endblock %}';Shopware.Component.register("sw-cms-block-grid-9-3",{template:D});const A='{% block sw_cms_block_grid_9_3_preview %} <div class="sas-cms-grid-block-9-3-column-preview"> <div class="sas-cms-block-grid"> <div class="sas-cms-block-column" style="width: 75%;"></div> <div class="sas-cms-block-column" style="width: 25%;"></div> </div> </div> {% endblock %}';Shopware.Component.register("sw-cms-preview-grid-9-3",{template:A});Shopware.Service("cmsService").registerCmsBlock({name:"grid-9-3",label:"sas-cms-grid.blocks.grid.9-3.label",category:"cms-grid",component:"sw-cms-block-grid-9-3",previewComponent:"sw-cms-preview-grid-9-3",defaultConfig:{marginBottom:"20px",marginTop:"20px",marginLeft:"20px",marginRight:"20px",sizingMode:"boxed"},slots:{"col-1":"text","col-2":"text"}});const N='{% block sw_cms_grid_block_4_8 %} <div class="sw-cms-grid-block-4-8-column"> <slot name="col-1"></slot> <slot name="col-2"></slot> </div> {% endblock %}';Shopware.Component.register("sw-cms-block-grid-4-8",{template:N});const U='{% block sw_cms_block_grid_4_8_preview %} <div class="sas-cms-grid-block-4-8-column-preview"> <div class="sas-cms-block-grid"> <div class="sas-cms-block-column" style="width: 33.3333%;"></div> <div class="sas-cms-block-column" style="width: 66.666%;"></div> </div> </div> {% endblock %}';Shopware.Component.register("sw-cms-preview-grid-4-8",{template:U});Shopware.Service("cmsService").registerCmsBlock({name:"grid-4-8",label:"sas-cms-grid.blocks.grid.4-8.label",category:"cms-grid",component:"sw-cms-block-grid-4-8",previewComponent:"sw-cms-preview-grid-4-8",defaultConfig:{marginBottom:"20px",marginTop:"20px",marginLeft:"20px",marginRight:"20px",sizingMode:"boxed"},slots:{"col-1":"text","col-2":"text"}});const O='{% block sw_cms_grid_block_8_4 %} <div class="sw-cms-grid-block-8-4-column"> <slot name="col-1"></slot> <slot name="col-2"></slot> </div> {% endblock %}';Shopware.Component.register("sw-cms-block-grid-8-4",{template:O});const V='{% block sw_cms_block_grid_8_4_preview %} <div class="sas-cms-grid-block-8-4-column-preview"> <div class="sas-cms-block-grid"> <div class="sas-cms-block-column" style="width: 66.666%;"></div> <div class="sas-cms-block-column" style="width: 33.333%;"></div> </div> </div> {% endblock %}';Shopware.Component.register("sw-cms-preview-grid-8-4",{template:V});Shopware.Service("cmsService").registerCmsBlock({name:"grid-8-4",label:"sas-cms-grid.blocks.grid.8-4.label",category:"cms-grid",component:"sw-cms-block-grid-8-4",previewComponent:"sw-cms-preview-grid-8-4",defaultConfig:{marginBottom:"20px",marginTop:"20px",marginLeft:"20px",marginRight:"20px",sizingMode:"boxed"},slots:{"col-1":"text","col-2":"text"}});const R='{% block sw_cms_grid_block_5_7 %} <div class="sw-cms-grid-block-5-7-column"> <slot name="col-1"></slot> <slot name="col-2"></slot> </div> {% endblock %}';Shopware.Component.register("sw-cms-block-grid-5-7",{template:R});const j='{% block sw_cms_block_grid_5_7_preview %} <div class="sas-cms-grid-block-5-7-column-preview"> <div class="sas-cms-block-grid"> <div class="sas-cms-block-column" style="width: 51.67%;"></div> <div class="sas-cms-block-column" style="width: 58.333%;"></div> </div> </div> {% endblock %}';Shopware.Component.register("sw-cms-preview-grid-5-7",{template:j});Shopware.Service("cmsService").registerCmsBlock({name:"grid-5-7",label:"sas-cms-grid.blocks.grid.5-7.label",category:"cms-grid",component:"sw-cms-block-grid-5-7",previewComponent:"sw-cms-preview-grid-5-7",defaultConfig:{marginBottom:"20px",marginTop:"20px",marginLeft:"20px",marginRight:"20px",sizingMode:"boxed"},slots:{"col-1":"text","col-2":"text"}});const q='{% block sw_cms_grid_block_7_5 %} <div class="sw-cms-grid-block-7-5-column"> <slot name="col-1"></slot> <slot name="col-2"></slot> </div> {% endblock %}';Shopware.Component.register("sw-cms-block-grid-7-5",{template:q});const W='{% block sw_cms_block_grid_7_5_preview %} <div class="sas-cms-grid-block-7-5-column-preview"> <div class="sas-cms-block-grid"> <div class="sas-cms-block-column" style="width: 58.333%;"></div> <div class="sas-cms-block-column" style="width: 51.67%;"></div> </div> </div> {% endblock %}';Shopware.Component.register("sw-cms-preview-grid-7-5",{template:W});Shopware.Service("cmsService").registerCmsBlock({name:"grid-7-5",label:"sas-cms-grid.blocks.grid.7-5.label",category:"cms-grid",component:"sw-cms-block-grid-7-5",previewComponent:"sw-cms-preview-grid-7-5",defaultConfig:{marginBottom:"20px",marginTop:"20px",marginLeft:"20px",marginRight:"20px",sizingMode:"boxed"},slots:{"col-1":"text","col-2":"text"}});const G='{% block sw_cms_block_cta %} <div class="sw-cms-block-cta"> <slot name="content">{% block sw_cms_block_slot_content%}{% endblock %}</slot> </div> {% endblock %}';Shopware.Component.register("sw-cms-block-cta",{template:G});const Y=`{% block sw_cms_element_cta_preview %} <div class="sw-cms-preview-cta"> <div class="sw-cms-preview-cta-content"> <h1>Preview</h1> <p>Lorem ipsum</p> <div class="sw-cms-preview-cta-button">Button text</div> </div> <div class="sw-cms-preview-cta-image"> <img :src="assetFilter('/administration/static/img/cms/preview_mountain_small.jpg')" alt="" > </div> </div> {% endblock %}`;Shopware.Component.register("sw-cms-preview-cta",{template:Y,computed:{assetFilter(){return Shopware.Filter.getByName("asset")}}});Shopware.Service("cmsService").registerCmsBlock({name:"cta",category:"cms-custom",label:"Cta with background",component:"sw-cms-block-cta",previewComponent:"sw-cms-preview-cta",slots:{content:"cta"}});const J='{% block sw_cms_block_category_slider %} <div class="sw-cms-block-category-slider"> <slot name="content">{% block sw_cms_block_slot_content%}{% endblock %}</slot> </div> {% endblock %}';Shopware.Component.register("sw-cms-block-category-slider",{template:J});const K=`{% block sw_cms_block_featured_links_preview %} <div class="sw-cms-preview-block-category-slider"> <div class="sw-cms-preview-category-slider-title"> <h2>Category slider<br>title</h2> </div> <div class="sw-cms-preview-block-category-slider-content"> <sw-icon name="regular-chevron-left" size="10" /> <div class="sw-cms-preview-block-category-slider-items"> <div class="sw-cms-preview-block-category-slider-items-item"> <img :src="assetFilter('/administration/static/img/cms/preview_mountain_small.jpg')" alt="" > <span class="sw-cms-preview-block-category-slider-items-item-title">Categorie</span> </div> <div class="sw-cms-preview-block-category-slider-items-item"> <img :src="assetFilter('/administration/static/img/cms/preview_mountain_small.jpg')" alt="" > <span class="sw-cms-preview-block-category-slider-items-item-title">Categorie</span> </div> <div class="sw-cms-preview-block-category-slider-items-item"> <img :src="assetFilter('/administration/static/img/cms/preview_mountain_small.jpg')" alt="" > <span class="sw-cms-preview-block-category-slider-items-item-title">Categorie</span> </div> </div> <sw-icon name="regular-chevron-right" size="10" /> </div> </div> {% endblock %}`;Shopware.Component.register("sw-cms-preview-category-slider",{template:K,computed:{assetFilter(){return Shopware.Filter.getByName("asset")}}});Shopware.Service("cmsService").registerCmsBlock({name:"category-slider",category:"cms-custom",label:"Category slider",component:"sw-cms-block-category-slider",previewComponent:"sw-cms-preview-category-slider",defaultConfig:{marginBottom:"20px",marginTop:"20px",marginLeft:"20px",marginRight:"20px",sizingMode:"boxed"},slots:{content:"category-slider"}});const Q='{% block sw_cms_block_featured_links %} <slot name="banner-featured-links"></slot> <div class="sw-cms-block-featured-links-container-items"> <div class="sw-cms-block-featured-links-container-item"> <slot name="mini-cta-1"></slot> </div> <div class="sw-cms-block-featured-links-container-item"> <slot name="mini-cta-2"></slot> </div> <div class="sw-cms-block-featured-links-container-item"> <slot name="mini-cta-3"></slot> </div> <div class="sw-cms-block-featured-links-container-item"> <slot name="mini-cta-4"></slot> </div> </div> {% endblock %}';Shopware.Component.register("sw-cms-block-featured-links",{template:Q});const X=`{% block sw_cms_block_featured_links_preview %} <div class="sw-cms-preview-featured-links"> <div class="sw-cms-preview-featured-links-title"> <h2>Featured link<br>title</h2> </div> <div class="sw-cms-preview-featured-links-items"> <div class="sw-cms-preview-featured-links-items-item"> <img :src="assetFilter('/administration/static/img/cms/preview_mountain_small.jpg')" alt="" > <span class="sw-cms-preview-featured-links-items-item-title">Item link</span> <span class="sw-cms-preview-featured-links-items-item-button">→</span> </div> <div class="sw-cms-preview-featured-links-items-item"> <img :src="assetFilter('/administration/static/img/cms/preview_mountain_small.jpg')" alt="" > <span class="sw-cms-preview-featured-links-items-item-title">Item link</span> <span class="sw-cms-preview-featured-links-items-item-button">→</span> </div> <div class="sw-cms-preview-featured-links-items-item"> <img :src="assetFilter('/administration/static/img/cms/preview_mountain_small.jpg')" alt="" > <span class="sw-cms-preview-featured-links-items-item-title">Item link</span> <span class="sw-cms-preview-featured-links-items-item-button">→</span> </div> <div class="sw-cms-preview-featured-links-items-item"> <img :src="assetFilter('/administration/static/img/cms/preview_mountain_small.jpg')" alt="" > <span class="sw-cms-preview-featured-links-items-item-title">Item link</span> <span class="sw-cms-preview-featured-links-items-item-button">→</span> </div> </div> </div> {% endblock %}`;Shopware.Component.register("sw-cms-preview-featured-links",{template:X,computed:{assetFilter(){return Shopware.Filter.getByName("asset")}}});Shopware.Service("cmsService").registerCmsBlock({name:"featured-links",category:"commerce",label:"Featured Links",component:"sw-cms-block-featured-links",previewComponent:"sw-cms-preview-featured-links",defaultConfig:{marginBottom:"20px",marginTop:"20px",marginLeft:"20px",marginRight:"20px",sizingMode:"boxed"},slots:{"banner-featured-links":"banner-featured-links","mini-cta-1":"mini","mini-cta-2":"mini","mini-cta-3":"mini","mini-cta-4":"mini"}});const Z='{% block sw_cms_block_banner_link %} <div class="sw-cms-block-banner-link"> <slot name="content">{% block sw_cms_block_slot_content%}{% endblock %}</slot> </div> {% endblock %}';Shopware.Component.register("sw-cms-block-banner-link",{template:Z});const ee=`{% block sw_cms_element_banner_link_preview %} <div class="sw-cms-preview-banner-link"> <div class="sw-cms-preview-banner-link-content"> <h1>Preview</h1> <p>Lorem ipsum</p> <div class="sw-cms-preview-banner-link-label">label</div> <div class="sw-cms-preview-banner-link-button">Button text</div> </div> <div class="sw-cms-preview-banner-link-image"> <img :src="assetFilter('/administration/static/img/cms/preview_mountain_small.jpg')" alt="" > </div> </div> {% endblock %}`;Shopware.Component.register("sw-cms-preview-banner-link",{template:ee,computed:{assetFilter(){return Shopware.Filter.getByName("asset")}}});Shopware.Service("cmsService").registerCmsBlock({name:"banner-link",category:"cms-custom",label:"sw-cms.elements.banner-link.label",component:"sw-cms-block-banner-link",previewComponent:"sw-cms-preview-banner-link",slots:{content:"banner-link"}});const te='{% block sw_cms_element_cta %} <div class="sw-cms-el-cta" :style="ctaBackgroundColor"> <div class="sw-cms-el-cta-content"> <component :is="ctaTitleTag" :style="ctaTitleColor" v-text="element.config.ctaTitle.value" /> <p v-html="element.config.ctaDescription.value"></p> <a v-if="!element.config.ctaClickable.value" :class="buttonTypeClass"> {{ element.config.ctaButtonText.value }} </a> </div> <div class="sw-cms-el-cta-image"> <img :src="mediaUrl" alt="" > </div> </div> {% endblock %}';Shopware.Component.register("sw-cms-el-cta",{template:te,mixins:["cms-element"],computed:{ctaTitle(){return`${this.element.config.ctaTitle.value}`},ctaTitleTag(){var e;return((e=this.element.config.ctaTitleType)==null?void 0:e.value)||"h2"},ctaTitleColor(){return{color:this.element.config.ctaTitleColor.value}},ctaDescription(){return`${this.element.config.ctaDescription.value}`},ctaBackgroundColor(){return{"background-color":this.element.config.ctaBackgroundColor.value}},ctaButtonText(){return`${this.element.config.ctaButtonText.value}`},ctaButtonUrl(){return`${this.element.config.ctaButtonUrl.value}`},ctaClickable(){return this.element.config.ctaClickable.value},buttonTypeClass(){return`btn btn-${this.element.config.buttonType.value}`},ctaIconBorderColor(){return{"border-color":this.element.config.ctaIconBorderColor.value}},displayModeClass(){return this.element.config.displayMode.value==="standard"?null:`is--${this.element.config.displayMode.value}`},styles(){return{"min-height":this.element.config.displayMode.value==="cover"&&this.element.config.minHeight.value&&this.element.config.minHeight.value!==0?this.element.config.minHeight.value:"340px"}},imgStyles(){return{"align-self":this.element.config.verticalAlign.value||null}},horizontalAlign(){var e;return{"justify-content":((e=this.element.config.horizontalAlign)==null?void 0:e.value)||null}},mediaUrl(){const e=this.assetFilter("administration/static/img/cms/preview_mountain_large.jpg"),t=this.element.data.media;if(this.element.config.media.source==="mapped"){const l=this.getDemoValue(this.element.config.media.value);if(l&&l.url)return l.url}return t&&t.id?this.element.data.media.url:t&&t.url?this.assetFilter(t.url):e},assetFilter(){return Shopware.Filter.getByName("asset")},mediaConfigValue(){var e,t,i;return(i=(t=(e=this.element)==null?void 0:e.config)==null?void 0:t.sliderItems)==null?void 0:i.value}},watch:{cmsPageState:{deep:!0,handler(){this.$forceUpdate()}},mediaConfigValue(e){var l,o,n,s,a,c;const t=(n=(o=(l=this.element)==null?void 0:l.data)==null?void 0:o.media)==null?void 0:n.id;((c=(a=(s=this.element)==null?void 0:s.config)==null?void 0:a.media)==null?void 0:c.source)==="static"&&t&&e!==t&&(this.element.config.media.value=t)}},created(){this.createdComponent()},methods:{createdComponent(){this.initElementConfig("cta"),this.initElementData("cta")}}});const ie=`{% block sw_cms_element_cta_config %} <sw-tabs position-identifier="sw-cms-element-cta-config" class="sw-cms-el-config-cta__tabs" default-item="general" > <template #default="{ active }"> <sw-tabs-item :title="$tc('sw-cms.elements.general.config.tab.general')" name="general" :active-tab="active" > General settings </sw-tabs-item> <sw-tabs-item :title="$tc('sw-cms.elements.general.config.tab.button')" name="button" :active-tab="active" > Button Settings </sw-tabs-item> </template> <template #content="{ active }"> <sw-container v-if="active === 'general'" class="sw-cms-el-config-cta__tab-content" > <sw-text-field v-model="ctaTitle" label="Call to action title" placeholder="Enter a title" @update:value="changeTitle"> </sw-text-field> <sw-select-field v-model:value="element.config.ctaTitleType.value" class="sw-cms-el-config-cta-title-type" label="Title HTML tag" @update:value="onChangeTitleType" > <option value="h1">H1</option> <option value="h2">H2</option> <option value="h3">H3</option> <option value="h4">H4</option> <option value="h5">H5</option> <option value="h6">H6</option> <option value="span">Span</option> </sw-select-field> <sw-colorpicker v-model="ctaTitleColor" colorOutput="hex" label="Title color" :alpha="true" zIndex="1000" @update:value="onChangeTitleColor"> </sw-colorpicker> <sw-text-editor v-model="ctaDescription" label="Call to action description" placeholder="Enter a description" @update:value="changeDescription"> </sw-text-editor> <sw-colorpicker v-model="ctaBackgroundColor" colorOutput="hex" label="Call to action background color" :alpha="true" zIndex="1000" @update:value="changeBackgroundColor"> </sw-colorpicker> <div class="sw-cms-el-config-image"> {% block sw_cms_element_image_config_media_upload %} <sw-cms-mapping-field v-model:config="element.config.media" :label="$tc('sw-cms.elements.image.label')" value-types="entity" entity="media" > <sw-media-upload-v2 variant="regular" :upload-tag="uploadTag" :source="previewSource" :allow-multi-select="false" :default-folder="cmsPageState.pageEntityName" :caption="$tc('sw-cms.elements.general.config.caption.mediaUpload')" @media-upload-sidebar-open="onOpenMediaModal" @media-upload-remove-image="onImageRemove" /> <template #preview="{ demoValue }"> <div class="sw-cms-el-config-image__mapping-preview"> <img v-if="demoValue.url" :src="demoValue.url" alt="" > <sw-alert v-else class="sw-cms-el-config-image__preview-info" variant="info" > {{ $tc('sw-cms.detail.label.mappingEmptyPreview') }} </sw-alert> </div> </template> </sw-cms-mapping-field> <sw-upload-listener :upload-tag="uploadTag" auto-upload @media-upload-finish="onImageUpload" /> {% endblock %} {% block sw_cms_element_image_config_media_modal %} <sw-media-modal-v2 v-if="mediaModalIsOpen" variant="full" :caption="$tc('sw-cms.elements.general.config.caption.mediaUpload')" :entity-context="cmsPageState.entityName" :allow-multi-select="false" :initial-folder-id="cmsPageState.defaultMediaFolderId" @media-upload-remove-image="onImageRemove" @media-modal-selection-change="onSelectionChanges" @modal-close="onCloseModal" /> {% endblock %} </div> </sw-container> <sw-container v-if="active === 'button'" class="sw-cms-el-config-cta__tab-button-settings" > <sw-checkbox-field v-model="ctaClickable" label="Element is clickable" helpText="This removes the button element" @update:value="onChangeCtaClickable" ></sw-checkbox-field> <sw-text-field v-model="ctaButtonText" label="Call to action button text" placeholder="Enter cta button text" v-if="!element.config.ctaClickable.value" @update:value="changeButtonText"> </sw-text-field> <sw-text-field v-model="ctaButtonUrl" label="Call to action button url" placeholder="Enter cta button url" @update:value="changeButtonUrl"> </sw-text-field> <sw-select-field v-model:value="element.config.buttonType.value" class="sw-cms-el-config-button-type" label="Button type" v-if="!element.config.ctaClickable.value" @update:value="onChangeButtonType" > <option value="primary"> Primary </option> <option value="secondary"> Secondary </option> <option value="tertiary"> Tertiary </option> </sw-select-field> <sw-checkbox-field v-model="ctaIconShow" label="Show CTA Icon" @update:value="onChangeShowIcon" > </sw-checkbox-field> <sw-colorpicker v-model="ctaIconBorderColor" colorOutput="hex" label="Icon border color" :alpha="true" zIndex="1000" @update:value="onChangeIconBorderColor"> </sw-colorpicker> <sw-colorpicker v-model="ctaIconBackgroundColor" colorOutput="hex" label="Icon background color" :alpha="true" zIndex="1000" @update:value="onChangeIconBackgroundColor"> </sw-colorpicker> <sw-colorpicker v-model="ctaIconColor" colorOutput="hex" label="Icon color" :alpha="true" zIndex="1000" @update:value="onChangeIconColor"> </sw-colorpicker> </sw-container> </template> </sw-tabs> {% endblock %}`;Shopware.Component.register("sw-cms-el-config-cta",{template:ie,mixins:["cms-element"],inject:["repositoryFactory"],data(){return{mediaModalIsOpen:!1,initialFolderId:null}},computed:{ctaTitle:{get(){return this.element.config.ctaTitle.value},set(e){this.element.config.ctaTitle.value=e}},ctaTitleType:{get(){var e;return((e=this.element.config.ctaTitleType)==null?void 0:e.value)||"h2"},set(e){this.element.config.ctaTitleType.value=e,this.$emit("element-update",this.element)}},ctaTitleColor:{get(){return this.element.config.ctaTitleColor.value},set(e){this.element.config.ctaTitleColor.value=e}},ctaDescription:{get(){return this.element.config.ctaDescription.value},set(e){this.element.config.ctaDescription.value=e}},ctaBackgroundColor:{get(){return this.element.config.ctaBackgroundColor.value},set(e){this.element.config.ctaBackgroundColor.value=e}},ctaClickable:{get(){return this.element.config.ctaClickable.value},set(e){this.element.config.ctaClickable.value=e,this.$emit("element-update",this.element)}},ctaButtonText:{get(){return this.element.config.ctaButtonText.value},set(e){this.element.config.ctaButtonText.value=e}},ctaButtonUrl:{get(){return this.element.config.ctaButtonUrl.value},set(e){this.element.config.ctaButtonUrl.value=e}},ctaIconShow:{get(){return this.element.config.ctaIconShow.value},set(e){this.element.config.ctaIconShow.value=e}},ctaIconBorderColor:{get(){return this.element.config.ctaIconBorderColor.value},set(e){this.element.config.ctaIconBorderColor.value=e}},ctaIconColor:{get(){return this.element.config.ctaIconColor.value},set(e){this.element.config.ctaIconColor.value=e}},ctaIconBackgroundColor:{get(){return this.element.config.ctaIconBackgroundColor.value},set(e){this.element.config.ctaIconBackgroundColor.value=e}},mediaRepository(){return this.repositoryFactory.create("media")},uploadTag(){return`cms-element-media-config-${this.element.id}`},previewSource(){var e,t,i;return(i=(t=(e=this.element)==null?void 0:e.data)==null?void 0:t.media)!=null&&i.id?this.element.data.media:this.element.config.media.value}},created(){this.createdComponent()},methods:{createdComponent(){this.initElementConfig("cta"),this.element.config.ctaIconShow||(this.element.config.ctaIconShow={source:"static",value:!1})},changeTitle(e){this.element.config.ctaTitle.value=e,this.$emit("element-update",this.element)},changeTitleType(e){this.element.config.ctaTitleType.value=e,this.$emit("element-update",this.element)},changeButtonUrl(e){this.element.config.ctaButtonUrl.value=e,this.$emit("element-update",this.element)},onChangeTitleColor(e){this.element.config.ctaTitleColor.value=e,this.$emit("element-update",this.element)},changeDescription(e){this.element.config.ctaDescription.value=e,this.$emit("element-update",this.element)},changeBackgroundColor(e){this.element.config.ctaBackgroundColor.value=e,this.$emit("element-update",this.element)},changeButtonText(e){this.element.config.ctaButtonText.value=e,this.$emit("element-update",this.element)},onChangeCtaClickable(e){this.element.config.ctaClickable.value=e,this.$emit("element-update",this.element)},onChangeButtonType(e){this.$emit("element-update",this.element)},onChangeShowIcon(e){this.element.config.ctaIconShow.value=e,this.$emit("element-update",this.element)},onChangeIconBorderColor(e){this.element.config.ctaIconBorderColor.value=e,this.$emit("element-update",this.element)},onChangeIconBackgroundColor(e){this.element.config.ctaIconBackgroundColor.value=e,this.$emit("element-update",this.element)},onChangeIconColor(e){this.element.config.ctaIconColor.value=e,this.$emit("element-update",this.element)},async onImageUpload({targetId:e}){const t=await this.mediaRepository.get(e,Shopware.Context.api);this.element.config.media.value=t.id,this.updateElementData(t),this.$emit("element-update",this.element)},onImageRemove(){this.element.config.media.value=null,this.updateElementData(),this.$emit("element-update",this.element)},onCloseModal(){this.mediaModalIsOpen=!1},onSelectionChanges(e){const t=e[0];this.element.config.media.value=t.id,this.updateElementData(t),this.$emit("element-update",this.element)},updateElementData(e=null){this.$set(this.element.data,"mediaId",e===null?null:e.id),this.$set(this.element.data,"media",e)},onOpenMediaModal(){this.mediaModalIsOpen=!0}}});const le=`{% block sw_cms_element_cta_preview %} <div class="sw-cms-preview-cta"> <div class="sw-cms-preview-cta-content"> <h5>Lorem ipsum</h5> <div class="sw-cms-preview-cta-button">Button</div> </div> <div class="sw-cms-preview-cta-image"> <img :src="assetFilter('/administration/static/img/cms/preview_mountain_small.jpg')" alt="" > </div> </div> {% endblock %}`;Shopware.Component.register("sw-cms-el-preview-cta",{template:le,computed:{assetFilter(){return Shopware.Filter.getByName("asset")}}});Shopware.Service("cmsService").registerCmsElement({name:"cta",label:"sw-cms.elements.cta.label",component:"sw-cms-el-cta",configComponent:"sw-cms-el-config-cta",previewComponent:"sw-cms-el-preview-cta",defaultConfig:{media:{source:"static",value:null,entity:{name:"media"}},ctaTitle:{source:"static",value:"CTA Title"},ctaTitleType:{source:"static",value:"h2"},ctaTitleColor:{source:"static",value:"#000"},ctaDescription:{source:"static",value:"Lorem ipsum dolor sit amet, consectetur adipiscing elit."},ctaBackgroundColor:{source:"static",value:"#ececec"},ctaButtonText:{source:"static",value:"Button text"},ctaButtonUrl:{source:"static",value:"Button url"},buttonType:{source:"static",value:"primary"},ctaIconShow:{source:"static",value:null},ctaIconBorderColor:{source:"static",value:"#000"},ctaIconBackgroundColor:{source:"static",value:"#000"},ctaIconColor:{source:"static",value:"#FFF"},ctaClickable:{source:"static",value:!1}}});const oe='{% block sw_cms_element_mini %} <div class="sw-cms-el-mini" :style="miniBackgroundColor"> <div class="sw-cms-el-mini-content"> <h1 :style="miniTextColor">{{ element.config.miniTitle.value }}</h1> <p :style="miniTextColor" v-html="element.config.miniDescription.value"></p> <a :style="miniButtonStyles" class="btn btn-primary"> {{ element.config.miniButtonText.value }} </a> </div> <div class="sw-cms-el-mini-image" :class="displayModeClass"> <img :src="mediaUrl" alt="" > </div> </div> {% endblock %}';Shopware.Component.register("sw-cms-el-mini",{template:oe,mixins:["cms-element"],computed:{miniTitle(){return`${this.element.config.miniTitle.value}`},miniTitleSize(){return`${this.element.config.miniTitleSize.value}`},miniDescription(){return`${this.element.config.miniDescription.value}`},miniDescriptionSize(){return`${this.element.config.miniDescriptionSize.value}`},miniTextColor(){return{color:this.element.config.miniTextColor.value}},miniBackgroundColor(){return{"background-color":this.element.config.miniBackgroundColor.value}},miniButtonText(){return`${this.element.config.miniButtonText.value}`},miniButtonUrl(){return`${this.element.config.miniButtonUrl.value}`},miniButtonColor(){return{color:this.element.config.miniButtonColor.value}},miniButtonBackgroundColor(){return{"background-color":this.element.config.miniButtonBackgroundColor.value}},miniButtonStyles(){return{...this.miniButtonColor,...this.miniButtonBackgroundColor}},displayModeClass(){return this.element.config.displayMode.value==="standard"?null:`is--${this.element.config.displayMode.value}`},styles(){return{"min-height":this.element.config.displayMode.value==="cover"&&this.element.config.minHeight.value&&this.element.config.minHeight.value!==0?this.element.config.minHeight.value:"340px"}},imgStyles(){return{"align-self":this.element.config.verticalAlign.value||null}},horizontalAlign(){var e;return{"justify-content":((e=this.element.config.horizontalAlign)==null?void 0:e.value)||null}},mediaUrl(){const e=this.assetFilter("administration/static/img/cms/preview_mountain_large.jpg"),t=this.element.data.media;if(this.element.config.media.source==="mapped"){const l=this.getDemoValue(this.element.config.media.value);if(l&&l.url)return l.url}return t&&t.id?this.element.data.media.url:t&&t.url?this.assetFilter(t.url):e},assetFilter(){return Shopware.Filter.getByName("asset")},mediaConfigValue(){var e,t,i;return(i=(t=(e=this.element)==null?void 0:e.config)==null?void 0:t.sliderItems)==null?void 0:i.value}},watch:{cmsPageState:{deep:!0,handler(){this.$forceUpdate()}},mediaConfigValue(e){var l,o,n,s,a,c;const t=(n=(o=(l=this.element)==null?void 0:l.data)==null?void 0:o.media)==null?void 0:n.id;((c=(a=(s=this.element)==null?void 0:s.config)==null?void 0:a.media)==null?void 0:c.source)==="static"&&t&&e!==t&&(this.element.config.media.value=t)}},created(){this.createdComponent()},methods:{createdComponent(){this.initElementConfig("mini"),this.initElementData("mini")}}});const ne=`{% block sw_cms_element_mini_config %} <sw-text-field v-model="miniTitle" class="" label="Mini element title" placeholder="Enter a title" @update:value="changeTitle"> </sw-text-field> <sw-text-field v-model="miniTitleSize" class="" label="Mini element title font size" placeholder="1rem" @update:value="changeTitleSize"> </sw-text-field> <sw-text-field v-model="miniDescription" class="" label="Mini element description" placeholder="Enter a description" @update:value="changeDescription"> </sw-text-field> <sw-text-field v-model="miniDescriptionSize" class="" label="Mini element description font size" placeholder=".9rem" @update:value="changeDescriptionSize"> </sw-text-field> <sw-colorpicker v-model="miniTextColor" colorOutput="hex" class="" label="Mini element text color" :alpha="true" zIndex="1000" @update:value="changeTextColor"> </sw-colorpicker> <sw-colorpicker v-model="miniBackgroundColor" colorOutput="hex" class="" label="Mini element background color" :alpha="true" zIndex="1000" @update:value="changeBackgroundColor"> </sw-colorpicker> <sw-text-field v-model="miniButtonText" class="" label="Mini element button text" placeholder="Enter mini button text" @update:value="changeButtonText"> </sw-text-field> <sw-text-field v-model="miniButtonUrl" class="" label="Mini element button url" placeholder="Enter mini button url" @update:value="changeButtonUrl"> </sw-text-field> <sw-colorpicker v-model="miniButtonColor" colorOutput="hex" class="" label="Mini element button icon color" :alpha="true" zIndex="1000" @update:value="changeButtonColor"> </sw-colorpicker> <sw-colorpicker v-model="miniButtonBackgroundColor" colorOutput="hex" class="" label="Mini element button background color" :alpha="true" zIndex="1000" @update:value="changeButtonBackgroundColor"> </sw-colorpicker> <sw-select-field v-model:value="element.config.displayMode.value" class="sw-cms-el-config-image__display-mode" :label="$tc('sw-cms.elements.general.config.label.displayMode')" @update:value="onChangeDisplayMode" > <option value="cover"> {{ $tc('sw-cms.elements.general.config.label.displayModeCover') }} </option> <option value="contain"> {{ $tc('sw-cms.elements.general.config.label.displayModeContain') }} </option> </sw-select-field> <div class="sw-cms-el-config-image"> {% block sw_cms_element_image_config_media_upload %} <sw-cms-mapping-field v-model:config="element.config.media" :label="$tc('sw-cms.elements.image.label')" value-types="entity" entity="media" > <sw-media-upload-v2 variant="regular" :upload-tag="uploadTag" :source="previewSource" :allow-multi-select="false" :default-folder="cmsPageState.pageEntityName" :caption="$tc('sw-cms.elements.general.config.caption.mediaUpload')" @media-upload-sidebar-open="onOpenMediaModal" @media-upload-remove-image="onImageRemove" /> <template #preview="{ demoValue }"> <div class="sw-cms-el-config-image__mapping-preview"> <img v-if="demoValue.url" :src="demoValue.url" alt="" > <sw-alert v-else class="sw-cms-el-config-image__preview-info" variant="info" > {{ $tc('sw-cms.detail.label.mappingEmptyPreview') }} </sw-alert> </div> </template> </sw-cms-mapping-field> <sw-upload-listener :upload-tag="uploadTag" auto-upload @media-upload-finish="onImageUpload" /> {% endblock %} {% block sw_cms_element_image_config_media_modal %} <sw-media-modal-v2 v-if="mediaModalIsOpen" variant="full" :caption="$tc('sw-cms.elements.general.config.caption.mediaUpload')" :entity-context="cmsPageState.entityName" :allow-multi-select="false" :initial-folder-id="cmsPageState.defaultMediaFolderId" @media-upload-remove-image="onImageRemove" @media-modal-selection-change="onSelectionChanges" @modal-close="onCloseModal" /> {% endblock %} </div> {% endblock %}`;Shopware.Component.register("sw-cms-el-config-mini",{template:ne,mixins:["cms-element"],inject:["repositoryFactory"],data(){return{mediaModalIsOpen:!1,initialFolderId:null}},computed:{miniTitle:{get(){return this.element.config.miniTitle.value},set(e){this.element.config.miniTitle.value=e}},miniTitleSize:{get(){return this.element.config.miniTitleSize.value},set(e){this.element.config.miniTitleSize.value=e}},miniDescription:{get(){return this.element.config.miniDescription.value},set(e){this.element.config.miniDescription.value=e}},miniDescriptionSize:{get(){return this.element.config.miniDescriptionSize.value},set(e){this.element.config.miniDescriptionSize.value=e}},miniTextColor:{get(){return this.element.config.miniTextColor.value},set(e){this.element.config.miniTextColor.value=e}},miniBackgroundColor:{get(){return this.element.config.miniBackgroundColor.value},set(e){this.element.config.miniBackgroundColor.value=e}},miniButtonText:{get(){return this.element.config.miniButtonText.value},set(e){this.element.config.miniButtonText.value=e}},miniButtonUrl:{get(){return this.element.config.miniButtonUrl.value},set(e){this.element.config.miniButtonUrl.value=e}},miniButtonColor:{get(){return this.element.config.miniButtonColor.value},set(e){this.element.config.miniButtonColor.value=e}},miniButtonBackgroundColor:{get(){return this.element.config.miniButtonBackgroundColor.value},set(e){this.element.config.miniButtonBackgroundColor.value=e}},mediaRepository(){return this.repositoryFactory.create("media")},uploadTag(){return`cms-element-media-config-${this.element.id}`},previewSource(){var e,t,i;return(i=(t=(e=this.element)==null?void 0:e.data)==null?void 0:t.media)!=null&&i.id?this.element.data.media:this.element.config.media.value}},created(){this.createdComponent()},methods:{createdComponent(){this.initElementConfig("mini")},changeTitle(e){this.element.config.miniTitle.value=e,this.$emit("element-update",this.element)},changeTitleSize(e){this.element.config.miniTitleSize.value=e,this.$emit("element-update",this.element)},changeDescription(e){this.element.config.miniDescription.value=e,this.$emit("element-update",this.element)},changeDescriptionSize(e){this.element.config.miniDescriptionSize.value=e,this.$emit("element-update",this.element)},changeTextColor(e){this.element.config.miniTextColor.value=e,this.$emit("element-update",this.element)},changeBackgroundColor(e){this.element.config.miniBackgroundColor.value=e,this.$emit("element-update",this.element)},changeButtonText(e){this.element.config.miniButtonText.value=e,this.$emit("element-update",this.element)},changeButtonUrl(e){this.element.config.miniButtonUrl.value=e,this.$emit("element-update",this.element)},changeButtonColor(e){this.element.config.miniButtonColor.value=e,this.$emit("element-update",this.element)},changeButtonBackgroundColor(e){this.element.config.miniButtonBackgroundColor.value=e,this.$emit("element-update",this.element)},async onImageUpload({targetId:e}){const t=await this.mediaRepository.get(e,Shopware.Context.api);this.element.config.media.value=t.id,this.updateElementData(t),this.$emit("element-update",this.element)},onImageRemove(){this.element.config.media.value=null,this.updateElementData(),this.$emit("element-update",this.element)},onCloseModal(){this.mediaModalIsOpen=!1},onSelectionChanges(e){const t=e[0];this.element.config.media.value=t.id,this.updateElementData(t),this.$emit("element-update",this.element)},updateElementData(e=null){this.$set(this.element.data,"mediaId",e===null?null:e.id),this.$set(this.element.data,"media",e)},onOpenMediaModal(){this.mediaModalIsOpen=!0},onChangeDisplayMode(e){e==="cover"&&(this.element.config.verticalAlign.value=null,this.element.config.horizontalAlign.value=null),this.$emit("element-update",this.element)}}});const ae=`{% block sw_cms_element_mini_preview %} <div class="sw-cms-preview-mini"> <div class="sw-cms-preview-mini-content"> <img :src="assetFilter('/administration/static/img/cms/preview_mountain_small.jpg')" alt="" > <h5>Featured<br>link</h5> <span class="sw-cms-preview-mini-content-button">→</span> </div> </div> {% endblock %}`;Shopware.Component.register("sw-cms-el-preview-mini",{template:ae,computed:{assetFilter(){return Shopware.Filter.getByName("asset")}}});Shopware.Service("cmsService").registerCmsElement({name:"mini",label:"sw-cms.elements.mini.label",component:"sw-cms-el-mini",configComponent:"sw-cms-el-config-mini",previewComponent:"sw-cms-el-preview-mini",defaultConfig:{media:{source:"static",value:null,entity:{name:"media"}},displayMode:{source:"static",value:"cover"},miniTitle:{source:"static",value:"mini Title"},miniTitleSize:{source:"static",value:"1rem"},miniDescription:{source:"static",value:"Lorem ipsum dolor sit amet, consectetur adipiscing elit."},miniDescriptionSize:{source:"static",value:".9rem"},miniTextColor:{source:"static",value:"#000"},miniBackgroundColor:{source:"static",value:"#ececec"},miniButtonText:{source:"static",value:"Button text"},miniButtonUrl:{source:"static",value:"Button url"},miniButtonBackgroundColor:{source:"static",value:"#000"},miniButtonColor:{source:"static",value:"#FFF"}}});const se=`{% block sw_cms_element_banner %} <div class="sw-cms-el-banner" :style="{ backgroundColor: element.config.bannerBackgroundColor.value, backgroundImage: element.config.media.value ? 'url(' + mediaUrl + ')' : '', backgroundSize: 'cover', backgroundPosition: 'center center', display: 'flex', alignItems: element.config.textAlignment.value }"> <div class="sw-cms-el-banner-content" :style="{ backgroundColor: element.config.textContainerBackground.value, height: 'fit-content', padding: element.config.textContainerPadding.value }"> <div v-html="element.config.bannerContent.value"></div> </div> </div> {% endblock %}`;Shopware.Component.register("sw-cms-el-banner",{template:se,mixins:["cms-element"],computed:{bannerContent(){return`${this.element.config.bannerContent.value}`},bannerBackgroundColor(){return{"background-color":this.element.config.bannerBackgroundColor.value}},textAlignment(){return{"align-items":this.element.config.textAlignment.value||"center"}},textContainerBackground(){return{"background-color":this.element.config.textContainerBackground.value||"transparent"}},enableTextPadding(){return this.element.config.enableTextPadding.value?"2rem":"0"},textContainerPadding(){return{padding:this.element.config.enableTextPadding.value?`${this.element.config.textContainerPadding.value||"2rem"}`:"0"}},textContainerMaxWidth(){return{"max-width":this.element.config.textContainerMaxWidth.value?`${this.element.config.textContainerMaxWidth.value}px`:"none"}},imageFit(){return{"object-fit":this.element.config.imageFit.value||"cover"}},enableCustomHeight(){return this.element.config.enableCustomHeight.value},customHeightStyles(){return this.enableCustomHeight?{height:this.element.config.desktopHeight.value?`${this.element.config.desktopHeight.value}px`:"auto"}:{}},displayModeClass(){return this.element.config.displayMode.value==="standard"?null:`is--${this.element.config.displayMode.value}`},styles(){return{"min-height":this.element.config.displayMode.value==="cover"&&this.element.config.minHeight.value&&this.element.config.minHeight.value!==0?this.element.config.minHeight.value:"340px"}},imgStyles(){return{"align-self":this.element.config.verticalAlign.value||null}},horizontalAlign(){var e;return{"justify-content":((e=this.element.config.horizontalAlign)==null?void 0:e.value)||null}},mediaUrl(){const e=this.assetFilter("administration/static/img/cms/preview_mountain_large.jpg"),t=this.element.data.media;if(this.element.config.media.source==="mapped"){const l=this.getDemoValue(this.element.config.media.value);if(l&&l.url)return l.url}return t&&t.id?this.element.data.media.url:t&&t.url?this.assetFilter(t.url):e},assetFilter(){return Shopware.Filter.getByName("asset")},mediaConfigValue(){var e,t,i;return(i=(t=(e=this.element)==null?void 0:e.config)==null?void 0:t.sliderItems)==null?void 0:i.value}},watch:{cmsPageState:{deep:!0,handler(){this.$forceUpdate()}},mediaConfigValue(e){var l,o,n,s,a,c;const t=(n=(o=(l=this.element)==null?void 0:l.data)==null?void 0:o.media)==null?void 0:n.id;((c=(a=(s=this.element)==null?void 0:s.config)==null?void 0:a.media)==null?void 0:c.source)==="static"&&t&&e!==t&&(this.element.config.media.value=t)}},created(){this.createdComponent()},methods:{createdComponent(){this.initElementConfig("banner"),this.initElementData("banner")}}});const ce=`{% block sw_cms_element_banner_config %} <h3 class="sw-cms-config-title">Text Settings</h3> <sw-text-editor v-model="bannerContent" label="Banner content" placeholder="Enter content" @update:value="changeContent"> </sw-text-editor> <sw-colorpicker v-model="bannerBackgroundColor" colorOutput="hex" label="Banner background color" :alpha="true" zIndex="1000" @update:value="changeBackgroundColor"> </sw-colorpicker> <sw-single-select v-model="textAlignment" :options="[ { value: 'flex-start', label: 'Top' }, { value: 'center', label: 'Center' }, { value: 'flex-end', label: 'Bottom' } ]" label="Text container alignment" @update:value="changeTextAlignment"> </sw-single-select> <sw-single-select v-model="textAlignmentHorizontal" :options="[ { value: 'flex-start', label: 'Left' }, { value: 'center', label: 'Center (Horizontal)' }, { value: 'flex-end', label: 'Right' } ]" label="Text container horizontal alignment" @update:value="changeTextAlignmentHorizontal"> </sw-single-select> <sw-colorpicker v-model="textContainerBackground" colorOutput="hex" label="Text container background color" :alpha="true" zIndex="1000" @update:value="changeTextContainerBackground"> </sw-colorpicker> <sw-switch-field v-model="enableTextPadding" label="Enable padding inside text container" @update:value="changeEnableTextPadding"> </sw-switch-field> <sw-text-field v-model="textContainerPadding" label="Text container padding (default: 2rem)" placeholder="rem" v-if="enableTextPadding" @update:value="changeTextContainerPadding"> </sw-text-field> <sw-text-field v-model="textContainerMaxWidth" label="Max width of text container (optional)" @update:value="changeTextContainerMaxWidth"> </sw-text-field> <h3 class="sw-cms-config-title">Media Settings</h3> <sw-single-select v-model="imageFit" :options="[ { value: 'cover', label: 'Cover' }, { value: 'contain', label: 'Contain' } ]" label="Image fit" @update:value="changeImageFit"> </sw-single-select> <sw-switch-field v-model="enableCustomHeight" label="Set custom height for element" @update:value="changeEnableCustomHeight"> </sw-switch-field> <sw-text-field v-if="enableCustomHeight" v-model="mobileHeight" label="Element mobile height" @update:value="changeMobileHeight"> </sw-text-field> <sw-text-field v-if="enableCustomHeight" v-model="tabletHeight" label="Element tablet height" @update:value="changeTabletHeight"> </sw-text-field> <sw-text-field v-if="enableCustomHeight" v-model="desktopHeight" label="Element desktop height" @update:value="changeDesktopHeight"> </sw-text-field> <div class="sw-cms-el-config-image"> {% block sw_cms_element_image_config_media_upload %} <sw-cms-mapping-field v-model:config="element.config.media" :label="$tc('sw-cms.elements.image.label')" value-types="entity" entity="media" @update:value="changeMedia"> </sw-cms-mapping-field> <sw-media-upload-v2 variant="regular" :upload-tag="uploadTag" :source="previewSource" :allow-multi-select="false" :default-folder="cmsPageState.pageEntityName" :caption="$tc('sw-cms.elements.general.config.caption.mediaUpload')" @media-upload-sidebar-open="onOpenMediaModal" @media-upload-remove-image="onImageRemove" @update:value="changeUploadSource"> </sw-media-upload-v2> <sw-upload-listener :upload-tag="uploadTag" auto-upload @media-upload-finish="onImageUpload" /> {% endblock %} {% block sw_cms_element_image_config_media_modal %} <sw-media-modal-v2 v-if="mediaModalIsOpen" variant="full" :caption="$tc('sw-cms.elements.general.config.caption.mediaUpload')" :entity-context="cmsPageState.entityName" :allow-multi-select="false" :initial-folder-id="cmsPageState.defaultMediaFolderId" @media-upload-remove-image="onImageRemove" @media-modal-selection-change="onSelectionChanges" @modal-close="onCloseModal" /> {% endblock %} </div> {% endblock %}`;Shopware.Component.register("sw-cms-el-config-banner",{template:ce,mixins:["cms-element"],inject:["repositoryFactory"],data(){return{mediaModalIsOpen:!1,initialFolderId:null}},computed:{bannerContent:{get(){return this.element.config.bannerContent.value},set(e){this.element.config.bannerContent.value=e}},bannerBackgroundColor:{get(){return this.element.config.bannerBackgroundColor.value},set(e){this.element.config.bannerBackgroundColor.value=e}},textAlignment:{get(){return this.element.config.textAlignment.value},set(e){this.element.config.textAlignment.value=e}},textAlignmentHorizontal:{get(){return this.element.config.textAlignmentHorizontal.value},set(e){this.element.config.textAlignmentHorizontal.value=e}},textContainerBackground:{get(){return this.element.config.textContainerBackground.value},set(e){this.element.config.textContainerBackground.value=e}},enableTextPadding:{get(){return this.element.config.enableTextPadding.value},set(e){this.element.config.enableTextPadding.value=e}},textContainerPadding:{get(){return this.element.config.textContainerPadding.value},set(e){this.element.config.textContainerPadding.value=e}},textContainerMaxWidth:{get(){return this.element.config.textContainerMaxWidth.value},set(e){this.element.config.textContainerMaxWidth.value=e}},imageFit:{get(){return this.element.config.imageFit.value},set(e){this.element.config.imageFit.value=e}},enableCustomHeight:{get(){return this.element.config.enableCustomHeight.value},set(e){this.element.config.enableCustomHeight.value=e}},mobileHeight:{get(){return this.element.config.mobileHeight.value},set(e){this.element.config.mobileHeight.value=e}},tabletHeight:{get(){return this.element.config.tabletHeight.value},set(e){this.element.config.tabletHeight.value=e}},desktopHeight:{get(){return this.element.config.desktopHeight.value},set(e){this.element.config.desktopHeight.value=e}},mediaRepository(){return this.repositoryFactory.create("media")},uploadTag(){return`cms-element-media-config-${this.element.id}`},previewSource(){var e,t,i;return(i=(t=(e=this.element)==null?void 0:e.data)==null?void 0:t.media)!=null&&i.id?this.element.data.media:this.element.config.media.value}},created(){this.createdComponent()},methods:{createdComponent(){this.initElementConfig("banner")},changeContent(e){this.element.config.bannerContent.value=e,this.$emit("element-update",this.element)},changeBackgroundColor(e){this.element.config.bannerBackgroundColor.value=e,this.$emit("element-update",this.element)},changeTextAlignment(e){this.element.config.textAlignment.value=e,this.$emit("element-update",this.element)},changeTextAlignmentHorizontal(e){this.element.config.textAlignmentHorizontal.value=e,this.$emit("element-update",this.element)},changeTextContainerBackground(e){this.element.config.textContainerBackground.value=e,this.$emit("element-update",this.element)},changeEnableTextPadding(e){this.element.config.enableTextPadding.value=e,this.$emit("element-update",this.element)},changeTextContainerPadding(e){this.element.config.textContainerPadding.value=e,this.$emit("element-update",this.element)},changeTextContainerMaxWidth(e){this.element.config.textContainerMaxWidth.value=e,this.$emit("element-update",this.element)},changeImageFit(e){this.element.config.imageFit.value=e,this.$emit("element-update",this.element)},changeEnableCustomHeight(e){this.element.config.enableCustomHeight.value=e,this.$emit("element-update",this.element)},changeMobileHeight(e){this.element.config.mobileHeight.value=e,this.$emit("element-update",this.element)},changeTabletHeight(e){this.element.config.tabletHeight.value=e,this.$emit("element-update",this.element)},changeDesktopHeight(e){this.element.config.desktopHeight.value=e,this.$emit("element-update",this.element)},async onImageUpload({targetId:e}){const t=await this.mediaRepository.get(e,Shopware.Context.api);this.element.config.media.value=t.id,this.updateElementData(t),this.$emit("element-update",this.element)},onImageRemove(){this.element.config.media.value=null,this.updateElementData(),this.$emit("element-update",this.element)},onCloseModal(){this.mediaModalIsOpen=!1},onSelectionChanges(e){const t=e[0];this.element.config.media.value=t.id,this.updateElementData(t),this.$emit("element-update",this.element)},updateElementData(e=null){this.$set(this.element.data,"mediaId",e===null?null:e.id),this.$set(this.element.data,"media",e)},onOpenMediaModal(){this.mediaModalIsOpen=!0}}});const re='{% block sw_cms_element_banner_preview %} <div class="sw-cms-preview-banner" :style="`background-image: url(${assetFilter(\'/administration/static/img/cms/preview_mountain_small.jpg\')}); background-size: cover; background-position: center;`"> <div class="sw-cms-preview-banner-content"> <h5>Banner</h5> </div> </div> {% endblock %}';Shopware.Component.register("sw-cms-el-preview-banner",{template:re,computed:{assetFilter(){return Shopware.Filter.getByName("asset")}}});Shopware.Service("cmsService").registerCmsElement({name:"banner",label:"sw-cms.elements.banner.label",component:"sw-cms-el-banner",configComponent:"sw-cms-el-config-banner",previewComponent:"sw-cms-el-preview-banner",defaultConfig:{media:{source:"static",value:null,entity:{name:"media"}},bannerContent:{source:"static",value:"Banner Content"},bannerBackgroundColor:{source:"static",value:"#cecece"},textAlignment:{source:"static",value:"center"},textAlignmentHorizontal:{source:"static",value:"center"},textContainerBackground:{source:"static",value:"#ffffff"},enableTextPadding:{source:"static",value:!1},textContainerPadding:{source:"static",value:"2rem"},textContainerMaxWidth:{source:"static",value:""},imageFit:{source:"static",value:"cover"},enableCustomHeight:{source:"static",value:!1},mobileHeight:{source:"static",value:""},tabletHeight:{source:"static",value:""},desktopHeight:{source:"static",value:""}}});const me='{% block sw_cms_element_banner_featured_links %} <div class="sw-cms-el-banner-featured-links" :style="bannerBackgroundColor"> <div class="sw-cms-el-banner-featured-links-content"> <div v-html="element.config.bannerContent.value"></div> </div> <div class="sw-cms-el-banner-featured-links-image"> <img :src="mediaUrl" alt="" > </div> </div> {% endblock %}';Shopware.Component.register("sw-cms-el-banner-featured-links",{template:me,mixins:["cms-element"],computed:{bannerContent(){return`${this.element.config.bannerContent.value}`},bannerBackgroundColor(){return{"background-color":this.element.config.bannerBackgroundColor.value}},displayModeClass(){return this.element.config.displayMode.value==="standard"?null:`is--${this.element.config.displayMode.value}`},styles(){return{"min-height":this.element.config.displayMode.value==="cover"&&this.element.config.minHeight.value&&this.element.config.minHeight.value!==0?this.element.config.minHeight.value:"340px"}},imgStyles(){return{"align-self":this.element.config.verticalAlign.value||null}},horizontalAlign(){var e;return{"justify-content":((e=this.element.config.horizontalAlign)==null?void 0:e.value)||null}},mediaUrl(){const e=this.assetFilter("administration/static/img/cms/preview_mountain_large.jpg"),t=this.element.data.media;if(this.element.config.media.source==="mapped"){const l=this.getDemoValue(this.element.config.media.value);if(l&&l.url)return l.url}return t&&t.id?this.element.data.media.url:t&&t.url?this.assetFilter(t.url):e},assetFilter(){return Shopware.Filter.getByName("asset")},mediaConfigValue(){var e,t,i;return(i=(t=(e=this.element)==null?void 0:e.config)==null?void 0:t.sliderItems)==null?void 0:i.value}},watch:{cmsPageState:{deep:!0,handler(){this.$forceUpdate()}},mediaConfigValue(e){var l,o,n,s,a,c;const t=(n=(o=(l=this.element)==null?void 0:l.data)==null?void 0:o.media)==null?void 0:n.id;((c=(a=(s=this.element)==null?void 0:s.config)==null?void 0:a.media)==null?void 0:c.source)==="static"&&t&&e!==t&&(this.element.config.media.value=t)}},created(){this.createdComponent()},methods:{createdComponent(){this.initElementConfig("banner-featured-links"),this.initElementData("banner-featured-links")}}});const de=`{% block sw_cms_element_banner_featured_links_config %} <sw-text-editor v-model="bannerContent" class="" label="Banner content" placeholder="Enter content" @update:value="changeContent"> </sw-text-editor> <sw-colorpicker v-model="bannerBackgroundColor" colorOutput="hex" class="" label="Banner background color" :alpha="true" zIndex="1000" @update:value="changeBackgroundColor"> </sw-colorpicker> <div class="sw-cms-el-config-image"> {% block sw_cms_element_image_config_media_upload %} <sw-cms-mapping-field v-model:config="element.config.media" :label="$tc('sw-cms.elements.image.label')" value-types="entity" entity="media" > <sw-media-upload-v2 variant="regular" :upload-tag="uploadTag" :source="previewSource" :allow-multi-select="false" :default-folder="cmsPageState.pageEntityName" :caption="$tc('sw-cms.elements.general.config.caption.mediaUpload')" @media-upload-sidebar-open="onOpenMediaModal" @media-upload-remove-image="onImageRemove" /> <template #preview="{ demoValue }"> <div class="sw-cms-el-config-image__mapping-preview"> <img v-if="demoValue.url" :src="demoValue.url" alt="" > <sw-alert v-else class="sw-cms-el-config-image__preview-info" variant="info" > {{ $tc('sw-cms.detail.label.mappingEmptyPreview') }} </sw-alert> </div> </template> </sw-cms-mapping-field> <sw-upload-listener :upload-tag="uploadTag" auto-upload @media-upload-finish="onImageUpload" /> {% endblock %} {% block sw_cms_element_image_config_media_modal %} <sw-media-modal-v2 v-if="mediaModalIsOpen" variant="full" :caption="$tc('sw-cms.elements.general.config.caption.mediaUpload')" :entity-context="cmsPageState.entityName" :allow-multi-select="false" :initial-folder-id="cmsPageState.defaultMediaFolderId" @media-upload-remove-image="onImageRemove" @media-modal-selection-change="onSelectionChanges" @modal-close="onCloseModal" /> {% endblock %} </div> {% endblock %}`;Shopware.Component.register("sw-cms-el-config-banner-featured-links",{template:de,mixins:["cms-element"],inject:["repositoryFactory"],data(){return{mediaModalIsOpen:!1,initialFolderId:null}},computed:{bannerContent:{get(){return this.element.config.bannerContent.value},set(e){this.element.config.bannerContent.value=e}},bannerBackgroundColor:{get(){return this.element.config.bannerBackgroundColor.value},set(e){this.element.config.bannerBackgroundColor.value=e}},mediaRepository(){return this.repositoryFactory.create("media")},uploadTag(){return`cms-element-media-config-${this.element.id}`},previewSource(){var e,t,i;return(i=(t=(e=this.element)==null?void 0:e.data)==null?void 0:t.media)!=null&&i.id?this.element.data.media:this.element.config.media.value}},created(){this.createdComponent()},methods:{createdComponent(){this.initElementConfig("banner-featured-links")},changeContent(e){this.element.config.bannerContent.value=e,this.$emit("element-update",this.element)},changeBackgroundColor(e){this.element.config.bannerBackgroundColor.value=e,this.$emit("element-update",this.element)},async onImageUpload({targetId:e}){const t=await this.mediaRepository.get(e,Shopware.Context.api);this.element.config.media.value=t.id,this.updateElementData(t),this.$emit("element-update",this.element)},onImageRemove(){this.element.config.media.value=null,this.updateElementData(),this.$emit("element-update",this.element)},onCloseModal(){this.mediaModalIsOpen=!1},onSelectionChanges(e){const t=e[0];this.element.config.media.value=t.id,this.updateElementData(t),this.$emit("element-update",this.element)},updateElementData(e=null){this.$set(this.element.data,"mediaId",e===null?null:e.id),this.$set(this.element.data,"media",e)},onOpenMediaModal(){this.mediaModalIsOpen=!0}}});const ge='{% block sw_cms_element_banner_featured_links_preview %} <div class="sw-cms-preview-banner-featured-links" :style="`background-image: url(${assetFilter(\'/administration/static/img/cms/preview_mountain_small.jpg\')}); background-size: cover; background-position: center;`"> <div class="sw-cms-preview-banner-featured-links-content"> <h5>Banner</h5> </div> </div> {% endblock %}';Shopware.Component.register("sw-cms-el-preview-banner-featured-links",{template:ge,computed:{assetFilter(){return Shopware.Filter.getByName("asset")}}});Shopware.Service("cmsService").registerCmsElement({name:"banner-featured-links",label:"sw-cms.elements.banner-featured-links.label",component:"sw-cms-el-banner-featured-links",configComponent:"sw-cms-el-config-banner-featured-links",previewComponent:"sw-cms-el-preview-banner-featured-links",defaultConfig:{media:{source:"static",value:null,entity:{name:"media"}},bannerContent:{source:"static",value:"Banner Content"},bannerBackgroundColor:{source:"static",value:"#cecece"}}});const ue=`{% block sw_cms_element_banner_link %} <div :class="{ 'is-clickable': element.config.buttonType.value === 'clickable' }" class="sw-cms-el-banner-link" :style="generalBackgroundColor"> <div class="sw-cms-el-banner-link-image" :style="isFallbackImage() ? bannerBackgroundColor : null"> <img v-if="!isFallbackImage()" :src="mediaUrl" alt="" :style="imgStyles"> </div> <div class="sw-cms-el-banner-link-content"> <div class="sw-cms-el-banner-link-content-text"> <h1 :style="generalTitleColor">{{ element.config.generalTitle.value }}</h1> <p v-html="element.config.generalDescription.value"></p> <span v-if="element.config.actionLabel.value" :class="['action-label', element.config.labelType.value, labelPosition]" :style="{ fontWeight: element.config.labelFontWeight.value }"> {{ element.config.labelContent.value }} </span> </div> <div class="sw-cms-el-banner-link-content-button" v-if="shouldShowButtonDiv" :class="buttonPosition"> <a :class="buttonTypeClass" :style="buttonStyles"> <span v-if="element.config.buttonType.value == 'arrow'" class="material-symbols-rounded"> → </span> <span v-else> {{ element.config.bannerLinkButtonText.value }} </span> </a> </div> </div> </div> {% endblock %}`;Shopware.Component.register("sw-cms-el-banner-link",{template:ue,mixins:["cms-element"],computed:{generalTitle(){return`${this.element.config.generalTitle.value}`},titleHeadingType(){return`${this.element.config.titleHeadingType.value}`},minHeightSm(){return`${this.element.config.minHeightSm.value}`},minHeightMd(){return`${this.element.config.minHeightMd.value}`},minHeightLg(){return`${this.element.config.minHeightLg.value}`},elementPadding(){return`${this.element.config.elementPadding.value}`},generalTitleColor(){return{color:this.element.config.generalTitleColor.value}},generalDescription(){return`${this.element.config.generalDescription.value}`},generalBackgroundColor(){return{"background-color":this.element.config.generalBackgroundColor.value}},shouldShowButtonDiv(){return!["clickable"].includes(this.element.config.buttonType.value)},bannerLinkButtonText(){return`${this.element.config.bannerLinkButtonText.value}`},bannerLinkButtonUrl(){return`${this.element.config.bannerLinkButtonUrl.value}`},buttonTypeClass(){return`btn btn-${this.element.config.buttonType.value}`},buttonType(){return`${this.element.config.buttonType.value}`},labelContent(){return`${this.element.config.labelContent.value}`},labelPosition(){return`label-position-${this.element.config.labelPosition.value}`},buttonPosition(){return`button-position-${this.element.config.buttonPosition.value}`},actionLabel(){return this.element.config.actionLabel.value},labelTypeClass(){return`label-${this.element.config.labelType.value}`},typeIsArrow(){return this.element.config.buttonType.value==="arrow"},typeIsPrimary(){return this.element.config.buttonType.value==="primary"},typeIsSecondary(){return this.element.config.buttonType.value==="secondary"},typeIsCustom(){return this.element.config.buttonType.value==="custom"},buttonBorderColor(){return this.typeIsArrow||this.typeIsCustom?{"border-color":this.element.config.buttonBorderColor.value||"#000"}:{}},buttonBackgroundColor(){return this.typeIsArrow||this.typeIsCustom?{"background-color":this.element.config.buttonBackgroundColor.value||"#fff"}:{}},buttonContentColor(){return this.typeIsArrow||this.typeIsCustom?{color:this.element.config.buttonContentColor.value||"#000"}:{}},hoverColor(){return this.typeIsArrow||this.typeIsCustom?{color:this.element.config.hoverColor.value||"#f00"}:{}},hoverBackgroundColor(){return this.typeIsArrow||this.typeIsCustom?{"background-color":this.element.config.hoverBackgroundColor.value||"#f0f0f0"}:{}},hoverBorderColor(){return this.typeIsArrow||this.typeIsCustom?{"border-color":this.element.config.hoverBorderColor.value||"#ccc"}:{}},buttonStyles(){return{...this.buttonBorderColor,...this.buttonBackgroundColor,...this.buttonContentColor,":hover":{...this.hoverColor,...this.hoverBackgroundColor,...this.hoverBorderColor}}},displayModeClass(){return this.element.config.displayMode.value==="standard"?null:`is--${this.element.config.displayMode.value}`},styles(){return{"min-height":this.element.config.displayMode.value==="cover"&&this.element.config.minHeight.value&&this.element.config.minHeight.value!==0?this.element.config.minHeight.value:"340px"}},imgStyles(){return{"object-fit":this.element.config.bannerImageFit.value||"cover","object-position":this.element.config.imagePosition.value||"center"}},horizontalAlign(){var e;return{"justify-content":((e=this.element.config.horizontalAlign)==null?void 0:e.value)||null}},bannerImageFit(){return this.element.config.bannerImageFit.value||"cover"},mediaUrl(){const e=this.assetFilter("administration/static/img/cms/preview_mountain_large.jpg"),t=this.element.data.media;if(this.element.config.media.source==="mapped"){const l=this.getDemoValue(this.element.config.media.value);if(l&&l.url)return l.url}return t&&t.id?this.element.data.media.url:t&&t.url?this.assetFilter(t.url):e},assetFilter(){return Shopware.Filter.getByName("asset")},mediaConfigValue(){var e,t,i;return(i=(t=(e=this.element)==null?void 0:e.config)==null?void 0:t.sliderItems)==null?void 0:i.value}},watch:{cmsPageState:{deep:!0,handler(){this.$forceUpdate()}},mediaConfigValue(e){var l,o,n,s,a,c;const t=(n=(o=(l=this.element)==null?void 0:l.data)==null?void 0:o.media)==null?void 0:n.id;((c=(a=(s=this.element)==null?void 0:s.config)==null?void 0:a.media)==null?void 0:c.source)==="static"&&t&&e!==t&&(this.element.config.media.value=t)}},created(){this.createdComponent()},methods:{createdComponent(){this.initElementConfig("banner-link"),this.initElementData("banner-link")},isFallbackImage(){const e=this.assetFilter("administration/static/img/cms/preview_mountain_large.jpg");return this.mediaUrl===e}}});const pe=`{% block sw_cms_element_banner_link_config %} <sw-tabs position-identifier="sw-cms-element-banner-link-config" class="sw-cms-el-config-banner-link__tabs" default-item="general" > <template #default="{ active }"> <sw-tabs-item :title="$tc('sw-cms.elements.general.config.tab.general')" name="general" :active-tab="active" > General settings </sw-tabs-item> <sw-tabs-item :title="$tc('sw-cms.elements.general.config.tab.button')" name="button" :active-tab="active" > Button Settings </sw-tabs-item> <sw-tabs-item :title="$tc('sw-cms.elements.general.config.tab.action-label')" name="action" :active-tab="active" > Action label Settings </sw-tabs-item> </template> <template #content="{ active }"> <sw-container v-if="active === 'general'" class="sw-cms-el-config-banner-link__tab-content" > <sw-text-field v-model="minHeightSm" label="Min height (sm or less)" placeholder="Enter min height (e.g., 100px)" help-text="Set a minimum height for small screens or less. This ensures the element remains visually appealing, even with or without buttons or actions." @update:value="changeMinHeightSm" ></sw-text-field> <sw-text-field v-model="minHeightMd" label="Min height (md)" placeholder="Enter min height (e.g., 200px)" help-text="Set a minimum height for medium screens. This is useful for maintaining the desired layout, whether or not a button or action is present." @update:value="changeMinHeightMd" ></sw-text-field> <sw-text-field v-model="minHeightLg" label="Min height (lg)" placeholder="Enter min height (e.g., 400px)" help-text="Set a minimum height for large screens. This allows for more customization, including showing more of the image or content, even with buttons or actions." @update:value="changeMinHeightLg" ></sw-text-field> <sw-text-field v-model="elementPadding" label="Element Padding" placeholder="Enter padding (e.g., 16px, 8px 16px)" help-text="Specify the padding for the element. Use CSS shorthand (e.g., '10px' for all sides, '10px 20px' for top-bottom and left-right). Adjust to control spacing within the element." @update:value="changeElementPadding" ></sw-text-field> <sw-text-field v-model="generalTitle" label="Title" placeholder="Enter a title" @update:value="changeTitle"> </sw-text-field> <sw-colorpicker v-model="generalTitleColor" colorOutput="hex" label="Title color" :alpha="true" zIndex="1000" @update:value="onChangeTitleColor"> </sw-colorpicker> <sw-select-field v-model:value="element.config.titleHeadingType.value" class="sw-cms-el-config-title-heading-type" label="Title Heading Type" placeholder="Select heading level" help-text="Choose the HTML heading level for the title (e.g., h1 for main headings, h2 for subheadings)." @update:value="changeTitleHeadingType" > <option value="h1">H1</option> <option value="h2">H2</option> <option value="h3">H3</option> <option value="h4">H4</option> <option value="h5">H5</option> <option value="h6">H6</option> </sw-select-field> <sw-text-editor v-model="generalDescription" label="Subtitle" placeholder="Enter a description" @update:value="changeDescription"> </sw-text-editor> <sw-colorpicker v-model="generalBackgroundColor" colorOutput="hex" label="Background color" :alpha="true" zIndex="1000" @update:value="changeBackgroundColor"> </sw-colorpicker> <div class="sw-cms-el-config-image sw-field"> {% block sw_cms_element_image_config_media_upload %} <sw-cms-mapping-field v-model:config="element.config.media" :label="$tc('sw-cms.elements.image.label')" value-types="entity" entity="media" > <sw-media-upload-v2 variant="regular" :upload-tag="uploadTag" :source="previewSource" :allow-multi-select="false" :default-folder="cmsPageState.pageEntityName" :caption="$tc('sw-cms.elements.general.config.caption.mediaUpload')" @media-upload-sidebar-open="onOpenMediaModal" @media-upload-remove-image="onImageRemove" /> <template #preview="{ demoValue }"> <div class="sw-cms-el-config-image__mapping-preview"> <img v-if="demoValue.url" :src="demoValue.url" alt="" > <sw-alert v-else class="sw-cms-el-config-image__preview-info" variant="info" > {{ $tc('sw-cms.detail.label.mappingEmptyPreview') }} </sw-alert> </div> </template> </sw-cms-mapping-field> <sw-upload-listener :upload-tag="uploadTag" auto-upload @media-upload-finish="onImageUpload" /> {% endblock %} {% block sw_cms_element_image_config_media_modal %} <sw-media-modal-v2 v-if="mediaModalIsOpen" variant="full" :caption="$tc('sw-cms.elements.general.config.caption.mediaUpload')" :entity-context="cmsPageState.entityName" :allow-multi-select="false" :initial-folder-id="cmsPageState.defaultMediaFolderId" @media-upload-remove-image="onImageRemove" @media-modal-selection-change="onSelectionChanges" @modal-close="onCloseModal" /> {% endblock %} </div> <sw-select-field v-model="bannerImageFit" label="Select an image fit option" placeholder="Choose how the image should fit within the element" @update:value="changeBannerImageFit"> <option value="contain"> Contain </option> <option value="cover"> Cover </option> </sw-select-field> <sw-select-field v-model="imagePosition" label="Select Image Position" placeholder="Choose how the image should be positioned horizontally" @update:value="changeImagePosition"> <option value="left">Left</option> <option value="center">Center</option> <option value="right">Right</option> </sw-select-field> <sw-select-field v-model="imagePositionVertical" label="Select Image Vertical Position" placeholder="Choose how the image should be positioned vertically" v-if="bannerImageFit === 'cover'" @update:value="changeImagePositionVertical"> <option value="top">Top</option> <option value="center">Center</option> <option value="bottom">Bottom</option> </sw-select-field> </sw-container> <sw-container v-if="active === 'button'" class="sw-cms-el-config-banner-link__tab-button-settings" > <sw-select-field v-model:value="element.config.buttonType.value" class="sw-cms-el-config-button-type" label="Button type" @update:value="changeButtonType" > <option value="primary"> Primary </option> <option value="secondary"> Secondary </option> <option value="custom"> Custom </option> <option value="clickable"> Element clickable </option> <option value="arrow"> Arrow </option> </sw-select-field> <sw-text-field v-if="typeIsCustom || typeIsPrimary || typeIsSecondary" v-model="bannerLinkButtonText" label="Call to action text" placeholder="Enter button text" @update:value="changeButtonText"> </sw-text-field> <sw-text-field v-model="bannerLinkButtonUrl" label="Call to action url or block url" placeholder="Enter button url" @update:value="changeButtonUrl"> </sw-text-field> <sw-colorpicker v-if="typeIsArrow || typeIsCustom" v-model="buttonBorderColor" colorOutput="hex" label="Button border color" :alpha="true" zIndex="1000" @update:value="onChangeButtonBorderColor"> </sw-colorpicker> <sw-colorpicker v-if="typeIsArrow || typeIsCustom" v-model="buttonBackgroundColor" colorOutput="hex" label="Button background color" :alpha="true" zIndex="1000" @update:value="changeButtonBackgroundColor"> </sw-colorpicker> <sw-colorpicker v-if="typeIsArrow || typeIsCustom" v-model="buttonContentColor" colorOutput="hex" label="Text or icon color" :alpha="true" zIndex="1000" @update:value="changeButtonContentColor"> </sw-colorpicker> <sw-colorpicker v-if="typeIsArrow || typeIsCustom" v-model="hoverColor" colorOutput="hex" label="Hover color" :alpha="true" zIndex="1000" @update:value="changeHoverColor"> </sw-colorpicker> <sw-colorpicker v-if="typeIsArrow || typeIsCustom" v-model="hoverBorderColor" colorOutput="hex" label="Hover border color" :alpha="true" zIndex="1000" @update:value="changeHoverBorderColor"> </sw-colorpicker> <sw-colorpicker v-if="typeIsArrow || typeIsCustom" v-model="hoverBackgroundColor" colorOutput="hex" label="Hover background color" :alpha="true" zIndex="1000" @update:value="changeHoverBackgroundColor"> </sw-colorpicker> <sw-select-field v-if="typeIsArrow || typeIsCustom || typeIsPrimary || typeIsSecondary" v-model:value="element.config.buttonPosition.value" class="sw-cms-el-config-button-type" label="Button position" @update:value="changeButtonPosition" > <option value="left"> Links </option> <option value="right"> Rechts </option> </sw-select-field> </sw-container> <sw-container v-if="active === 'action'" class="sw-cms-el-config-link__tab-button-settings" > <sw-checkbox-field v-model="actionLabel" label="Show action label" @update:value="changeActionLabel" > </sw-checkbox-field> <sw-select-field v-model:value="element.config.labelFontWeight.value" class="sw-cms-el-config-button-type" label="Font weight" v-if="actionLabel" @update:value="changeLabelFontWeight" > <option value="300"> 300 </option> <option value="400"> 400 </option> <option value="600"> 600 </option> </sw-select-field> <sw-text-field v-model="labelContent" label="Label content" placeholder="Enter label content" v-if="actionLabel" @update:value="changeLabelContent"> </sw-text-field> <sw-select-field v-model:value="element.config.labelType.value" class="sw-cms-el-config-button-type" label="Label style" v-if="actionLabel" @update:value="changeLabelType" > <option value="danger"> Danger </option> <option value="success"> Success </option> <option value="info"> Info </option> <option value="warning"> Warning </option> </sw-select-field> <sw-select-field v-model:value="element.config.labelPosition.value" class="sw-cms-el-config-label-position" label="Label position" v-if="actionLabel" @update:value="changeLabelPosition" > <option value="top-right"> Boven tekst rechts </option> <option value="bottom-right"> Onder tekst rechts </option> <option value="bottom-left"> Onder tekst links </option> </sw-select-field> </sw-container> </template> </sw-tabs> {% endblock %}`;Shopware.Component.register("sw-cms-el-config-banner-link",{template:pe,mixins:["cms-element"],inject:["repositoryFactory"],data(){return{mediaModalIsOpen:!1,initialFolderId:null}},computed:{minHeightSm:{get(){return this.element.config.minHeightSm.value},set(e){this.element.config.minHeightSm.value=e}},minHeightMd:{get(){return this.element.config.minHeightMd.value},set(e){this.element.config.minHeightMd.value=e}},minHeightLg:{get(){return this.element.config.minHeightLg.value},set(e){this.element.config.minHeightLg.value=e}},elementPadding:{get(){return this.element.config.elementPadding.value},set(e){this.element.config.elementPadding.value=e}},imagePosition:{get(){return this.element.config.imagePosition.value},set(e){this.element.config.imagePosition.value=e}},imagePositionVertical:{get(){return this.element.config.imagePositionVertical.value},set(e){this.element.config.imagePositionVertical.value=e}},generalTitle:{get(){return this.element.config.generalTitle.value},set(e){this.element.config.generalTitle.value=e}},generalTitleColor:{get(){return this.element.config.generalTitleColor.value},set(e){this.element.config.generalTitleColor.value=e}},titleHeadingType:{get(){return this.element.config.titleHeadingType.value},set(e){this.element.config.titleHeadingType.value=e}},generalDescription:{get(){return this.element.config.generalDescription.value},set(e){this.element.config.generalDescription.value=e}},generalBackgroundColor:{get(){return this.element.config.generalBackgroundColor.value},set(e){this.element.config.generalBackgroundColor.value=e}},bannerLinkButtonText:{get(){return this.element.config.bannerLinkButtonText.value},set(e){this.element.config.bannerLinkButtonText.value=e}},bannerLinkButtonUrl:{get(){return this.element.config.bannerLinkButtonUrl.value},set(e){this.element.config.bannerLinkButtonUrl.value=e}},buttonBorderColor:{get(){return this.element.config.buttonBorderColor.value},set(e){this.element.config.buttonBorderColor.value=e}},buttonContentColor:{get(){return this.element.config.buttonContentColor.value},set(e){this.element.config.buttonContentColor.value=e}},buttonBackgroundColor:{get(){return this.element.config.buttonBackgroundColor.value},set(e){this.element.config.buttonBackgroundColor.value=e}},typeIsArrow:{get(){return this.element.config.buttonType.value==="arrow"}},typeIsPrimary:{get(){return this.element.config.buttonType.value==="primary"}},typeIsSecondary:{get(){return this.element.config.buttonType.value==="secondary"}},typeIsCustom:{get(){return this.element.config.buttonType.value==="custom"}},hoverColor:{get(){return this.element.config.hoverColor.value},set(e){this.element.config.hoverColor.value=e}},hoverBorderColor:{get(){return this.element.config.hoverBorderColor.value},set(e){this.element.config.hoverBorderColor.value=e}},hoverBackgroundColor:{get(){return this.element.config.hoverBackgroundColor.value},set(e){this.element.config.hoverBackgroundColor.value=e}},buttonPosition:{get(){return this.element.config.buttonPosition.value},set(e){this.element.config.buttonPosition.value=e}},actionLabel:{get(){return this.element.config.actionLabel.value},set(e){this.element.config.actionLabel.value=e}},labelType:{get(){return this.element.config.labelType.value},set(e){this.element.config.labelType.value=e}},labelFontWeight:{get(){return this.element.config.labelFontWeight.value},set(e){this.element.config.labelFontWeight.value=e}},labelPosition:{get(){return this.element.config.labelPosition.value},set(e){this.element.config.labelPosition.value=e}},labelContent:{get(){return this.element.config.labelContent.value},set(e){this.element.config.labelContent.value=e}},bannerImageFit:{get(){return this.element.config.bannerImageFit.value},set(e){this.element.config.bannerImageFit.value=e}},mediaRepository(){return this.repositoryFactory.create("media")},uploadTag(){return`cms-element-media-config-${this.element.id}`},previewSource(){var e,t,i;return(i=(t=(e=this.element)==null?void 0:e.data)==null?void 0:t.media)!=null&&i.id?this.element.data.media:this.element.config.media.value}},created(){this.createdComponent()},methods:{createdComponent(){this.initElementConfig("banner-link"),this.element.config.actionLabel||(this.element.config.actionLabel={source:"static",value:!1})},changeMinHeightSm(e){this.element.config.minHeightSm.value=e,this.$emit("element-update",this.element)},changeMinHeightMd(e){this.element.config.minHeightMd.value=e,this.$emit("element-update",this.element)},changeMinHeightLg(e){this.element.config.minHeightLg.value=e,this.$emit("element-update",this.element)},changeElementPadding(e){this.element.config.elementPadding.value=e,this.$emit("element-update",this.element)},changeBannerImageFit(e){this.bannerImageFit=e,this.$emit("element-update",this.element)},changeImagePosition(e){this.imagePosition=e,this.$emit("element-update",this.element)},changeImagePositionVertical(e){this.imagePositionVertical=e,this.$emit("element-update",this.element)},changeButtonUrl(e){this.element.config.bannerLinkButtonUrl.value=e,this.$emit("element-update",this.element)},changeTitle(e){this.element.config.generalTitle.value=e,this.$emit("element-update",this.element)},changeTitleHeadingType(e){this.element.config.titleHeadingType.value=e,this.$emit("element-update",this.element)},onChangeTitleColor(e){this.element.config.generalTitleColor.value=e,this.$emit("element-update",this.element)},changeDescription(e){this.element.config.generalDescription.value=e,this.$emit("element-update",this.element)},changeBackgroundColor(e){this.element.config.generalBackgroundColor.value=e,this.$emit("element-update",this.element)},changeButtonText(e){this.element.config.bannerLinkButtonText.value=e,this.$emit("element-update",this.element)},changeButtonType(e){this.$emit("element-update",this.element)},changeButtonPosition(e){this.$emit("element-update",this.element)},changeLabelType(e){this.$emit("element-update",this.element)},changeLabelFontWeight(e){this.$emit("element-update",this.element)},changeLabelPosition(e){this.$emit("element-update",this.element)},onChangeButtonBorderColor(e){this.element.config.buttonBorderColor.value=e,this.$emit("element-update",this.element)},changeButtonBackgroundColor(e){this.element.config.buttonBackgroundColor.value=e,this.$emit("element-update",this.element)},changeButtonContentColor(e){this.element.config.buttonContentColor.value=e,this.$emit("element-update",this.element)},changeActionLabel(e){this.element.config.actionLabel.value=e,this.$emit("element-update",this.element)},changeLabelContent(e){this.element.config.labelContent.value=e,this.$emit("element-update",this.element)},changeHoverColor(e){this.element.config.hoverColor.value=e,this.$emit("element-update",this.element)},changeHoverBorderColor(e){this.element.config.hoverBorderColor.value=e,this.$emit("element-update",this.element)},changeHoverBackgroundColor(e){this.element.config.hoverBackgroundColor.value=e,this.$emit("element-update",this.element)},async onImageUpload({targetId:e}){const t=await this.mediaRepository.get(e,Shopware.Context.api);this.element.config.media.value=t.id,this.updateElementData(t),this.$emit("element-update",this.element)},onImageRemove(){this.element.config.media.value=null,this.updateElementData(),this.$emit("element-update",this.element)},onCloseModal(){this.mediaModalIsOpen=!1},onSelectionChanges(e){const t=e[0];this.element.config.media.value=t.id,this.updateElementData(t),this.$emit("element-update",this.element)},updateElementData(e=null){this.$set(this.element.data,"mediaId",e===null?null:e.id),this.$set(this.element.data,"media",e)},onOpenMediaModal(){this.mediaModalIsOpen=!0}}});const he='{% block sw_cms_element_banner_link_preview %} <div class="sw-cms-preview-el-banner-link" :style="`background-image: url(${assetFilter(\'/administration/static/img/cms/preview_mountain_small.jpg\')}); background-size: cover; background-position: center;`"> <div class="sw-cms-preview-el-banner-link-content"> <h5>Lorem ipsum</h5> <div class="sw-cms-preview-el-banner-link-label">Label</div> <div class="sw-cms-preview-el-banner-link-button">Button</div> </div> </div> {% endblock %}';Shopware.Component.register("sw-cms-el-preview-banner-link",{template:he,computed:{assetFilter(){return Shopware.Filter.getByName("asset")}}});Shopware.Service("cmsService").registerCmsElement({name:"banner-link",label:"sw-cms.elements.banner-link.label",component:"sw-cms-el-banner-link",configComponent:"sw-cms-el-config-banner-link",previewComponent:"sw-cms-el-preview-banner-link",defaultConfig:{media:{source:"static",value:null,entity:{name:"media"}},generalTitle:{source:"static",value:"Title"},generalTitleColor:{source:"static",value:"#000"},titleHeadingType:{source:"static",value:null},generalDescription:{source:"static",value:"Lorem ipsum dolor sit amet, consectetur adipiscing elit."},generalBackgroundColor:{source:"static",value:"#ececec"},bannerLinkButtonText:{source:"static",value:"Button text"},bannerLinkButtonUrl:{source:"static",value:"/"},buttonType:{source:"static",value:"primary"},buttonBorderColor:{source:"static",value:"#000"},buttonBackgroundColor:{source:"static",value:"#000"},buttonContentColor:{source:"static",value:"#FFF"},actionLabel:{source:"static",value:null},labelType:{source:"static",value:"alert"},labelFontWeight:{source:"static",value:"300"},labelPosition:{source:"static",value:"bottom-left"},labelContent:{source:"static",value:"OP = OP"},buttonPosition:{source:"static",value:"right"},hoverBackgroundColor:{source:"static",value:"#FFF"},hoverBorderColor:{source:"static",value:"#FFF"},hoverColor:{source:"static",value:"#FFF"},minHeightSm:{source:"static",value:""},minHeightMd:{source:"static",value:""},minHeightLg:{source:"static",value:""},bannerImageFit:{source:"static",value:"cover"},imagePosition:{source:"static",value:"center"},imagePositionVertical:{source:"static",value:"center"},elementPadding:{source:"static",value:"16px"}}});const ve='{% block sw_cms_element_category %} <div class="sw-cms-el-category" :class="categoryShape"> <div class="sw-cms-el-category-image" :style="categoryBackgroundColor"> <img :src="mediaUrl" alt="Category Image" :class="categoryImageFit"> </div> <div class="sw-cms-el-category-content" :class="categoryContentClass"> <component :is="categoryTitleStyle" v-if="categoryName" :style="categoryTitleColorStyle" > {{ categoryName }} </component> <component :is="categoryTitleStyle" v-else :style="categoryTitleColorStyle" > Category placeholder </component> </div> </div> {% endblock %}';Shopware.Component.register("sw-cms-el-category",{template:ve,mixins:["cms-element"],inject:["repositoryFactory"],data(){return{categoryName:"",mediaUrl:""}},computed:{categoryBackgroundColor(){return{"background-color":this.element.config.categoryBackgroundColor.value}},categoryTitleStyle(){return this.element.config.categoryTitleStyle.value||"h3"},categoryTitleColorStyle(){var t;const e=(t=this.element.config.categoryTitleColor)==null?void 0:t.value;return e?{color:e}:{}},categoryContentClass(){return{"is-on-top":this.categoryTitlePosition==="on-top"}},categoryTitlePosition(){var e;return((e=this.element.config.categoryTitlePosition)==null?void 0:e.value)||"under"},categoryShape(){return`is-${this.element.config.categoryShape.value}`},categoryImageFit(){return`is-${this.element.config.categoryImageFit.value}`},categoryImagePadding(){return{padding:this.element.config.categoryImagePadding.value}},categoryCriteria(){const e=new Shopware.Data.Criteria;return e.addSorting({field:"name",order:"ASC"}),e}},watch:{"element.config.category.value":{handler(e){this.fetchCategoryName()},immediate:!0},cmsPageState:{deep:!0,handler(){this.$forceUpdate()}}},created(){this.initElementConfig("category"),this.fetchCategoryName()},methods:{fetchCategoryName(){const e=this.element.config.category.value;if(!e){this.categoryName="",this.mediaUrl=this.getFallbackImage();return}const t=this.repositoryFactory.create("category"),i=new Shopware.Data.Criteria;i.addAssociation("media"),t.get(e,Shopware.Context.api,i).then(l=>{this.categoryName=l.name,l.media&&l.media.url?this.mediaUrl=l.media.url:this.mediaUrl=this.getFallbackImage()})},getFallbackImage(){return Shopware.Filter.getByName("asset")("administration/static/img/cms/preview_mountain_large.jpg")},initElementConfig(e){this.element.config||(this.element.config={}),this.element.config[e]||(this.element.config[e]={value:null})}}});const fe=`{% block sw_cms_element_category_config %} <sw-colorpicker v-model="categoryBackgroundColor" colorOutput="hex" class="" label="Category background color" :alpha="true" zIndex="1000" @update:value="changeBackgroundColor"> </sw-colorpicker> <sw-entity-single-select v-model="element.config.category.value" :criteria="categoryCriteria" entity="category" label="Select a highlighted category" @update:value="changeCategory"> </sw-entity-single-select> <sw-select-field v-model:value="element.config.categoryTitleStyle.value" label="Select a title tag style" @update:value="changeCategoryTitleStyle"> <option value="h1">h1</option> <option value="h2">h2</option> <option value="h3">h3</option> <option value="h4">h4</option> <option value="h5">h5</option> <option value="h6">h6</option> <option value="span">span</option> </sw-select-field> <sw-colorpicker v-model="categoryTitleColor" colorOutput="hex" class="" label="Category title color" :alpha="true" zIndex="1000" @update:value="changeTitleColor"> </sw-colorpicker> <sw-select-field v-model:value="element.config.categoryTitlePosition.value" label="Select a title position" @update:value="changeCategoryTitlePosition"> <option value="under">Under image</option> <option value="on-top">On top of image</option> </sw-select-field> <sw-select-field v-if="element.config.categoryTitlePosition?.value === 'on-top'" v-model:value="element.config.categoryTitleHorizontal.value" label="Title horizontal alignment" @update:value="changeCategoryTitleHorizontal"> <option value="flex-start">Left</option> <option value="center">Center</option> <option value="flex-end">Right</option> </sw-select-field> <sw-select-field v-if="element.config.categoryTitlePosition?.value === 'on-top'" v-model:value="element.config.categoryTitleVertical.value" label="Title vertical alignment" @update:value="changeCategoryTitleVertical"> <option value="flex-start">Top</option> <option value="center">Center</option> <option value="flex-end">Bottom</option> </sw-select-field> <sw-text-field v-if="element.config.categoryTitlePosition?.value === 'on-top'" v-model="categoryImageInnerPadding" label="Image inner padding" placeholder="16px" @update:value="onChangeInnerPadding"> </sw-text-field> <sw-select-field v-model:value="element.config.categoryShape.value" label="Select a shape option" @update:value="changeCategoryShape"> <option value="circle"> Circle </option> <option value="square"> Square </option> </sw-select-field> <sw-select-field v-model:value="element.config.categoryImageFit.value" label="Select an image fit option" @update:value="changeCategoryImageFit"> <option value="contain"> Contain </option> <option value="cover"> Cover </option> </sw-select-field> <sw-text-field v-model="categoryImagePadding" label="Image padding" placeholder="0px" @update:value="onChangePadding"> </sw-text-field> {% endblock %}`,{Service:_e}=Shopware;Shopware.Component.register("sw-cms-el-config-category",{template:fe,mixins:["cms-element"],inject:["repositoryFactory"],computed:{categoryShape:{get(){return this.element.config.categoryShape.value},set(e){this.element.config.categoryShape.value=e}},category:{get(){return this.element.config.category.value},set(e){this.element.config.category.value=e}},categoryTitleStyle:{get(){return this.element.config.categoryTitleStyle.value},set(e){this.element.config.categoryTitleStyle.value=e}},categoryTitlePosition:{get(){return this.element.config.categoryTitlePosition.value},set(e){this.element.config.categoryTitlePosition.value=e}},categoryTitleHorizontal:{get(){return this.element.config.categoryTitleHorizontal.value},set(e){this.element.config.categoryTitleHorizontal.value=e}},categoryTitleVertical:{get(){return this.element.config.categoryTitleVertical.value},set(e){this.element.config.categoryTitleVertical.value=e}},categoryImageInnerPadding:{get(){return this.element.config.categoryImageInnerPadding.value},set(e){this.element.config.categoryImageInnerPadding.value=e}},categoryImageFit:{get(){return this.element.config.categoryImageFit.value},set(e){this.element.config.categoryImageFit.value=e}},categoryBackgroundColor:{get(){return this.element.config.categoryBackgroundColor.value},set(e){this.element.config.categoryBackgroundColor.value=e}},categoryTitleColor:{get(){return this.element.config.categoryTitleColor.value},set(e){this.element.config.categoryTitleColor.value=e}},categoryImagePadding:{get(){return this.element.config.categoryImagePadding.value},set(e){this.element.config.categoryImagePadding.value=e}}},created(){this.createdComponent(),this.loadCategories()},methods:{createdComponent(){this.initElementConfig("category")},changeBackgroundColor(e){this.element.config.categoryBackgroundColor.value=e,this.$emit("element-update",this.element)},changeTitleColor(e){this.element.config.categoryTitleColor.value=e,this.$emit("element-update",this.element)},changeCategory(e){this.element.config.category.value=e,this.$emit("element-update",this.element)},changeCategoryTitleStyle(e){this.element.config.categoryTitleStyle.value=e,this.$emit("element-update",this.element)},changeCategoryTitlePosition(e){this.element.config.categoryTitlePosition.value=e,this.$emit("element-update",this.element)},changeCategoryTitleHorizontal(e){this.element.config.categoryTitleHorizontal.value=e,this.$emit("element-update",this.element)},changeCategoryTitleVertical(e){this.element.config.categoryTitleVertical.value=e,this.$emit("element-update",this.element)},onChangeInnerPadding(e){this.element.config.categoryImageInnerPadding.value=e,this.$emit("element-update",this.element)},changeCategoryShape(e){this.$emit("element-update",this.element)},changeCategoryImageFit(e){this.$emit("element-update",this.element)},onChangePadding(e){this.element.config.categoryImagePadding.value=e,this.$emit("element-update",this.element)}}});const be=`{% block sw_cms_element_category_preview %} <div class="sw-cms-preview-category"> <div class="sw-cms-preview-category-content"> <div class="sw-cms-preview-category-content-image"> <img :src="assetFilter('/administration/static/img/cms/preview_mountain_small.jpg')" alt="" > </div> <h5>Category label</h5> </div> </div> {% endblock %}`;Shopware.Component.register("sw-cms-el-preview-category",{template:be,computed:{assetFilter(){return Shopware.Filter.getByName("asset")}}});Shopware.Service("cmsService").registerCmsElement({name:"category",label:"sw-cms.elements.category.label",component:"sw-cms-el-category",configComponent:"sw-cms-el-config-category",previewComponent:"sw-cms-el-preview-category",defaultConfig:{categoryBackgroundColor:{source:"static",value:"#cecece"},category:{source:"static",value:null},categoryTitleStyle:{source:"static",value:"h4"},categoryTitleColor:{source:"static",value:"#000"},categoryTitlePosition:{source:"static",value:"under"},categoryTitleHorizontal:{source:"static",value:"flex-start"},categoryTitleVertical:{source:"static",value:"flex-end"},categoryImageInnerPadding:{source:"static",value:"16px"},categoryShape:{source:"static",value:"circle"},categoryImageFit:{source:"static",value:"contain"},categoryImagePadding:{source:"static",value:"0px"}}});const we='{% block sw_cms_element_category_slider %} <div class="sw-cms-el-category-slider"> <div class="sw-cms-el-category-slider-intro"> <div v-if="element?.config?.categoryContent?.value" v-html="element.config.categoryContent.value"></div> </div> <div v-if="selectedCategories.length > 0" class="category-slider"> <sw-icon class="sw-cms-el-category-slider-intro-navigation-button" name="regular-chevron-left" size="24" /> <div class="category-slider-list"> <div v-for="(category, index) in selectedCategories.slice(0, 3)" :key="category.name" class="category-slider-item" :class="categoryShape" > <div class="category-slider-item-image" :style="combinedStyles"> <img :src="category.mediaUrl || getFallbackImage()" :alt="category.name" class="category-slider-image" :class="categoryImageFit" /> </div> <div class="category-slider-item-info"> <p class="category-slider-name">{{ category.name }}</p> </div> </div> </div> <sw-icon class="sw-cms-el-category-slider-intro-navigation-button" name="regular-chevron-right" size="24" /> </div> <p v-else class="category-slider-empty">No categories selected</p> </div> {% endblock %}';Shopware.Component.register("sw-cms-el-category-slider",{template:we,mixins:["cms-element"],inject:["repositoryFactory"],data(){return{selectedCategories:[],mediaUrl:""}},computed:{combinedStyles(){return{...this.categoryImagePadding,...this.categoryBackgroundColor}},selectedCategoriesForTemplate(){return this.selectedCategories},categoryShape(){var e;return`is-${((e=this.element.config.categoryShape)==null?void 0:e.value)||"circle"}`},categoryImageFit(){var e;return`is-${((e=this.element.config.categoryImageFit)==null?void 0:e.value)||"default"}`},categoryImagePadding(){var t;return{padding:((t=this.element.config.categoryImagePadding)==null?void 0:t.value)||"16px"}},categoryBackgroundColor(){var t;return{"background-color":((t=this.element.config.categoryBackgroundColor)==null?void 0:t.value)||"#cecece"}},categoryContent(){var e,t,i;return((i=(t=(e=this.element)==null?void 0:e.config)==null?void 0:t.categoryContent)==null?void 0:i.value)||"Content placeholder"},categoryCriteria(){const e=new Shopware.Data.Criteria;return e.addSorting({field:"name",order:"ASC"}),e}},watch:{selectedCategoriesForTemplate(e){},"element.config.categories.value":{deep:!0,handler(e){this.fetchCategoryDetails(e)}},cmsPageState:{deep:!0,handler(){this.$forceUpdate()}}},mounted(){var t;this.initElementConfig("category-slider");const e=((t=this.element.config.categories)==null?void 0:t.value)||[];this.fetchCategoryDetails(e)},methods:{async fetchCategoryDetails(e){if(!e||e.length===0){this.selectedCategories=[];return}try{const t=this.repositoryFactory.create("category"),i=new Shopware.Data.Criteria;i.setIds(e),i.addAssociation("media");const l=await t.search(i,Shopware.Context.api);this.selectedCategories=l.map(o=>({name:o.name,mediaUrl:o.media?o.media.url:null}))}catch{this.selectedCategories=[]}},getFallbackImage(){return Shopware.Filter.getByName("asset")("administration/static/img/cms/preview_mountain_large.jpg")},initElementConfig(e){this.element.config||(this.element.config={}),this.element.config.categories||(this.element.config.categories={value:[]}),this.element.config.categoryShape||(this.element.config.categoryShape={value:"circle"}),this.element.config.categoryImageFit||(this.element.config.categoryImageFit={value:"cover"}),this.element.config.categoryImagePadding||(this.element.config.categoryImagePadding={value:"16px"}),this.element.config.categoryBackgroundColor||(this.element.config.categoryBackgroundColor={value:"#cecece"}),this.element.config.categoryContent||(this.element.config.categoryContent={value:"<h2>Content placeholder</h2>"}),this.element.config.categorySliderItemsSm||(this.element.config.categorySliderItemsSm={value:"2"}),this.element.config.categorySliderItemsMd||(this.element.config.categorySliderItemsMd={value:"4"}),this.element.config.categorySliderItemsLg||(this.element.config.categorySliderItemsLg={value:"6"}),this.element.config.categorySliderNav||(this.element.config.categorySliderNav={value:!1}),this.element.config.categorySliderControls||(this.element.config.categorySliderControls={value:!0}),(!this.element.config.categorySliderControlPosition||!this.element.config.categorySliderControlPosition.value||!["top-right","centered","centered-whitespace"].includes(this.element.config.categorySliderControlPosition.value))&&(this.element.config.categorySliderControlPosition={value:"top-right"}),this.element.config.categorySliderControlSpacing||(this.element.config.categorySliderControlSpacing={value:""}),this.element.config.categorySliderAuto||(this.element.config.categorySliderAuto={value:!1}),this.element.config.categorySliderSpeed||(this.element.config.categorySliderSpeed={value:"400"}),this.element.config.categorySliderGutter||(this.element.config.categorySliderGutter={value:"16"}),this.element.config.categorySliderLazy||(this.element.config.categorySliderLazy={value:!0}),this.element.config.categorySliderLoop||(this.element.config.categorySliderLoop={value:!0}),this.element.config.categorySliderDrag||(this.element.config.categorySliderDrag={value:!0}),this.element.config.categorySliderMobileNav||(this.element.config.categorySliderMobileNav={value:!0}),this.element.config.categorySliderMobileControls||(this.element.config.categorySliderMobileControls={value:!0}),this.element.config.categorySliderSlideBy||(this.element.config.categorySliderSlideBy={value:"1"})},async save(){const e=this.element;this.element.config.categories.value||(this.element.config.categories.value=[]),this.element.config.categoryShape.value||(this.element.config.categoryShape.value="circle");try{const t=await axios.patch(`/api/cms-page/${this.element.id}`,e)}catch(t){this.handleSaveError(t)}},changeCategories(e){Array.isArray(e)?this.element.config.categories.value=e:this.element.config.categories.value=[],this.$emit("element-update",this.element)},handleSaveError(e){e.response&&e.response.data?console.error("Error response:",e.response.data):console.error("Save request failed:",e.message)}}});const ye=`{% block sw_cms_element_category_slider_config %} <sw-tabs position-identifier="sw-cms-element-category-slider-config" class="sw-cms-el-config-category-slider__tabs" default-item="category-settings" > <template #default="{ active }"> <sw-tabs-item :title="$tc('sw-cms.elements.category_slider.config.tab.categorySettings')" name="category-settings" :active-tab="active" > Category Settings </sw-tabs-item> <sw-tabs-item :title="$tc('sw-cms.elements.category_slider.config.tab.sliderSettings')" name="slider-settings" :active-tab="active" > Slider Settings </sw-tabs-item> </template> <template #content="{ active }"> <sw-container v-if="active === 'category-settings'" class="sw-cms-el-config-category-slider__tab-category-settings" > <sw-text-editor v-model="categoryContent" label="Content" placeholder="Enter content" @update:value="onChangeContent"> </sw-text-editor> <sw-multi-select v-model="categories" label="Select category" :options="multiSelectValues" @update:value="changeCategories" :loading="isLoading"> </sw-multi-select> <div v-if="warningMessage" style="color: red; margin-top: -24px; margin-bottom: 24px;"> {{ warningMessage }} </div> <sw-colorpicker v-model="categoryBackgroundColor" colorOutput="hex" label="Category background color" :alpha="true" zIndex="1000" @update:value="changeBackgroundColor"> </sw-colorpicker> <sw-select-field v-model:value="element.config.categoryShape.value" label="Select a shape option" @update:value="changeCategoryShape"> <option value="circle">Circle</option> <option value="square">Square</option> </sw-select-field> <sw-select-field v-model:value="element.config.categoryImageFit.value" label="Select an image fit option" @update:value="changeCategoryImageFit"> <option value="contain">Contain</option> <option value="cover">Cover</option> </sw-select-field> <sw-text-field v-model="categoryImagePadding" label="Image padding" placeholder="16px" @update:value="onChangePadding"> </sw-text-field> </sw-container> <sw-container v-if="active === 'slider-settings'" class="sw-cms-el-config-category-slider__tab-slider-settings" > <sw-text-field v-model="categorySliderItemsSm" label="Items on Small Screens (sm)" placeholder="2" @update:value="changeCategorySliderItemsSm"> </sw-text-field> <sw-text-field v-model="categorySliderItemsMd" label="Items on Medium Screens (md)" placeholder="4" @update:value="changeCategorySliderItemsMd"> </sw-text-field> <sw-text-field v-model="categorySliderItemsLg" label="Items on Large Screens (lg)" placeholder="6" @update:value="changeCategorySliderItemsLg"> </sw-text-field> <sw-text-field v-model="categorySliderSpeed" label="Slider Speed" placeholder="Enter speed in ms (e.g., 300)" @update:value="changeCategorySliderSpeed"> </sw-text-field> <sw-text-field v-model="categorySliderGutter" label="Slider gutter" placeholder="Enter gutter (e.g., 16)" @update:value="changeCategorySliderGutter"> </sw-text-field> <sw-select-field v-model:value="categorySliderControlPosition" label="Control Position" @update:value="changeCategorySliderControlPosition"> <option value="top-right">Top (Right Side)</option> <option value="centered">Centered</option> <option value="centered-whitespace">Centered with Space</option> </sw-select-field> <sw-text-field v-if="categorySliderControlPosition === 'centered-whitespace'" v-model="categorySliderControlSpacing" label="Space between controls and slider" placeholder="Enter space in px (e.g., 50)" @update:value="changeCategorySliderControlSpacing"> </sw-text-field> <sw-text-field v-model:value="categorySliderSlideBy" label="Slide By" placeholder="Enter a positive number or page" :help-text="'Set how many items to slide at once. Use a positive number (e.g., 2) or page to slide by the number of visible items.'" @update:value="changeCategorySliderSlideBy"> </sw-text-field> <sw-checkbox-field v-model="categorySliderNav" label="Show navigation" @update:value="changeCategorySliderNav"> </sw-checkbox-field> <sw-checkbox-field v-model="categorySliderControls" label="Show controls" @update:value="changeCategorySliderControls"> </sw-checkbox-field> <sw-checkbox-field v-model="categorySliderAuto" label="Enable autoplay" @update:value="changeCategorySliderAuto"> </sw-checkbox-field> <sw-checkbox-field v-model="categorySliderLazy" label="Enable lazy loading" @update:value="changeCategorySliderLazy"> </sw-checkbox-field> <sw-checkbox-field v-model="categorySliderLoop" label="Enable loop" @update:value="changeCategorySliderLoop"> </sw-checkbox-field> <sw-checkbox-field v-model="categorySliderDrag" label="Enable mouse drag" @update:value="changeCategorySliderDrag"> </sw-checkbox-field> <h3 style="margin-top: 20px;">Responsive Settings</h3> <sw-checkbox-field v-model="categorySliderMobileNav" label="Mobile Navigation" @update:value="changeCategorySliderMobileNav"> </sw-checkbox-field> <sw-checkbox-field v-model="categorySliderMobileControls" label="Mobile Controls" @update:value="changeCategorySliderMobileControls"> </sw-checkbox-field> </sw-container> </template> </sw-tabs> {% endblock %}`,{Service:Ce}=Shopware;Shopware.Component.register("sw-cms-el-config-category-slider",{template:ye,mixins:["cms-element"],inject:["repositoryFactory"],data(){return{multiSelectValues:[],isLoading:!1,warningMessage:""}},computed:{categoryContent:{get(){return this.element.config.categoryContent.value},set(e){this.element.config.categoryContent.value=e}},categoryBackgroundColor:{get(){return this.element.config.categoryBackgroundColor.value},set(e){this.element.config.categoryBackgroundColor.value=e}},categoryShape:{get(){return this.element.config.categoryShape.value},set(e){this.element.config.categoryShape.value=e}},categories:{get(){return this.element.config.categories.value},set(e){this.element.config.categories.value=e}},categoryImageFit:{get(){return this.element.config.categoryImageFit.value},set(e){this.element.config.categoryImageFit.value=e}},categoryImagePadding:{get(){return this.element.config.categoryImagePadding.value},set(e){this.element.config.categoryImagePadding.value=e}},categorySliderItemsSm:{get(){return this.element.config.categorySliderItemsSm.value},set(e){this.element.config.categorySliderItemsSm.value=e}},categorySliderItemsMd:{get(){return this.element.config.categorySliderItemsMd.value},set(e){this.element.config.categorySliderItemsMd.value=e}},categorySliderItemsLg:{get(){return this.element.config.categorySliderItemsLg.value},set(e){this.element.config.categorySliderItemsLg.value=e}},categorySliderSpeed:{get(){return this.element.config.categorySliderSpeed.value},set(e){this.element.config.categorySliderSpeed.value=e}},categorySliderGutter:{get(){return this.element.config.categorySliderGutter.value},set(e){this.element.config.categorySliderGutter.value=e}},categorySliderSlideBy:{get(){return this.element.config.categorySliderSlideBy.value},set(e){this.element.config.categorySliderSlideBy.value=e}},categorySliderNav:{get(){return this.element.config.categorySliderNav.value},set(e){this.element.config.categorySliderNav.value=e}},categorySliderControls:{get(){return this.element.config.categorySliderControls.value},set(e){this.element.config.categorySliderControls.value=e}},categorySliderControlPosition:{get(){return this.element.config.categorySliderControlPosition.value},set(e){this.element.config.categorySliderControlPosition.value=e}},categorySliderControlSpacing:{get(){return this.element.config.categorySliderControlSpacing.value},set(e){this.element.config.categorySliderControlSpacing.value=e}},categorySliderAuto:{get(){return this.element.config.categorySliderAuto.value},set(e){this.element.config.categorySliderAuto.value=e}},categorySliderLazy:{get(){return this.element.config.categorySliderLazy.value},set(e){this.element.config.categorySliderLazy.value=e}},categorySliderLoop:{get(){return this.element.config.categorySliderLoop.value},set(e){this.element.config.categorySliderLoop.value=e}},categorySliderDrag:{get(){return this.element.config.categorySliderDrag.value},set(e){this.element.config.categorySliderDrag.value=e}},categorySliderMobileNav:{get(){return this.element.config.categorySliderMobileNav.value},set(e){this.element.config.categorySliderMobileNav.value=e}},categorySliderMobileControls:{get(){return this.element.config.categorySliderMobileControls.value},set(e){this.element.config.categorySliderMobileControls.value=e}}},created(){this.createdComponent(),this.loadCategories()},methods:{createdComponent(){this.initElementConfig("category-slider")},changeBackgroundColor(e){this.element.config.categoryBackgroundColor.value=e,this.$emit("element-update",this.element)},onChangeContent(e){this.element.config.categoryContent.value=e,this.$emit("element-update",this.element)},changeCategories(e){Array.isArray(e)?this.element.config.categories.value=e:this.element.config.categories.value=[],this.element.config.categories.value.length===0?this.warningMessage="At least one category must be selected.":this.warningMessage="",this.$emit("element-update",this.element)},changeCategoryShape(e){this.$emit("element-update",this.element)},changeCategoryImageFit(e){this.$emit("element-update",this.element)},onChangePadding(e){this.element.config.categoryImagePadding.value=e,this.$emit("element-update",this.element)},changeCategorySliderItemsSm(e){this.element.config.categorySliderItemsSm||(this.element.config.categorySliderItemsSm={value:""}),this.element.config.categorySliderItemsSm.value=e,this.$emit("element-update",this.element)},changeCategorySliderItemsMd(e){this.element.config.categorySliderItemsMd||(this.element.config.categorySliderItemsMd={value:""}),this.element.config.categorySliderItemsMd.value=e,this.$emit("element-update",this.element)},changeCategorySliderItemsLg(e){this.element.config.categorySliderItemsLg||(this.element.config.categorySliderItemsLg={value:""}),this.element.config.categorySliderItemsLg.value=e,this.$emit("element-update",this.element)},changeCategorySliderSpeed(e){this.element.config.categorySliderSpeed.value=e,this.$emit("element-update",this.element)},changeCategorySliderGutter(e){this.element.config.categorySliderGutter.value=e,this.$emit("element-update",this.element)},changeCategorySliderSlideBy(e){this.element.config.categorySliderSlideBy.value=e,this.$emit("element-update",this.element)},changeCategorySliderNav(e){this.element.config.categorySliderNav.value=e,this.$emit("element-update",this.element)},changeCategorySliderControls(e){this.element.config.categorySliderControls.value=e,this.$emit("element-update",this.element)},changeCategorySliderControlPosition(e){this.element.config.categorySliderControlPosition.value=e,this.$emit("element-update",this.element)},changeCategorySliderControlSpacing(e){this.element.config.categorySliderControlSpacing.value=e,this.$emit("element-update",this.element)},changeCategorySliderAuto(e){this.element.config.categorySliderAuto.value=e,this.$emit("element-update",this.element)},changeCategorySliderLazy(e){this.element.config.categorySliderLazy.value=e,this.$emit("element-update",this.element)},changeCategorySliderLoop(e){this.element.config.categorySliderLoop.value=e,this.$emit("element-update",this.element)},changeCategorySliderDrag(e){this.element.config.categorySliderDrag.value=e,this.$emit("element-update",this.element)},changeCategorySliderMobileNav(e){this.element.config.categorySliderMobileNav.value=e,this.$emit("element-update",this.element)},changeCategorySliderMobileControls(e){this.element.config.categorySliderMobileControls.value=e,this.$emit("element-update",this.element)},async loadCategories(){this.isLoading=!0;try{const e=Ce("repositoryFactory").create("category"),t=new Shopware.Data.Criteria,i=await e.search(t,Shopware.Context.api);this.multiSelectValues=i.map(l=>({label:l.name,value:l.id}))}catch{this.multiSelectValues=[]}finally{this.isLoading=!1}}}});const ke=`{% block sw_cms_element_category_slider_preview %} <div class="sw-cms-preview-category-slider"> <div class="sw-cms-preview-category-slider-content"> <div class="sw-cms-preview-category-slider-content-top"> <sw-icon name="regular-chevron-left" size="10" /> <div class="sw-cms-preview-category-slider-content-image"> <img :src="assetFilter('/administration/static/img/cms/preview_mountain_small.jpg')" alt="" > </div> <sw-icon name="regular-chevron-right" size="10" /> </div> <h5>Slider label</h5> </div> </div> {% endblock %}`;Shopware.Component.register("sw-cms-el-preview-category-slider",{template:ke,computed:{assetFilter(){return Shopware.Filter.getByName("asset")}}});Shopware.Service("cmsService").registerCmsElement({name:"category-slider",label:"sw-cms.elements.category-slider.label",component:"sw-cms-el-category-slider",configComponent:"sw-cms-el-config-category-slider",previewComponent:"sw-cms-el-preview-category-slider",defaultConfig:{categoryContent:{source:"static",value:"Content placeholder"},categories:{source:"static",value:null},categoryShape:{source:"static",value:"circle"},categoryImageFit:{source:"static",value:"contain"},categoryImagePadding:{source:"static",value:"16px"},categoryBackgroundColor:{source:"static",value:"#cecece"},categorySliderItemsSm:{source:"static",value:"2"},categorySliderItemsMd:{source:"static",value:"4"},categorySliderItemsLg:{source:"static",value:"6"},categorySliderNav:{source:"static",value:null},categorySliderControls:{source:"static",value:!0},categorySliderControlPosition:{source:"static",value:"centered"},categorySliderControlSpacing:{source:"static",value:""},categorySliderAuto:{source:"static",value:null},categorySliderSpeed:{source:"static",value:"400"},categorySliderGutter:{source:"static",value:"16"},categorySliderLazy:{source:"static",value:!0},categorySliderLoop:{source:"static",value:!0},categorySliderDrag:{source:"static",value:!0},categorySliderMobileNav:{source:"static",value:!0},categorySliderMobileControls:{source:"static",value:!0},categorySliderSlideBy:{source:"static",value:"1"}}});Shopware.Module.register("comaxx-menu",{type:"core",name:"Comaxx Settings Page",title:"Comaxx Settings",description:"The page for Comaxx Settings",color:"#ff5000",position:100,routes:{settings:{component:"comaxx-menu-settings",path:"settings"}},navigation:[{label:"Comaxx",color:"#ff5000",path:"comaxx.menu.settings",icon:"regular-sparkles",position:1e3}]});const Se=`{% block comaxx_menu_settings %} <sw-page class="comaxx-menu-settings"> <template v-slot:content> <sw-card-view> <template class="comaxx-settings-settings__content"> <sw-tabs> <template v-slot:content="{ active }"> <sw-card :title="$tc('Comaxx Thema')" > <router-link :to="{ name: 'sw.theme.manager.detail', params: { id: customThemeId }}" > <p>Naar de Comaxx Thema instellingen</p> </router-link> </sw-card> <sw-card :title="$tc('Comaxx CMS')" > <router-link :to="{ name: 'sw.extension.config', params: { namespace: 'ComaxxCms' }}" > <p>Naar de Comaxx CMS instellingen</p> </router-link> </sw-card> </template> </sw-tabs> </template> </sw-card-view> </template> </sw-page> {% endblock %}`,{Mixin:Be}=Shopware,{Criteria:m}=Shopware.Data;Shopware.Component.register("comaxx-menu-settings",{template:Se,inject:["repositoryFactory"],data(){return{customThemeId:1}},mounted(){this.themeRepository=this.repositoryFactory.create("theme"),this.loadCustomThemeId()},methods:{openRoute(e){this.$router.push(e)},loadCustomThemeId(){const e=new m;e.addFilter(m.equals("name","ComaxxTheme")),this.themeRepository.search(e,Shopware.Context.api).then(t=>{t.length>0&&(this.customThemeId=t[0].id)})}}});
//# sourceMappingURL=comaxx-cms-BWekMET4.js.map
