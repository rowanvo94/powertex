const d="",{Component:u}=Shopware;u.override("sw-cms-sidebar",{template:d,computed:{cmsBlockCategoriesOptions(){return[...this.$super("cmsBlockCategoriesOptions"),{value:"comaxx-grid",label:"Grid / Columns"},{value:"comaxx-custom",label:"CMS / Custom"}]}}});const h=`{% block sw_text_editor %} <template v-if="!inheritedGrid"> <div class="sw-text-editor" :class="classes"> {% block sw_text_editor_label %} <div v-if="showLabel" class="sw-text-editor__label" > <slot name="label"> {{ label }} </slot> </div> {% endblock %} {% block sw_text_editor_box %} <div class="sw-text-editor__box"> <textarea v-if="!isInlineEdit && !isCodeEdit" :ref="uniqueNameTiny" :placeholder="placeholder" :disabled="disabled" :value="value" /> {% block sw_text_editor_box_content %} <sw-code-editor v-if="isCodeEdit" :value="value" setFocus @blur="emitHtmlContent" ref="codeEditor"> </sw-code-editor> <div class="sw-text-editor__content" v-if="!isCodeEdit && isInlineEdit"> <div class="sw-text-editor__content-editor" :ref="uniqueNameTiny" :contenteditable="!disabled" :style="verticalAlignStyle" spellcheck="false" @focus="onFocus" @paste="onPaste" @blur="emitContent" @input="onContentChange" tabindex="-1" v-html="$sanitize(content, { ADD_ATTR: ['target'] })"> </div> <div v-if="placeholderVisible" class="sw-text-editor__content-placeholder" v-html="$sanitize(placeholder)"></div> </div> {% endblock %} </div> {% endblock %} <sw-field-error v-if="error" :error="error" /> </div> </template> <template v-else> {% parent %} </template> {% endblock %}`,{Component:p}=Shopware,{Criteria:Ze}=Shopware.Data;let r=[{title:"Button Primary",classes:"btn btn-primary",selector:"a"},{title:"Button Secondary",classes:"btn btn-secondary",selector:"a"},{title:"Button Tertiary",classes:"btn btn-tertiary",selector:"a"},{title:"Custom class 1",classes:"custom-style-first",inline:"span"},{title:"Custom class 2",classes:"custom-style-second",inline:"span"},{title:"Horizontal List",classes:"list-horizontal",selector:"ul, ol"},{title:"Vertical List",classes:"list-vertical",selector:"ul, ol"}];p.override("sw-text-editor",{template:h,inject:["systemConfigApiService","repositoryFactory"],data(){return{config:{},domain:"ComaxxCms.config",handleValue:!0,mediaModalIsOpen:!1,categoriesCollection:[],settings:{mainType:null,entityName:null,entityId:null,url:null,newTab:!1},loaded:!1,inheritedGrid:!1,currentEditorInstance:!1,uniqueNameTiny:"tinyMce"+this._uid}},watch:{value:{handler(){this.currentEditorInstance&&window.tinymce.setActive(this.currentEditorInstance),this.$refs[this.uniqueNameTiny]&&this.$refs[this.uniqueNameTiny].innerHtml!==this.value&&(window.tinymce&&window.tinymce.activeEditor&&!this.isInlineEdit&&(this.value?this.value!==window.tinymce.activeEditor.getContent()&&window.tinymce.activeEditor.setContent(this.value):window.tinymce.activeEditor.setContent("")),this.$refs[this.uniqueNameTiny].innerHtml=this.value,this.content=this.value,this.isEmpty=this.emptyCheck(this.content),this.placeholderVisible=this.isEmpty)}}},computed:{},mounted(){this.isInlineEdit?this.mountedComponent():!this.disabled&&!this.loaded?this.$nextTick(function(){this.loaded=!0,this.loadTinyMceEditor()}):this.inheritedGrid=!0},methods:{loadTinyMceEditor(){const e=Shopware.Application.getContainer("factory").locale.getLastKnownLocale();this.readConfig(e)},readConfig(e){let t="";var i=this;return this.systemConfigApiService.getValues(this.domain).then(l=>{this.config=l;const a=this.config&&this.config["ComaxxCms.config.customMceConfig"]?this.config["ComaxxCms.config.customMceConfig"]:"";let o=this.getTinyMceConfig(e);try{a&&(typeof a=="object"?t=a:t=JSON.parse(a),Object.keys(t).sort().forEach(n=>{n==="style_formats"?o[n]=r.concat(t[n]):o[n]=t[n]}))}catch{console.log("The custom configuration is invalid.")}window.tinymce.init(o),i.currentEditorInstance=window.tinymce.activeEditor})},getTinyMceConfig(e){const t=this,i=`${(Shopware.Context.api.assetsPath+"ComaxxCms.config".split(".")[0]).toLowerCase()+"/administration/css/comaxx-cms.css"}`;return{target:this.$refs[this.uniqueNameTiny],language:e.substring(0,2),skin:"oxide",themes:"advanced",height:450,plugins:"searchreplace wordcount link lists",menu:{file:{title:"File",items:""},edit:{title:"Edit",items:"searchreplace"},view:{title:"View",items:""},insert:{title:"Insert",items:""},format:{title:"Format",items:"formats"},tools:{title:"Tools",items:"wordcount"},help:{title:"Help",items:""}},menubar:"file edit view insert format tools",contextmenu:"",toolbar:"formatselect | undo redo | bold italic underline strikethrough | alignleft aligncenter alignright alignjustify | outdent indent | numlist bullist | forecolor backcolor | removeformat link",browser_spellcheck:!1,importcss_append:!0,autosave_ask_before_unload:!1,relative_urls:!1,convert_urls:!1,remove_script_host:!0,style_formats_merge:!1,style_formats:r,templates:[],template_cdate_format:"[Date Created (CDATE): %m/%d/%Y : %H:%M:%S]",template_mdate_format:"[Date Modified (MDATE): %m/%d/%Y : %H:%M:%S]",quickbars_selection_toolbar:"bold italic | h2 h3 blockquote quickimage quicktable",noneditable_noneditable_class:"mceNonEditable",toolbar_mode:"wrap",extended_valid_elements:"button[*]|script[src|async|defer|type|charset|crossorigin]",force_br_newlines:!0,formats:{span:{inline:"span",classes:"tinymce-span"},span:{inline:"div",classes:"tinymce-div"}},content_css:i,block_formats:"Paragraph=p;Heading 1=h1;Heading 2=h2;Heading 3=h3;Heading 4=h4;Heading 5=h5;Heading 6=h6;Preformatted=pre;",init_instance_callback:function(l){l.on("Change",t.onChange)},setup:l=>{l.on("SetContent",t.onChange),typeof $=="function"&&l.on("blur",()=>{$(".tox-pop").remove()})},file_picker_callback:function(l,a,o){t.mediaModalIsOpen=!0,t.filePickerCallback=l,t.filePickerMeta=o}}},resetSettings(){this.settings.mainType=null,this.settings.entityName=null,this.settings.entityId=null,this.settings.url=null,this.settings.newTab=!1,this.settings.title=null},onSelectionAdd(e){e&&(this.emptyCategoriesCollection(),this.setCategoriesCollection(e),this.categoriesCollection.add(e))},onChange(e){this.emitHtmlContent(e.target.getContent()),this.handleValue=!1},onContentChange(){this.isEmpty=this.emptyCheck(this.getContentValue()),this.placeholderVisible=this.isEmpty,this.setWordCount()},setWordCount(){this.$refs[this.uniqueNameTiny]&&(this.textLength=this.$refs[this.uniqueNameTiny].innerText.length)},getContentValue(){return!this.$refs[this.uniqueNameTiny]||!this.$refs[this.uniqueNameTiny].innerHTML||!this.$refs[this.uniqueNameTiny].textContent||!this.$refs[this.uniqueNameTiny].textContent.length||this.$refs[this.uniqueNameTiny].textContent.length<=0?null:this.$refs[this.uniqueNameTiny].innerHTML},removeFocus(){this.isActive&&(this.$refs[this.uniqueNameTiny]&&this.$refs[this.uniqueNameTiny].innerHTML.length<=0&&(this.placeholderVisible=!0),this.isActive=!1,this.emitContent(),document.removeEventListener("mousedown",this.onDocumentClick))}}});const v='{% block sw_cms_grid_block_12 %} <div class="sw-cms-grid-block-12-column"> <slot name="col-1"></slot> </div> {% endblock %}';Shopware.Component.register("sw-cms-block-grid-12",{template:v});const f='{% block sw_cms_block_grid_12_preview %} <div class="sas-cms-grid-block-12-column-preview"> <div class="sas-cms-block-grid"> <div class="sas-cms-block-column" style="width: 100%;"></div> </div> </div> {% endblock %}';Shopware.Component.register("sw-cms-preview-grid-12",{template:f});Shopware.Service("cmsService").registerCmsBlock({name:"grid-12",label:"sas-cms-grid.blocks.grid.oneColumn.label",category:"comaxx-grid",component:"sw-cms-block-grid-12",previewComponent:"sw-cms-preview-grid-12",defaultConfig:{marginBottom:"20px",marginTop:"20px",marginLeft:"20px",marginRight:"20px",sizingMode:"boxed"},slots:{"col-1":"text"}});const b='{% block sw_cms_grid_block_6_6 %} <div class="sw-cms-grid-block-6-6-column"> <slot name="col-1"></slot> <slot name="col-2"></slot> </div> {% endblock %}';Shopware.Component.register("sw-cms-block-grid-6-6",{template:b});const w='{% block sw_cms_block_grid_6_6_preview %} <div class="sas-cms-grid-block-6-6-column-preview"> <div class="sas-cms-block-grid"> <div class="sas-cms-block-column" style="width: 50%;"></div> <div class="sas-cms-block-column" style="width: 50%;"></div> </div> </div> {% endblock %}';Shopware.Component.register("sw-cms-preview-grid-6-6",{template:w});Shopware.Service("cmsService").registerCmsBlock({name:"grid-6-6",label:"sas-cms-grid.blocks.grid.twoColumn.label",category:"comaxx-grid",component:"sw-cms-block-grid-6-6",previewComponent:"sw-cms-preview-grid-6-6",defaultConfig:{marginBottom:"20px",marginTop:"20px",marginLeft:"20px",marginRight:"20px",sizingMode:"boxed"},slots:{"col-1":"text","col-2":"text"}});const y='{% block sw_cms_block_grid_4_4_4_column %} <div class="sw-cms-block-product-three-column"> <slot name="col-1"></slot> <slot name="col-2"></slot> <slot name="col-3"></slot> </div> {% endblock %}';Shopware.Component.register("sw-cms-block-grid-4-4-4",{template:y});const C='{% block sw_cms_block_grid_4_4_4_column_preview %} <div class="sas-cms-grid-block-two-column-preview"> <div class="sas-cms-block-grid"> <div class="sas-cms-block-column" style="width: 33.33%;"></div> <div class="sas-cms-block-column" style="width: 33.33%;"></div> <div class="sas-cms-block-column" style="width: 33.33%;"></div> </div> </div> {% endblock %}';Shopware.Component.register("sas-cms-grid-block-three-column-preview",{template:C});Shopware.Service("cmsService").registerCmsBlock({name:"grid-4-4-4",label:"sas-cms-grid.blocks.grid.threeColumn.label",category:"comaxx-grid",component:"sw-cms-block-grid-4-4-4",previewComponent:"sas-cms-grid-block-three-column-preview",defaultConfig:{marginBottom:"20px",marginTop:"20px",marginLeft:"20px",marginRight:"20px",sizingMode:"boxed"},slots:{"col-1":"text","col-2":"text","col-3":"text"}});const k='{% block sw_cms_block_grid__3_3_3_3_column %} <div class="sw-cms-grid-block-3-3-3-3-column"> <slot name="col-1"></slot> <slot name="col-2"></slot> <slot name="col-3"></slot> <slot name="col-4"></slot> </div> {% endblock %}';Shopware.Component.register("sw-cms-block-grid-3-3-3-3",{template:k});const S='{% block sw_cms_block_grid__3_3_3_3_column_preview %} <div class="sas-cms-grid-block-four-column-preview"> <div class="sas-cms-block-grid"> <div class="sas-cms-block-column" style="width: 25%;"></div> <div class="sas-cms-block-column" style="width: 25%;"></div> <div class="sas-cms-block-column" style="width: 25%;"></div> <div class="sas-cms-block-column" style="width: 25%;"></div> </div> </div> {% endblock %}';Shopware.Component.register("sas-cms-grid-block-four-column-preview",{template:S});Shopware.Service("cmsService").registerCmsBlock({name:"grid-3-3-3-3",label:"sas-cms-grid.blocks.grid.fourColumn.label",category:"comaxx-grid",component:"sw-cms-block-grid-3-3-3-3",previewComponent:"sas-cms-grid-block-four-column-preview",defaultConfig:{marginBottom:"20px",marginTop:"20px",marginLeft:"20px",marginRight:"20px",sizingMode:"boxed"},slots:{"col-1":"text","col-2":"text","col-3":"text","col-4":"text"}});const _='{% block sw_cms_grid_block_five_columns %} <div class="sw-cms-grid-block-five-columns"> <slot name="col-1"></slot> <slot name="col-2"></slot> <slot name="col-3"></slot> <slot name="col-4"></slot> <slot name="col-5"></slot> </div> {% endblock %}';Shopware.Component.register("sw-cms-block-grid-five-columns",{template:_});const x='{% block sw_cms_block_grid_12_preview %} <div class="sas-cms-grid-block-five-columns-preview"> <div class="sas-cms-block-grid"> <div class="sas-cms-block-column" style="width: 20%;"></div> <div class="sas-cms-block-column" style="width: 20%;"></div> <div class="sas-cms-block-column" style="width: 20%;"></div> <div class="sas-cms-block-column" style="width: 20%;"></div> <div class="sas-cms-block-column" style="width: 20%;"></div> </div> </div> {% endblock %}';Shopware.Component.register("sw-cms-preview-grid-five-columns",{template:x});Shopware.Service("cmsService").registerCmsBlock({name:"grid-five-columns",label:"sas-cms-grid.blocks.grid.fiveColumn.label",category:"comaxx-grid",component:"sw-cms-block-grid-five-columns",previewComponent:"sw-cms-preview-grid-five-columns",defaultConfig:{marginBottom:"20px",marginTop:"20px",marginLeft:"20px",marginRight:"20px",sizingMode:"boxed"},slots:{"col-1":"text","col-2":"text","col-3":"text","col-4":"text","col-5":"text"}});const T='{% block sw_cms_block_grid__2_2_2_2_2_2_column %} <div class="sw-cms-grid-block-2-2-2-2-2-2-column"> <slot name="col-1"></slot> <slot name="col-2"></slot> <slot name="col-3"></slot> <slot name="col-4"></slot> <slot name="col-5"></slot> <slot name="col-6"></slot> </div> {% endblock %}';Shopware.Component.register("sw-cms-block-grid-2-2-2-2-2-2",{template:T});const I='{% block sw_cms_block_grid__2_2_2_2_2_2_column_preview %} <div class="sas-cms-grid-block-four-column-preview"> <div class="sas-cms-block-grid"> <div class="sas-cms-block-column" style="width: 16.6667%;"></div> <div class="sas-cms-block-column" style="width: 16.6667%;"></div> <div class="sas-cms-block-column" style="width: 16.6667%;"></div> <div class="sas-cms-block-column" style="width: 16.6667%;"></div> <div class="sas-cms-block-column" style="width: 16.6667%;"></div> <div class="sas-cms-block-column" style="width: 16.6667%;"></div> </div> </div> {% endblock %}';Shopware.Component.register("sas-cms-grid-block-six-column-preview",{template:I});Shopware.Service("cmsService").registerCmsBlock({name:"grid-2-2-2-2-2-2",label:"sas-cms-grid.blocks.grid.sixColumn.label",category:"comaxx-grid",component:"sw-cms-block-grid-2-2-2-2-2-2",previewComponent:"sas-cms-grid-block-six-column-preview",defaultConfig:{marginBottom:"20px",marginTop:"20px",marginLeft:"20px",marginRight:"20px",sizingMode:"boxed"},slots:{"col-1":"text","col-2":"text","col-3":"text","col-4":"text","col-5":"text","col-6":"text"}});const B='{% block sw_cms_block_product_3_6_3_column %} <div class="sw-cms-block-product-3-6-3-column"> <slot name="col-1"></slot> <slot name="col-2"></slot> <slot name="col-3"></slot> </div> {% endblock %}';Shopware.Component.register("sw-cms-block-grid-3-6-3",{template:B});const M='{% block sw_cms_block_product_3_6_3_column_preview %} <div class="sas-cms-grid-block-3-6-3-column-preview"> <div class="sas-cms-block-grid"> <div class="sas-cms-block-column" style="width: 25%;"></div> <div class="sas-cms-block-column" style="width: 50%;"></div> <div class="sas-cms-block-column" style="width: 25%;"></div> </div> </div> {% endblock %}';Shopware.Component.register("sas-cms-grid-block-3-6-3-column-preview",{template:M});Shopware.Service("cmsService").registerCmsBlock({name:"grid-3-6-3",label:"sas-cms-grid.blocks.grid.3-6-3.label",category:"comaxx-grid",component:"sw-cms-block-grid-3-6-3",previewComponent:"sas-cms-grid-block-3-6-3-column-preview",defaultConfig:{marginBottom:"20px",marginTop:"20px",marginLeft:"20px",marginRight:"20px",sizingMode:"boxed"},slots:{"col-1":"text","col-2":"text","col-3":"text"}});const F='{% block sw_cms_block_grid__6_3_3_column %} <div class="sw-cms-block-product-6_3_3-column"> <slot name="col-1"></slot> <slot name="col-2"></slot> <slot name="col-3"></slot> </div> {% endblock %}';Shopware.Component.register("sw-cms-block-grid-6-3-3",{template:F});const H='{% block sw_cms_block_product_6_3_3_column_preview %} <div class="sas-cms-grid-block-6-3-3-column-preview"> <div class="sas-cms-block-grid"> <div class="sas-cms-block-column" style="width: 50%;"></div> <div class="sas-cms-block-column" style="width: 25%;"></div> <div class="sas-cms-block-column" style="width: 25%;"></div> </div> </div> {% endblock %}';Shopware.Component.register("sas-cms-grid-block-6-3-3-column-preview",{template:H});Shopware.Service("cmsService").registerCmsBlock({name:"grid-6-3-3",label:"sas-cms-grid.blocks.grid.6-3-3.label",category:"comaxx-grid",component:"sw-cms-block-grid-6-3-3",previewComponent:"sas-cms-grid-block-6-3-3-column-preview",defaultConfig:{marginBottom:"20px",marginTop:"20px",marginLeft:"20px",marginRight:"20px",sizingMode:"boxed"},slots:{"col-1":"text","col-2":"text","col-3":"text"}});const P='{% block sw_cms_block_grid__3_3_6_column %} <div class="sw-cms-block-product-3_3_6-column"> <slot name="col-1"></slot> <slot name="col-2"></slot> <slot name="col-3"></slot> </div> {% endblock %}';Shopware.Component.register("sw-cms-block-grid-3-3-6",{template:P});const L='{% block sw_cms_block_product_3_3_6_column_preview %} <div class="sas-cms-grid-block-3-3-6-column-preview"> <div class="sas-cms-block-grid"> <div class="sas-cms-block-column" style="width: 25%;"></div> <div class="sas-cms-block-column" style="width: 25%;"></div> <div class="sas-cms-block-column" style="width: 50%;"></div> </div> </div> {% endblock %}';Shopware.Component.register("sas-cms-grid-block-3-3-6-column-preview",{template:L});Shopware.Service("cmsService").registerCmsBlock({name:"grid-3-3-6",label:"sas-cms-grid.blocks.grid.3-3-6.label",category:"comaxx-grid",component:"sw-cms-block-grid-3-3-6",previewComponent:"sas-cms-grid-block-3-3-6-column-preview",defaultConfig:{marginBottom:"20px",marginTop:"20px",marginLeft:"20px",marginRight:"20px",sizingMode:"boxed"},slots:{"col-1":"text","col-2":"text","col-3":"text"}});const z='{% block sw_cms_block_grid__2_8_2_column %} <div class="sw-cms-block-product-2_8_2-column"> <slot name="col-1"></slot> <slot name="col-2"></slot> <slot name="col-3"></slot> </div> {% endblock %}';Shopware.Component.register("sw-cms-block-grid-2-8-2",{template:z});const E='{% block sw_cms_block_product_2_8_2_column_preview %} <div class="sas-cms-grid-block-2-8-2-column-preview"> <div class="sas-cms-block-grid"> <div class="sas-cms-block-column" style="width: 16.6667%;"></div> <div class="sas-cms-block-column" style="width: 66.6667%;"></div> <div class="sas-cms-block-column" style="width: 16.6667%;"></div> </div> </div> {% endblock %}';Shopware.Component.register("sas-cms-grid-block-2-8-2-column-preview",{template:E});Shopware.Service("cmsService").registerCmsBlock({name:"grid-2-8-2",label:"sas-cms-grid.blocks.grid.2-8-2.label",category:"comaxx-grid",component:"sw-cms-block-grid-2-8-2",previewComponent:"sas-cms-grid-block-2-8-2-column-preview",defaultConfig:{marginBottom:"20px",marginTop:"20px",marginLeft:"20px",marginRight:"20px",sizingMode:"boxed"},slots:{"col-1":"text","col-2":"text","col-3":"text"}});const q='{% block sw_cms_grid_block_3_9 %} <div class="sw-cms-grid-block-3-9-column"> <slot name="col-1"></slot> <slot name="col-2"></slot> </div> {% endblock %}';Shopware.Component.register("sw-cms-block-grid-3-9",{template:q});const A='{% block sw_cms_block_grid_3_9_preview %} <div class="sas-cms-grid-block-3-9-column-preview"> <div class="sas-cms-block-grid"> <div class="sas-cms-block-column" style="width: 25%;"></div> <div class="sas-cms-block-column" style="width: 75%;"></div> </div> </div> {% endblock %}';Shopware.Component.register("sw-cms-preview-grid-3-9",{template:A});Shopware.Service("cmsService").registerCmsBlock({name:"grid-3-9",label:"sas-cms-grid.blocks.grid.3-9.label",category:"comaxx-grid",component:"sw-cms-block-grid-3-9",previewComponent:"sw-cms-preview-grid-3-9",defaultConfig:{marginBottom:"20px",marginTop:"20px",marginLeft:"20px",marginRight:"20px",sizingMode:"boxed"},slots:{"col-1":"text","col-2":"text"}});const D='{% block sw_cms_grid_block_9_3 %} <div class="sw-cms-grid-block-9-3-column"> <slot name="col-1"></slot> <slot name="col-2"></slot> </div> {% endblock %}';Shopware.Component.register("sw-cms-block-grid-9-3",{template:D});const O='{% block sw_cms_block_grid_9_3_preview %} <div class="sas-cms-grid-block-9-3-column-preview"> <div class="sas-cms-block-grid"> <div class="sas-cms-block-column" style="width: 75%;"></div> <div class="sas-cms-block-column" style="width: 25%;"></div> </div> </div> {% endblock %}';Shopware.Component.register("sw-cms-preview-grid-9-3",{template:O});Shopware.Service("cmsService").registerCmsBlock({name:"grid-9-3",label:"sas-cms-grid.blocks.grid.9-3.label",category:"comaxx-grid",component:"sw-cms-block-grid-9-3",previewComponent:"sw-cms-preview-grid-9-3",defaultConfig:{marginBottom:"20px",marginTop:"20px",marginLeft:"20px",marginRight:"20px",sizingMode:"boxed"},slots:{"col-1":"text","col-2":"text"}});const N='{% block sw_cms_grid_block_4_8 %} <div class="sw-cms-grid-block-4-8-column"> <slot name="col-1"></slot> <slot name="col-2"></slot> </div> {% endblock %}';Shopware.Component.register("sw-cms-block-grid-4-8",{template:N});const U='{% block sw_cms_block_grid_4_8_preview %} <div class="sas-cms-grid-block-4-8-column-preview"> <div class="sas-cms-block-grid"> <div class="sas-cms-block-column" style="width: 33.3333%;"></div> <div class="sas-cms-block-column" style="width: 66.666%;"></div> </div> </div> {% endblock %}';Shopware.Component.register("sw-cms-preview-grid-4-8",{template:U});Shopware.Service("cmsService").registerCmsBlock({name:"grid-4-8",label:"sas-cms-grid.blocks.grid.4-8.label",category:"comaxx-grid",component:"sw-cms-block-grid-4-8",previewComponent:"sw-cms-preview-grid-4-8",defaultConfig:{marginBottom:"20px",marginTop:"20px",marginLeft:"20px",marginRight:"20px",sizingMode:"boxed"},slots:{"col-1":"text","col-2":"text"}});const V='{% block sw_cms_grid_block_8_4 %} <div class="sw-cms-grid-block-8-4-column"> <slot name="col-1"></slot> <slot name="col-2"></slot> </div> {% endblock %}';Shopware.Component.register("sw-cms-block-grid-8-4",{template:V});const R='{% block sw_cms_block_grid_8_4_preview %} <div class="sas-cms-grid-block-8-4-column-preview"> <div class="sas-cms-block-grid"> <div class="sas-cms-block-column" style="width: 66.666%;"></div> <div class="sas-cms-block-column" style="width: 33.333%;"></div> </div> </div> {% endblock %}';Shopware.Component.register("sw-cms-preview-grid-8-4",{template:R});Shopware.Service("cmsService").registerCmsBlock({name:"grid-8-4",label:"sas-cms-grid.blocks.grid.8-4.label",category:"comaxx-grid",component:"sw-cms-block-grid-8-4",previewComponent:"sw-cms-preview-grid-8-4",defaultConfig:{marginBottom:"20px",marginTop:"20px",marginLeft:"20px",marginRight:"20px",sizingMode:"boxed"},slots:{"col-1":"text","col-2":"text"}});const j='{% block sw_cms_grid_block_5_7 %} <div class="sw-cms-grid-block-5-7-column"> <slot name="col-1"></slot> <slot name="col-2"></slot> </div> {% endblock %}';Shopware.Component.register("sw-cms-block-grid-5-7",{template:j});const Q='{% block sw_cms_block_grid_5_7_preview %} <div class="sas-cms-grid-block-5-7-column-preview"> <div class="sas-cms-block-grid"> <div class="sas-cms-block-column" style="width: 51.67%;"></div> <div class="sas-cms-block-column" style="width: 58.333%;"></div> </div> </div> {% endblock %}';Shopware.Component.register("sw-cms-preview-grid-5-7",{template:Q});Shopware.Service("cmsService").registerCmsBlock({name:"grid-5-7",label:"sas-cms-grid.blocks.grid.5-7.label",category:"comaxx-grid",component:"sw-cms-block-grid-5-7",previewComponent:"sw-cms-preview-grid-5-7",defaultConfig:{marginBottom:"20px",marginTop:"20px",marginLeft:"20px",marginRight:"20px",sizingMode:"boxed"},slots:{"col-1":"text","col-2":"text"}});const W='{% block sw_cms_grid_block_7_5 %} <div class="sw-cms-grid-block-7-5-column"> <slot name="col-1"></slot> <slot name="col-2"></slot> </div> {% endblock %}';Shopware.Component.register("sw-cms-block-grid-7-5",{template:W});const G='{% block sw_cms_block_grid_7_5_preview %} <div class="sas-cms-grid-block-7-5-column-preview"> <div class="sas-cms-block-grid"> <div class="sas-cms-block-column" style="width: 58.333%;"></div> <div class="sas-cms-block-column" style="width: 51.67%;"></div> </div> </div> {% endblock %}';Shopware.Component.register("sw-cms-preview-grid-7-5",{template:G});Shopware.Service("cmsService").registerCmsBlock({name:"grid-7-5",label:"sas-cms-grid.blocks.grid.7-5.label",category:"comaxx-grid",component:"sw-cms-block-grid-7-5",previewComponent:"sw-cms-preview-grid-7-5",defaultConfig:{marginBottom:"20px",marginTop:"20px",marginLeft:"20px",marginRight:"20px",sizingMode:"boxed"},slots:{"col-1":"text","col-2":"text"}});const Y='{% block sw_cms_block_cta %} <div class="sw-cms-block-cta"> <slot name="content">{% block sw_cms_block_slot_content%}{% endblock %}</slot> </div> {% endblock %}';Shopware.Component.register("sw-cms-block-cta",{template:Y});const J=`{% block sw_cms_element_cta_preview %} <div class="sw-cms-preview-cta"> <div class="sw-cms-preview-cta-content"> <h1>Preview</h1> <p>Lorem ipsum</p> <div class="sw-cms-preview-cta-button">Button text</div> </div> <div class="sw-cms-preview-cta-image"> <img :src="assetFilter('/administration/administration/static/img/cms/preview_mountain_small.jpg')" alt="" > </div> </div> {% endblock %}`;Shopware.Component.register("sw-cms-preview-cta",{template:J,computed:{assetFilter(){return Shopware.Filter.getByName("asset")}}});Shopware.Service("cmsService").registerCmsBlock({name:"cta",category:"comaxx-custom",label:"Cta with background",component:"sw-cms-block-cta",previewComponent:"sw-cms-preview-cta",slots:{content:"cta"}});const X='{% block sw_cms_block_faq %} <div class="sw-cms-block-faq"> <slot name="content"> {% block sw_cms_block_slot_content %} {% endblock %} </slot> </div> {% endblock %}';Shopware.Component.register("sw-cms-block-faq",{template:X});const Z='{% block sw_cms_element_faq_preview %} <div class="sw-cms-preview-faq"> <div class="sw-cms-preview-faq-content"> <h5> FAQ </h5> <div class="sw-cms-preview-faq-question"> FAQ question <span><sw-icon name="regular-chevron-down" size="10" /></span> </div> <div class="sw-cms-preview-faq-question"> FAQ question <span><sw-icon name="regular-chevron-down" size="10" /></span> </div> </div> </div> {% endblock %}';Shopware.Component.register("sw-cms-preview-faq",{template:Z,computed:{assetFilter(){return Shopware.Filter.getByName("asset")}}});Shopware.Service("cmsService").registerCmsBlock({name:"faq",category:"comaxx-custom",label:"FAQ",component:"sw-cms-block-faq",previewComponent:"sw-cms-preview-faq",slots:{content:"faq"}});const K='{% block sw_cms_block_tabs %} <div class="sw-cms-block-tabs"> <slot name="content"> {% block sw_cms_block_slot_content %} {% endblock %} </slot> </div> {% endblock %}';Shopware.Component.register("sw-cms-block-tabs",{template:K});const ee='{% block sw_cms_element_faq_preview %} <div class="sw-cms-preview-tabs"> <div class="sw-cms-preview-tabs-content"> <h5> Tabs </h5> <div class="sw-cms-preview-tabs-inner"> <div class="sw-cms-preview-tabs-question"> Tab </div> <div class="sw-cms-preview-tabs-question"> Tab </div> <div class="sw-cms-preview-tabs-question"> Tab </div> </div> </div> </div> {% endblock %}';Shopware.Component.register("sw-cms-preview-tabs",{template:ee,computed:{assetFilter(){return Shopware.Filter.getByName("asset")}}});Shopware.Service("cmsService").registerCmsBlock({name:"tabs",category:"comaxx-custom",label:"Tabs",component:"sw-cms-block-tabs",previewComponent:"sw-cms-preview-tabs",slots:{content:"tabs"}});const te='{% block sw_cms_block_category_slider %} <div class="sw-cms-block-category-slider"> <slot name="content">{% block sw_cms_block_slot_content%}{% endblock %}</slot> </div> {% endblock %}';Shopware.Component.register("sw-cms-block-category-slider",{template:te});const ie=`{% block sw_cms_block_featured_links_preview %} <div class="sw-cms-preview-block-category-slider"> <div class="sw-cms-preview-category-slider-title"> <h2>Category slider<br>title</h2> </div> <div class="sw-cms-preview-block-category-slider-content"> <sw-icon name="regular-chevron-left" size="10" /> <div class="sw-cms-preview-block-category-slider-items"> <div class="sw-cms-preview-block-category-slider-items-item"> <img :src="assetFilter('/administration/administration/static/img/cms/preview_mountain_small.jpg')" alt="" > <span class="sw-cms-preview-block-category-slider-items-item-title">Categorie</span> </div> <div class="sw-cms-preview-block-category-slider-items-item"> <img :src="assetFilter('/administration/administration/static/img/cms/preview_mountain_small.jpg')" alt="" > <span class="sw-cms-preview-block-category-slider-items-item-title">Categorie</span> </div> <div class="sw-cms-preview-block-category-slider-items-item"> <img :src="assetFilter('/administration/administration/static/img/cms/preview_mountain_small.jpg')" alt="" > <span class="sw-cms-preview-block-category-slider-items-item-title">Categorie</span> </div> </div> <sw-icon name="regular-chevron-right" size="10" /> </div> </div> {% endblock %}`;Shopware.Component.register("sw-cms-preview-category-slider",{template:ie,computed:{assetFilter(){return Shopware.Filter.getByName("asset")}}});Shopware.Service("cmsService").registerCmsBlock({name:"category-slider",category:"comaxx-custom",label:"Category slider",component:"sw-cms-block-category-slider",previewComponent:"sw-cms-preview-category-slider",defaultConfig:{marginBottom:"20px",marginTop:"20px",marginLeft:"20px",marginRight:"20px",sizingMode:"boxed"},slots:{content:"category-slider"}});const le='{% block sw_cms_block_featured_links %} <slot name="banner-featured-links"></slot> <div class="sw-cms-block-featured-links-container-items"> <div class="sw-cms-block-featured-links-container-item"> <slot name="mini-cta-1"></slot> </div> <div class="sw-cms-block-featured-links-container-item"> <slot name="mini-cta-2"></slot> </div> <div class="sw-cms-block-featured-links-container-item"> <slot name="mini-cta-3"></slot> </div> <div class="sw-cms-block-featured-links-container-item"> <slot name="mini-cta-4"></slot> </div> </div> {% endblock %}';Shopware.Component.register("sw-cms-block-featured-links",{template:le});const ae=`{% block sw_cms_block_featured_links_preview %} <div class="sw-cms-preview-featured-links"> <div class="sw-cms-preview-featured-links-title"> <h2>Featured link<br>title</h2> </div> <div class="sw-cms-preview-featured-links-items"> <div class="sw-cms-preview-featured-links-items-item"> <img :src="assetFilter('/administration/administration/static/img/cms/preview_mountain_small.jpg')" alt="" > <span class="sw-cms-preview-featured-links-items-item-title">Item link</span> <span class="sw-cms-preview-featured-links-items-item-button">→</span> </div> <div class="sw-cms-preview-featured-links-items-item"> <img :src="assetFilter('/administration/administration/static/img/cms/preview_mountain_small.jpg')" alt="" > <span class="sw-cms-preview-featured-links-items-item-title">Item link</span> <span class="sw-cms-preview-featured-links-items-item-button">→</span> </div> <div class="sw-cms-preview-featured-links-items-item"> <img :src="assetFilter('/administration/administration/static/img/cms/preview_mountain_small.jpg')" alt="" > <span class="sw-cms-preview-featured-links-items-item-title">Item link</span> <span class="sw-cms-preview-featured-links-items-item-button">→</span> </div> <div class="sw-cms-preview-featured-links-items-item"> <img :src="assetFilter('/administration/administration/static/img/cms/preview_mountain_small.jpg')" alt="" > <span class="sw-cms-preview-featured-links-items-item-title">Item link</span> <span class="sw-cms-preview-featured-links-items-item-button">→</span> </div> </div> </div> {% endblock %}`;Shopware.Component.register("sw-cms-preview-featured-links",{template:ae,computed:{assetFilter(){return Shopware.Filter.getByName("asset")}}});Shopware.Service("cmsService").registerCmsBlock({name:"featured-links",category:"comaxx-custom",label:"Featured Links",component:"sw-cms-block-featured-links",previewComponent:"sw-cms-preview-featured-links",defaultConfig:{marginBottom:"20px",marginTop:"20px",marginLeft:"20px",marginRight:"20px",sizingMode:"boxed"},slots:{"banner-featured-links":"banner-featured-links","mini-cta-1":"mini","mini-cta-2":"mini","mini-cta-3":"mini","mini-cta-4":"mini"}});const oe='{% block sw_cms_block_category_highlight %} <div class="sw-cms-block-category-highlight"> <slot name="content">{% block sw_cms_block_slot_content%}{% endblock %}</slot> </div> {% endblock %}';Shopware.Component.register("sw-cms-block-category-highlight",{template:oe});const ne='{% block sw_cms_block_category_highlight_preview %} <div class="sw-cms-preview-category-highlight"> <div class="sw-cms-preview-category-highlight-placeholder-listing"> <h2>Category Highlight</h2> <div class="sw-cms-preview-category-highlight__placeholder"></div> <div class="sw-cms-preview-category-highlight__placeholder"></div> <div class="sw-cms-preview-category-highlight__placeholder--subcategory"></div> <div class="sw-cms-preview-category-highlight__placeholder--subcategory"></div> <div class="sw-cms-preview-category-highlight__placeholder--subcategory"></div> </div> </div> {% endblock %}';Shopware.Component.register("sw-cms-preview-category-highlight",{template:ne,computed:{assetFilter(){return Shopware.Filter.getByName("asset")}}});Shopware.Service("cmsService").registerCmsBlock({name:"category-highlight",category:"commerce",label:"Category tree with highlight",component:"sw-cms-block-category-highlight",previewComponent:"sw-cms-preview-category-highlight",slots:{content:"category-highlight"}});const se='{% block sw_cms_block_banner_link %} <div class="sw-cms-block-banner-link"> <slot name="content">{% block sw_cms_block_slot_content%}{% endblock %}</slot> </div> {% endblock %}';Shopware.Component.register("sw-cms-block-banner-link",{template:se});const ce=`{% block sw_cms_element_banner_link_preview %} <div class="sw-cms-preview-banner-link"> <div class="sw-cms-preview-banner-link-content"> <h1>Preview</h1> <p>Lorem ipsum</p> <div class="sw-cms-preview-banner-link-label">label</div> <div class="sw-cms-preview-banner-link-button">Button text</div> </div> <div class="sw-cms-preview-banner-link-image"> <img :src="assetFilter('/administration/administration/static/img/cms/preview_mountain_small.jpg')" alt="" > </div> </div> {% endblock %}`;Shopware.Component.register("sw-cms-preview-banner-link",{template:ce,computed:{assetFilter(){return Shopware.Filter.getByName("asset")}}});Shopware.Service("cmsService").registerCmsBlock({name:"banner-link",category:"comaxx-custom",label:"sw-cms.elements.banner-link.label",component:"sw-cms-block-banner-link",previewComponent:"sw-cms-preview-banner-link",slots:{content:"banner-link"}});const re='{% block sw_cms_element_cta %} <div class="sw-cms-el-cta" :style="ctaBackgroundColor"> <div class="sw-cms-el-cta-content"> <component :is="ctaTitleTag" :style="ctaTitleColor" v-text="element.config.ctaTitle.value" /> <p v-html="element.config.ctaDescription.value"></p> <a v-if="!element.config.ctaClickable.value" :class="buttonTypeClass"> {{ element.config.ctaButtonText.value }} </a> </div> <div class="sw-cms-el-cta-image"> <img :src="mediaUrl" alt="" > </div> </div> {% endblock %}';Shopware.Component.register("sw-cms-el-cta",{template:re,mixins:["cms-element"],computed:{ctaTitle(){return`${this.element.config.ctaTitle.value}`},ctaTitleTag(){var e;return((e=this.element.config.ctaTitleType)==null?void 0:e.value)||"h2"},ctaTitleColor(){return{color:this.element.config.ctaTitleColor.value}},ctaDescription(){return`${this.element.config.ctaDescription.value}`},ctaBackgroundColor(){return{"background-color":this.element.config.ctaBackgroundColor.value}},ctaButtonText(){return`${this.element.config.ctaButtonText.value}`},ctaButtonUrl(){return`${this.element.config.ctaButtonUrl.value}`},ctaClickable(){return this.element.config.ctaClickable.value},buttonTypeClass(){return`btn btn-${this.element.config.buttonType.value}`},ctaIconBorderColor(){return{"border-color":this.element.config.ctaIconBorderColor.value}},displayModeClass(){return this.element.config.displayMode.value==="standard"?null:`is--${this.element.config.displayMode.value}`},styles(){return{"min-height":this.element.config.displayMode.value==="cover"&&this.element.config.minHeight.value&&this.element.config.minHeight.value!==0?this.element.config.minHeight.value:"340px"}},imgStyles(){return{"align-self":this.element.config.verticalAlign.value||null}},horizontalAlign(){var e;return{"justify-content":((e=this.element.config.horizontalAlign)==null?void 0:e.value)||null}},mediaUrl(){const e=this.assetFilter("/administration/administration/static/img/cms/preview_mountain_small.jpg"),t=this.element.data.media;if(this.element.config.media.source==="mapped"){const l=this.getDemoValue(this.element.config.media.value);if(l&&l.url)return l.url}return t&&t.id?this.element.data.media.url:t&&t.url?this.assetFilter(t.url):e},assetFilter(){return Shopware.Filter.getByName("asset")},mediaConfigValue(){var e,t,i;return(i=(t=(e=this.element)==null?void 0:e.config)==null?void 0:t.sliderItems)==null?void 0:i.value}},watch:{cmsPageState:{deep:!0,handler(){this.$forceUpdate()}},mediaConfigValue(e){var l,a,o,s,n,c;const t=(o=(a=(l=this.element)==null?void 0:l.data)==null?void 0:a.media)==null?void 0:o.id;((c=(n=(s=this.element)==null?void 0:s.config)==null?void 0:n.media)==null?void 0:c.source)==="static"&&t&&e!==t&&(this.element.config.media.value=t)}},created(){this.createdComponent()},methods:{createdComponent(){this.initElementConfig("cta"),this.initElementData("cta")}}});const me=`{% block sw_cms_element_cta_config %} <mt-tabs :items="[ { label: 'General settings', name: 'general' }, { label: 'Button settings', name: 'button' } ]" @new-item-active="setActiveItem" /> <sw-container v-if="activeTab === 'general'" class="sw-cms-el-config-cta__tab-content" style="margin-top: 2rem;"> <mt-text-field v-model="ctaTitle" label="Call to action title" placeholder="Enter a title" @update:model-value="changeTitle" /> <mt-select v-model="element.config.ctaTitleType.value" class="sw-cms-el-config-cta-title-type" label="Title HTML tag" @update:model-value="onChangeTitleType" :options="titleOptions" /> <mt-colorpicker v-model="ctaTitleColor" color-output="hex" label="Title color" :alpha="true" :z-index="1000" @update:model-value="onChangeTitleColor" /> <div class="mt-field"> <sw-text-editor v-model="ctaDescription" label="Call to action description" placeholder="Enter a description" @update:model-value="changeDescription" /> </div> <mt-colorpicker v-model="ctaBackgroundColor" color-output="hex" label="Call to action background color" :alpha="true" zIndex="1000" @update:model-value="changeBackgroundColor" /> <div class="sw-cms-el-config-image"> {% block sw_cms_element_image_config_media_upload %} <sw-cms-mapping-field v-model:config="element.config.media" :label="$tc('sw-cms.elements.image.label')" value-types="entity" entity="media" > <sw-media-upload-v2 variant="regular" :upload-tag="uploadTag" :source="previewSource" :allow-multi-select="false" :default-folder="cmsPageState.pageEntityName" :caption="$tc('sw-cms.elements.general.config.caption.mediaUpload')" @media-upload-sidebar-open="onOpenMediaModal" @media-upload-remove-image="onImageRemove" /> <template #preview="{ demoValue }"> <div class="sw-cms-el-config-image__mapping-preview"> <img v-if="demoValue.url" :src="demoValue.url" alt="" > <mt-banner v-else class="sw-cms-el-config-image__preview-info" variant="info" > {{ $tc('sw-cms.detail.label.mappingEmptyPreview') }} </mt-banner> </div> </template> </sw-cms-mapping-field> <sw-upload-listener :upload-tag="uploadTag" auto-upload @media-upload-finish="onImageUpload" /> {% endblock %} {% block sw_cms_element_image_config_media_modal %} <sw-media-modal-v2 v-if="mediaModalIsOpen" variant="full" :caption="$tc('sw-cms.elements.general.config.caption.mediaUpload')" :entity-context="cmsPageState.entityName" :allow-multi-select="false" :initial-folder-id="cmsPageState.defaultMediaFolderId" @media-upload-remove-image="onImageRemove" @modal-close="onCloseModal" @media-modal-selection-change="onSelectionChanges" /> {% endblock %} </div> </sw-container> <sw-container v-if="activeTab === 'button'" class="sw-cms-el-config-cta__tab-button-settings" style="margin-top: 2rem;"> <div class="mt-field"> <mt-checkbox :model-value="ctaClickable" label="Element is clickable" help-text="This removes the button element" @change="onCtaClickableChange" /> </div> <mt-text-field v-if="isCtaNotClickable" v-model="ctaButtonText" label="Call to action button text" placeholder="Enter cta button text" @update:model-value="changeButtonText" /> <mt-text-field v-model="ctaButtonUrl" label="Call to action button url" placeholder="Enter cta button url" @update:model-value="changeButtonUrl" /> <mt-select v-if="isCtaNotClickable" v-model="element.config.buttonType.value" class="sw-cms-el-config-button-type" label="Button type" @update:model-value="onChangeButtonType" :options="buttonOptions" /> <div class="mt-field"> <mt-checkbox :model-value="ctaIconShow" label="Show CTA Icon" @change="onctaIconShow" /> </div> <mt-colorpicker v-if="!ctaNoIcon" v-model="ctaIconBorderColor" color-output="hex" label="Icon border color" :alpha="true" zIndex="1000" @update:model-value="onChangeIconBorderColor" /> <mt-colorpicker v-if="!ctaNoIcon" v-model="ctaIconBackgroundColor" color-output="hex" label="Icon background color" :alpha="true" zIndex="1000" @update:model-value="onChangeIconBackgroundColor" /> <mt-colorpicker v-if="!ctaNoIcon" v-model="ctaIconColor" color-output="hex" label="Icon color" :alpha="true" zIndex="1000" @update:model-value="onChangeIconColor" /> </sw-container> {% endblock %}`;Shopware.Component.register("sw-cms-el-config-cta",{template:me,mixins:["cms-element"],inject:["repositoryFactory"],data(){return{mediaModalIsOpen:!1,activeTab:"general",titleOptions:[{value:"h1",label:"H1"},{value:"h2",label:"H2"},{value:"h3",label:"H3"},{value:"h4",label:"H4"},{value:"h5",label:"H5"},{value:"h6",label:"H6"},{value:"span",label:"Span"}],buttonOptions:[{value:"primary",label:"Primary"},{value:"secondary",label:"Secondary"},{value:"tertiary",label:"Tertiary"}]}},computed:{isCtaNotClickable(){var e;return!((e=this.element.config.ctaClickable)!=null&&e.value)},ctaNoIcon(){var e;return!((e=this.element.config.ctaIconShow)!=null&&e.value)},...["ctaTitle","ctaTitleType","ctaTitleColor","ctaDescription","ctaBackgroundColor","ctaClickable","ctaIconShow","ctaButtonText","ctaButtonUrl","ctaIconBorderColor","ctaIconColor","ctaIconBackgroundColor","buttonType"].reduce((e,t)=>(e[t]={get(){var i;return(i=this.element.config[t])==null?void 0:i.value},set(i){this.element.config[t]&&(this.element.config[t].value=i,this.$emit("element-update",this.element))}},e),{}),mediaRepository(){return this.repositoryFactory.create("media")},uploadTag(){return`cms-element-media-config-${this.element.id}`},previewSource(){var e,t,i,l;return(i=(t=(e=this.element)==null?void 0:e.data)==null?void 0:t.media)!=null&&i.id?this.element.data.media:(l=this.element.config.media)==null?void 0:l.value}},created(){this.createdComponent(),["ctaClickable","ctaIconShow"].forEach(e=>{this.element.config[e]||this.$set(this.element.config,e,{source:"static",value:!1})})},methods:{setActiveItem(e){this.activeTab=e},createdComponent(){this.initElementConfig("cta")},onChange(e,t){this.element.config[e]&&(this.element.config[e].value=t,this.$emit("element-update",this.element))},onOpenMediaModal(){this.mediaModalIsOpen=!0},onCloseModal(){this.mediaModalIsOpen=!1},onSelectionChanges([e]){this.element.config.media.value=e,this.$emit("element-update",this.element)},onImageUpload({targetId:e}){this.mediaRepository.get(e,Shopware.Context.api).then(t=>{this.element.config.media.value=t,this.$emit("element-update",this.element)})},onImageRemove(){this.element.config.media.value=null,this.$emit("element-update",this.element)},onCtaClickableChange(e){this.onChange("ctaClickable",e)},onctaIconShow(e){this.onChange("ctaIconShow",e)},onChangeTitleColor(e){this.onChange("ctaTitleColor",e)},onChangeIconBorderColor(e){this.onChange("ctaIconBorderColor",e)},onChangeIconColor(e){this.onChange("ctaIconColor",e)},onChangeIconBackgroundColor(e){this.onChange("ctaIconBackgroundColor",e)},onChangeButtonType(e){this.onChange("buttonType",e)}}});const ge=`{% block sw_cms_element_cta_preview %} <div class="sw-cms-preview-cta"> <div class="sw-cms-preview-cta-content"> <h5>Lorem ipsum</h5> <div class="sw-cms-preview-cta-button">Button</div> </div> <div class="sw-cms-preview-cta-image"> <img :src="assetFilter('/administration/administration/static/img/cms/preview_mountain_small.jpg')" alt="" > </div> </div> {% endblock %}`;Shopware.Component.register("sw-cms-el-preview-cta",{template:ge,computed:{assetFilter(){return Shopware.Filter.getByName("asset")}}});Shopware.Service("cmsService").registerCmsElement({name:"cta",label:"sw-cms.elements.cta.label",component:"sw-cms-el-cta",configComponent:"sw-cms-el-config-cta",previewComponent:"sw-cms-el-preview-cta",defaultConfig:{media:{source:"static",value:null,entity:{name:"media"}},ctaTitle:{source:"static",value:"CTA Title"},ctaTitleType:{source:"static",value:"h2"},ctaTitleColor:{source:"static",value:"#000"},ctaDescription:{source:"static",value:"Lorem ipsum dolor sit amet, consectetur adipiscing elit."},ctaBackgroundColor:{source:"static",value:"#ececec"},ctaButtonText:{source:"static",value:"Button text"},ctaButtonUrl:{source:"static",value:"Button url"},buttonType:{source:"static",value:"primary"},ctaIconShow:{source:"static",value:null},ctaIconBorderColor:{source:"static",value:"#000"},ctaIconBackgroundColor:{source:"static",value:"#000"},ctaIconColor:{source:"static",value:"#FFF"},ctaClickable:{source:"static",value:!1}}});const de='{% block faq %} <div class="sw-cms-el-faq"> <h2 v-if="categoryTitle"> {{ categoryTitle }} </h2> <ul> <li v-for="(question, index) in faqQuestions" :key="index"> {{ question }} <span><sw-icon name="regular-chevron-down" size="10" /></span> </li> </ul> <p v-if="faqQuestions.length === 0"> Geen vragen toegevoegd. </p> </div> {% endblock %}';Shopware.Component.register("sw-cms-el-faq",{template:de,mixins:["cms-element"],computed:{categoryTitle(){var e;return((e=this.element.config.categoryTitle)==null?void 0:e.value)||""},faqQuestions(){var t;return(((t=this.element.config.faqItems)==null?void 0:t.value)||[]).slice(0,4).map(i=>i.question||"")}},created(){this.createdComponent()},methods:{createdComponent(){this.initElementConfig("faq"),this.initElementData("faq")}}});const ue='{% block sw_cms_el_config_faq %} <div class="sw-cms-el-config-faq"> <sw-card title="FAQ categorie" class="mb-6"> <mt-text-field v-model="element.config.categoryTitle.value" label="Categorie titel" class="mb-6" /> <mt-select v-model="titleType" class="sw-cms-el-config-faq-title-type" label="Title HTML tag" :options="titleOptions" /> <template v-for="(faq, index) in element.config.faqItems.value" :key="faq.id"> <sw-card :title="`Vraag ${index + 1}`" class="mb-4" position-identifier="faq-item" > <sw-container columns="1fr auto" gap="10px" class="mb-4"> <mt-text-field :model-value="faq.question" :label="`Vraag ${index + 1}`" @update:model-value="val => updateQuestion(index, val)" /> <mt-button size="small" variant="danger" @click="onDeleteFaq(index)" v-if="element.config.faqItems.value.length > 1" > Verwijderen </mt-button> </sw-container> <mt-select :model-value="faq.questionTitleType" :label="`Vraag ${index + 1} titel HTML tag`" :options="titleOptions" @update:model-value="val => updateQuestionTitleType(index, val)" class="mb-4" /> <div class="mt-field"> <sw-text-editor :value="faq.answer" :label="`Antwoord ${index + 1}`" :allow-fullscreen="true" :height="150" @update:value="val => updateAnswer(index, val)" /> </div> </sw-card> </template> <mt-button size="small" variant="primary" @click="addFaq" > Vraag toevoegen </mt-button> </sw-card> </div> {% endblock %}';Shopware.Component.register("sw-cms-el-config-faq",{template:ue,mixins:["cms-element"],data(){return{titleOptions:[{value:"h1",label:"H1"},{value:"h2",label:"H2"},{value:"h3",label:"H3"},{value:"h4",label:"H4"},{value:"h5",label:"H5"},{value:"h6",label:"H6"},{value:"span",label:"Span"}]}},computed:{titleType:{get(){var e;return((e=this.element.config.titleType)==null?void 0:e.value)||"h2"},set(e){this.element.config.titleType.value=e,this.$emit("element-update",this.element)}}},methods:{addFaq(){this.element.config.faqItems.value||(this.element.config.faqItems.value=[]),this.element.config.faqItems.value.push({id:Date.now()+Math.random(),question:"",answer:"",questionTitleType:"h3"}),this.$emit("element-update",this.element)},onDeleteFaq(e){this.element.config.faqItems.value&&(this.element.config.faqItems.value.splice(e,1),this.$emit("element-update",this.element))},updateQuestion(e,t){this.element.config.faqItems.value&&(this.element.config.faqItems.value[e].question=t,this.$emit("element-update",this.element))},updateQuestionTitleType(e,t){this.element.config.faqItems.value&&(this.element.config.faqItems.value[e].questionTitleType=t,this.$emit("element-update",this.element))},updateAnswer(e,t){this.element.config.faqItems.value&&(this.element.config.faqItems.value[e].answer=t,this.$emit("element-update",this.element))}}});const he='{% block faq %} <div class="sw-cms-preview-faq"> <div class="sw-cms-preview-faq-content"> <h5> FAQ </h5> <div class="sw-cms-preview-faq-question"> FAQ question <span><sw-icon name="regular-chevron-down" size="10" /></span> </div> <div class="sw-cms-preview-faq-question"> FAQ question <span><sw-icon name="regular-chevron-down" size="10" /></span> </div> </div> </div> {% endblock %}';Shopware.Component.register("sw-cms-el-preview-faq",{template:he,computed:{assetFilter(){return Shopware.Filter.getByName("asset")}}});Shopware.Service("cmsService").registerCmsElement({name:"faq",label:"sw-cms.elements.faq.label",component:"sw-cms-el-faq",configComponent:"sw-cms-el-config-faq",previewComponent:"sw-cms-el-preview-faq",defaultConfig:{categoryTitle:{source:"static",value:"FAQ category titel"},titleType:{source:"static",value:"h2"},faqItems:{source:"static",value:[{id:Date.now()+Math.random(),question:"",answer:"",questionTitleType:"h3"}]}}});const pe='{% block faq_nested %} <div class="sw-cms-el-cta"> FAQ NESTED </div> {% endblock %}';Shopware.Component.register("sw-cms-el-faq-nested",{template:pe,mixins:["cms-element"],computed:{},watch:{},created(){this.createdComponent()},methods:{createdComponent(){this.initElementConfig("faq-nested"),this.initElementData("faq-nested")}}});const ve='{% block sw_cms_el_config_faq_nested %} <div> <template v-for="(category, catIndex) in element.config.categories.value"> <sw-card :key="catIndex" :title="`Categorie ${catIndex + 1}`" class="mb-4" > <sw-container columns="1fr auto" gap="10px" class="mb-4"> <mt-text-field v-model="category.name" label="Categorienaam" /> <mt-button size="small" variant="danger" @click="removeCategory(catIndex)" v-if="element.config.categories.value.length > 1" > Verwijder categorie </mt-button> </sw-container> <template v-for="(question, qIndex) in category.questions"> <sw-container columns="1fr auto" gap="10px" class="mb-2"> <mt-text-field v-model="question.question" :label="`Vraag ${qIndex + 1}`" /> <mt-button size="small" variant="danger" @click="removeQuestion(catIndex, qIndex)" v-if="category.questions.length > 1" > Verwijder vraag </mt-button> </sw-container> <div class="mt-field"> <sw-text-editor v-model="question.answer" :label="`Antwoord ${qIndex + 1}`" :allow-fullscreen="true" :height="150" class="mb-4" /> </div> </template> <mt-button size="small" variant="primary" @click="addQuestion(catIndex)" > Vraag toevoegen </mt-button> </sw-card> </template> <mt-button size="small" variant="primary" @click="addCategory" > Categorie toevoegen </mt-button> </div> {% endblock %}';Shopware.Component.register("sw-cms-el-config-faq-nested",{template:ve,mixins:["cms-element"],data(){return{}},methods:{addCategory(){this.element.config.categories.value.push({name:"",questions:[{question:"",answer:""}]})},removeCategory(e){this.element.config.categories.value.splice(e,1)},addQuestion(e){this.element.config.categories.value[e].questions.push({question:"",answer:""})},removeQuestion(e,t){this.element.config.categories.value[e].questions.splice(t,1)}}});const fe=`{% block faq_nested %} <div class="sw-cms-preview-cta"> <div class="sw-cms-preview-cta-content"> <h5> Lorem ipsum </h5> <div class="sw-cms-preview-cta-button"> Button </div> </div> <div class="sw-cms-preview-cta-image"> <img :src="assetFilter('/administration/administration/static/img/cms/preview_mountain_small.jpg')" alt="" /> </div> </div> {% endblock %}`;Shopware.Component.register("sw-cms-el-preview-faq-nested",{template:fe,computed:{assetFilter(){return Shopware.Filter.getByName("asset")}}});Shopware.Service("cmsService").registerCmsElement({name:"faq-nested",label:"sw-cms.elements.faq-nested.label",component:"sw-cms-el-faq-nested",configComponent:"sw-cms-el-config-faq-nested",previewComponent:"sw-cms-el-preview-faq-nested",defaultConfig:{categories:{source:"static",value:[{name:"",questions:[{question:"",answer:""}]}]}}});const be='{% block tabs %} <div class="sw-cms-el-tabs"> <h2 v-if="tabTitle"> {{ tabTitle }} </h2> <h2 v-else> Tab titel placeholder </h2> <ul v-if="tabQuestions && tabQuestions.length"> <li v-for="(question, index) in tabQuestions" :key="index">{{ question }}</li> </ul> <ul v-else> <li>Tab placeholder</li> <li>Tab placeholder</li> </ul> <p style="margin-top: 16px;" v-if="firstAnswer" v-html="firstAnswer"></p> <p v-else style="margin-top: 16px;"> Tab content placeholder </p> </div> {% endblock %}';Shopware.Component.register("sw-cms-el-tabs",{template:be,mixins:["cms-element"],computed:{tabTitle(){var e;return((e=this.element.config.tabTitle)==null?void 0:e.value)||""},tabQuestions(){var t;return(((t=this.element.config.tabItems)==null?void 0:t.value)||[]).slice(0,4).map(i=>i.question||"")},firstAnswer(){var t;const e=((t=this.element.config.tabItems)==null?void 0:t.value)||[];return e.length>0&&e[0].answer||""}},created(){this.createdComponent()},methods:{createdComponent(){this.initElementConfig("tabs"),this.initElementData("tabs")}}});const we='{% block sw_cms_el_config_tabs %} <div class="sw-cms-el-config-tabs"> <sw-card title="Tab categorie" class="mb-6"> <mt-text-field v-model="element.config.tabTitle.value" label="Tabs titel" class="mb-6" /> <mt-select v-model="titleType" class="sw-cms-el-config-tab-title-type" label="Title HTML tag" :options="titleOptions" /> <template v-for="(tab, index) in element.config.tabItems.value" :key="tab.id"> <sw-card :title="`Tab ${index + 1}`" class="mb-4" position-identifier="tab-item" > <sw-container columns="1fr auto" gap="10px" class="mb-4"> <mt-text-field :model-value="tab.question" :label="`Tab ${index + 1}`" @update:model-value="val => updateQuestion(index, val)" /> <mt-button size="small" variant="danger" @click="onDeleteTab(index)" v-if="element.config.tabItems.value.length > 1" > Verwijderen </mt-button> </sw-container> <div class="mt-field"> <sw-text-editor v-model:value="tab.answer" :label="`Content ${index + 1}`" :allow-fullscreen="true" :height="150" /> </div> </sw-card> </template> <mt-button size="small" variant="primary" @click="addTab" > Tab toevoegen </mt-button> </sw-card> </div> {% endblock %}';Shopware.Component.register("sw-cms-el-config-tabs",{template:we,mixins:["cms-element"],data(){return{titleOptions:[{value:"h1",label:"H1"},{value:"h2",label:"H2"},{value:"h3",label:"H3"},{value:"h4",label:"H4"},{value:"h5",label:"H5"},{value:"h6",label:"H6"},{value:"span",label:"Span"}]}},computed:{titleType:{get(){var e;return((e=this.element.config.titleType)==null?void 0:e.value)||"h2"},set(e){this.element.config.titleType.value=e,this.$emit("element-update",this.element)}}},methods:{addTab(){this.element.config.tabItems.value||(this.element.config.tabItems.value=[]),this.element.config.tabItems.value.push({id:Date.now()+Math.random(),question:"",answer:""}),this.$emit("element-update",this.element)},onDeleteTab(e){this.element.config.tabItems.value&&(this.element.config.tabItems.value.splice(e,1),this.$emit("element-update",this.element))},updateQuestion(e,t){this.element.config.tabItems.value&&(this.element.config.tabItems.value[e].question=t,this.$emit("element-update",this.element))},updateAnswer(e,t){this.element.config.tabItems.value&&(this.element.config.tabItems.value[e].answer=t,this.$emit("element-update",this.element))}},watch:{"element.config.tabItems.value":{handler(){this.$emit("element-update",this.element)},deep:!0}}});const ye='{% block tabs %} <div class="sw-cms-preview-tabs"> <div class="sw-cms-preview-tabs-content"> <h5> Tabs </h5> <div class="sw-cms-preview-tabs-inner"> <div class="sw-cms-preview-tabs-question"> Tab </div> <div class="sw-cms-preview-tabs-question"> Tab </div> <div class="sw-cms-preview-tabs-question"> Tab </div> </div> </div> </div> {% endblock %}';Shopware.Component.register("sw-cms-el-preview-tabs",{template:ye,computed:{assetFilter(){return Shopware.Filter.getByName("asset")}}});Shopware.Service("cmsService").registerCmsElement({name:"tabs",label:"sw-cms.elements.tabs.label",component:"sw-cms-el-tabs",configComponent:"sw-cms-el-config-tabs",previewComponent:"sw-cms-el-preview-tabs",defaultConfig:{tabTitle:{source:"static",value:""},titleType:{source:"static",value:"h2"},tabItems:{source:"static",value:[{id:Date.now()+Math.random(),question:"",answer:""}]}}});const Ce='{% block sw_cms_element_mini %} <div class="sw-cms-el-mini" :style="miniBackgroundColor"> <div class="sw-cms-el-mini-content"> <h3 :style="miniTextColor">{{ element.config.miniTitle.value }}</h3> <p :style="miniTextColor" v-html="element.config.miniDescription.value"></p> <a :style="miniButtonStyles" class="btn btn-primary"> {{ element.config.miniButtonText.value }} </a> </div> <div class="sw-cms-el-mini-image" :class="displayModeClass"> <img :src="mediaUrl" alt="" > </div> </div> {% endblock %}';Shopware.Component.register("sw-cms-el-mini",{template:Ce,mixins:["cms-element"],computed:{miniTitle(){return`${this.element.config.miniTitle.value}`},miniTitleSize(){return`${this.element.config.miniTitleSize.value}`},miniDescription(){return`${this.element.config.miniDescription.value}`},miniDescriptionSize(){return`${this.element.config.miniDescriptionSize.value}`},miniTextColor(){return{color:this.element.config.miniTextColor.value}},miniBackgroundColor(){return{"background-color":this.element.config.miniBackgroundColor.value}},miniButtonText(){return`${this.element.config.miniButtonText.value}`},miniButtonUrl(){return`${this.element.config.miniButtonUrl.value}`},miniButtonColor(){return{color:this.element.config.miniButtonColor.value}},miniButtonBackgroundColor(){return{"background-color":this.element.config.miniButtonBackgroundColor.value}},miniButtonStyles(){return{...this.miniButtonColor,...this.miniButtonBackgroundColor}},displayModeClass(){return this.element.config.displayMode.value==="standard"?null:`is--${this.element.config.displayMode.value}`},styles(){return{"min-height":this.element.config.displayMode.value==="cover"&&this.element.config.minHeight.value&&this.element.config.minHeight.value!==0?this.element.config.minHeight.value:"340px"}},imgStyles(){return{"align-self":this.element.config.verticalAlign.value||null}},horizontalAlign(){var e;return{"justify-content":((e=this.element.config.horizontalAlign)==null?void 0:e.value)||null}},mediaUrl(){const e=this.assetFilter("/administration/administration/static/img/cms/preview_mountain_small.jpg"),t=this.element.data.media;if(this.element.config.media.source==="mapped"){const l=this.getDemoValue(this.element.config.media.value);if(l&&l.url)return l.url}return t&&t.id?this.element.data.media.url:t&&t.url?this.assetFilter(t.url):e},assetFilter(){return Shopware.Filter.getByName("asset")},mediaConfigValue(){var e,t,i;return(i=(t=(e=this.element)==null?void 0:e.config)==null?void 0:t.sliderItems)==null?void 0:i.value}},watch:{cmsPageState:{deep:!0,handler(){this.$forceUpdate()}},mediaConfigValue(e){var l,a,o,s,n,c;const t=(o=(a=(l=this.element)==null?void 0:l.data)==null?void 0:a.media)==null?void 0:o.id;((c=(n=(s=this.element)==null?void 0:s.config)==null?void 0:n.media)==null?void 0:c.source)==="static"&&t&&e!==t&&(this.element.config.media.value=t)}},created(){this.createdComponent()},methods:{createdComponent(){this.initElementConfig("mini"),this.initElementData("mini")}}});const ke=`{% block sw_cms_element_mini_config %} <mt-text-field v-model="miniTitle" label="Mini element title" placeholder="Enter a title" @update:model-value="changeTitle" /> <mt-text-field v-model="miniTitleSize" label="Mini element title font size" placeholder="1rem" @update:model-value="changeTitleSize" /> <mt-text-field v-model="miniDescription" label="Mini element description" placeholder="Enter a description" @update:model-value="changeDescription" /> <mt-text-field v-model="miniDescriptionSize" label="Mini element description font size" placeholder=".9rem" @update:model-value="changeDescriptionSize" /> <mt-colorpicker v-model="miniTextColor" color-output="hex" label="Mini element text color" :alpha="true" :z-index="1000" @update:model-value="changeTextColor" /> <mt-colorpicker v-model="miniBackgroundColor" color-output="hex" label="Mini element background color" :alpha="true" :z-index="1000" @update:model-value="changeBackgroundColor" /> <mt-text-field v-model="miniButtonText" label="Mini element button text" placeholder="Enter mini button text" @update:model-value="changeButtonText" /> <mt-text-field v-model="miniButtonText" label="Mini element button text" placeholder="Enter mini button text" @update:model-value="changeButtonText" /> <mt-text-field v-model="miniButtonUrl" label="Mini element button url" placeholder="Enter mini button url" @update:model-value="changeButtonUrl" /> <mt-colorpicker v-model="miniButtonColor" color-output="hex" label="Mini element button icon color" :alpha="true" :z-index="1000" @update:model-value="changeButtonColor" /> <mt-colorpicker v-model="miniButtonBackgroundColor" color-output="hex" label="Mini element button background color" :alpha="true" :z-index="1000" @update:model-value="changeButtonBackgroundColor" /> <mt-select v-model="element.config.displayMode.value" class="sw-cms-el-config-image__display-mode" label="Image display mode" @update:model-value="onChangeDisplayMode" :options="displayModeOptions" /> <div class="sw-cms-el-config-image"> {% block sw_cms_element_image_config_media_upload %} <sw-cms-mapping-field v-model:config="element.config.media" :label="$tc('sw-cms.elements.image.label')" value-types="entity" entity="media" > <sw-media-upload-v2 variant="regular" :upload-tag="uploadTag" :source="previewSource" :allow-multi-select="false" :default-folder="cmsPageState.pageEntityName" :caption="$tc('sw-cms.elements.general.config.caption.mediaUpload')" @media-upload-sidebar-open="onOpenMediaModal" @media-upload-remove-image="onImageRemove" /> <template #preview="{ demoValue }"> <div class="sw-cms-el-config-image__mapping-preview"> <img v-if="demoValue.url" :src="demoValue.url" alt="" > <sw-alert v-else class="sw-cms-el-config-image__preview-info" variant="info" > {{ $tc('sw-cms.detail.label.mappingEmptyPreview') }} </sw-alert> </div> </template> </sw-cms-mapping-field> <sw-upload-listener :upload-tag="uploadTag" auto-upload @media-upload-finish="onImageUpload" /> {% endblock %} {% block sw_cms_element_image_config_media_modal %} <sw-media-modal-v2 v-if="mediaModalIsOpen" variant="full" :caption="$tc('sw-cms.elements.general.config.caption.mediaUpload')" :entity-context="cmsPageState.entityName" :allow-multi-select="false" :initial-folder-id="cmsPageState.defaultMediaFolderId" @media-upload-remove-image="onImageRemove" @media-modal-selection-change="onSelectionChanges" @modal-close="onCloseModal" /> {% endblock %} </div> {% endblock %}`;Shopware.Component.register("sw-cms-el-config-mini",{template:ke,mixins:["cms-element"],inject:["repositoryFactory"],data(){return{mediaModalIsOpen:!1,initialFolderId:null,displayModeOptions:[{value:"cover",label:"Cover"},{value:"contain",label:"Contain"}]}},computed:{miniTitle:{get(){return this.element.config.miniTitle.value},set(e){this.element.config.miniTitle.value=e}},miniTitleSize:{get(){return this.element.config.miniTitleSize.value},set(e){this.element.config.miniTitleSize.value=e}},miniDescription:{get(){return this.element.config.miniDescription.value},set(e){this.element.config.miniDescription.value=e}},miniDescriptionSize:{get(){return this.element.config.miniDescriptionSize.value},set(e){this.element.config.miniDescriptionSize.value=e}},miniTextColor:{get(){return this.element.config.miniTextColor.value},set(e){this.element.config.miniTextColor.value=e}},miniBackgroundColor:{get(){return this.element.config.miniBackgroundColor.value},set(e){this.element.config.miniBackgroundColor.value=e}},miniButtonText:{get(){return this.element.config.miniButtonText.value},set(e){this.element.config.miniButtonText.value=e}},miniButtonUrl:{get(){return this.element.config.miniButtonUrl.value},set(e){this.element.config.miniButtonUrl.value=e}},miniButtonColor:{get(){return this.element.config.miniButtonColor.value},set(e){this.element.config.miniButtonColor.value=e}},miniButtonBackgroundColor:{get(){return this.element.config.miniButtonBackgroundColor.value},set(e){this.element.config.miniButtonBackgroundColor.value=e}},displayMode:{get(){var e;return((e=this.element.config.displayMode)==null?void 0:e.value)||"cover"},set(e){this.element.config.displayMode.value=e,this.$emit("element-update",this.element)}},mediaRepository(){return this.repositoryFactory.create("media")},uploadTag(){return`cms-element-media-config-${this.element.id}`},previewSource(){var e,t,i;return(i=(t=(e=this.element)==null?void 0:e.data)==null?void 0:t.media)!=null&&i.id?this.element.data.media:this.element.config.media.value}},created(){this.createdComponent()},methods:{createdComponent(){this.initElementConfig("mini")},changeTitle(e){this.element.config.miniTitle.value=e,this.$emit("element-update",this.element)},changeTitleSize(e){this.element.config.miniTitleSize.value=e,this.$emit("element-update",this.element)},changeDescription(e){this.element.config.miniDescription.value=e,this.$emit("element-update",this.element)},changeDescriptionSize(e){this.element.config.miniDescriptionSize.value=e,this.$emit("element-update",this.element)},changeTextColor(e){this.element.config.miniTextColor.value=e,this.$emit("element-update",this.element)},changeBackgroundColor(e){this.element.config.miniBackgroundColor.value=e,this.$emit("element-update",this.element)},changeButtonText(e){this.element.config.miniButtonText.value=e,this.$emit("element-update",this.element)},changeButtonUrl(e){this.element.config.miniButtonUrl.value=e,this.$emit("element-update",this.element)},changeButtonColor(e){this.element.config.miniButtonColor.value=e,this.$emit("element-update",this.element)},changeButtonBackgroundColor(e){this.element.config.miniButtonBackgroundColor.value=e,this.$emit("element-update",this.element)},async onImageUpload({targetId:e}){const t=await this.mediaRepository.get(e,Shopware.Context.api);this.element.config.media.value=t.id,this.updateElementData(t),this.$emit("element-update",this.element)},onImageRemove(){this.element.config.media.value=null,this.updateElementData(),this.$emit("element-update",this.element)},onCloseModal(){this.mediaModalIsOpen=!1},onSelectionChanges(e){const t=e[0];this.element.config.media.value=t.id,this.updateElementData(t),this.$emit("element-update",this.element)},updateElementData(e=null){this.$set(this.element.data,"mediaId",e===null?null:e.id),this.$set(this.element.data,"media",e)},onOpenMediaModal(){this.mediaModalIsOpen=!0},onChangeDisplayMode(e){this.element.config.displayMode.value=e,this.$emit("element-update",this.element)}}});const Se=`{% block sw_cms_element_mini_preview %} <div class="sw-cms-preview-mini"> <div class="sw-cms-preview-mini-content"> <img :src="assetFilter('/administration/administration/static/img/cms/preview_mountain_small.jpg')" alt="" > <h5>Featured<br>link</h5> <span class="sw-cms-preview-mini-content-button">→</span> </div> </div> {% endblock %}`;Shopware.Component.register("sw-cms-el-preview-mini",{template:Se,computed:{assetFilter(){return Shopware.Filter.getByName("asset")}}});Shopware.Service("cmsService").registerCmsElement({name:"mini",label:"sw-cms.elements.mini.label",component:"sw-cms-el-mini",configComponent:"sw-cms-el-config-mini",previewComponent:"sw-cms-el-preview-mini",defaultConfig:{media:{source:"static",value:null,entity:{name:"media"}},displayMode:{source:"static",value:"cover"},miniTitle:{source:"static",value:"mini Title"},miniTitleSize:{source:"static",value:"1rem"},miniDescription:{source:"static",value:"Lorem ipsum dolor sit amet, consectetur adipiscing elit."},miniDescriptionSize:{source:"static",value:".9rem"},miniTextColor:{source:"static",value:"#000"},miniBackgroundColor:{source:"static",value:"#ececec"},miniButtonText:{source:"static",value:"Button text"},miniButtonUrl:{source:"static",value:"Button url"},miniButtonBackgroundColor:{source:"static",value:"#000"},miniButtonColor:{source:"static",value:"#FFF"}}});const _e=`{% block sw_cms_element_banner %} <div class="sw-cms-el-banner" :style="{ backgroundColor: element.config.bannerBackgroundColor.value, backgroundImage: element.config.media.value ? 'url(' + mediaUrl + ')' : '', backgroundSize: 'cover', backgroundPosition: 'center center', display: 'flex', alignItems: element.config.textAlignment.value }"> <div class="sw-cms-el-banner-content" :style="{ backgroundColor: element.config.textContainerBackground.value, height: 'fit-content', padding: element.config.textContainerPadding.value }"> <div v-html="element.config.bannerContent.value"></div> </div> </div> {% endblock %}`;Shopware.Component.register("sw-cms-el-banner",{template:_e,mixins:["cms-element"],computed:{bannerContent(){return`${this.element.config.bannerContent.value}`},bannerBackgroundColor(){return{"background-color":this.element.config.bannerBackgroundColor.value}},textAlignment(){return{"align-items":this.element.config.textAlignment.value||"center"}},textContainerBackground(){return{"background-color":this.element.config.textContainerBackground.value||"transparent"}},enableTextPadding(){return this.element.config.enableTextPadding.value?"2rem":"0"},textContainerPadding(){return{padding:this.element.config.enableTextPadding.value?`${this.element.config.textContainerPadding.value||"2rem"}`:"0"}},textContainerMaxWidth(){return{"max-width":this.element.config.textContainerMaxWidth.value?`${this.element.config.textContainerMaxWidth.value}px`:"none"}},imageFit(){return{"object-fit":this.element.config.imageFit.value||"cover"}},enableCustomHeight(){return this.element.config.enableCustomHeight.value},customHeightStyles(){return this.enableCustomHeight?{height:this.element.config.desktopHeight.value?`${this.element.config.desktopHeight.value}px`:"auto"}:{}},displayModeClass(){return this.element.config.displayMode.value==="standard"?null:`is--${this.element.config.displayMode.value}`},styles(){return{"min-height":this.element.config.displayMode.value==="cover"&&this.element.config.minHeight.value&&this.element.config.minHeight.value!==0?this.element.config.minHeight.value:"340px"}},imgStyles(){return{"align-self":this.element.config.verticalAlign.value||null}},horizontalAlign(){var e;return{"justify-content":((e=this.element.config.horizontalAlign)==null?void 0:e.value)||null}},mediaUrl(){const e=this.assetFilter("administration/static/img/cms/preview_mountain_large.jpg"),t=this.element.data.media;if(this.element.config.media.source==="mapped"){const l=this.getDemoValue(this.element.config.media.value);if(l&&l.url)return l.url}return t&&t.id?this.element.data.media.url:t&&t.url?this.assetFilter(t.url):e},assetFilter(){return Shopware.Filter.getByName("asset")},mediaConfigValue(){var e,t,i;return(i=(t=(e=this.element)==null?void 0:e.config)==null?void 0:t.sliderItems)==null?void 0:i.value}},watch:{cmsPageState:{deep:!0,handler(){this.$forceUpdate()}},mediaConfigValue(e){var l,a,o,s,n,c;const t=(o=(a=(l=this.element)==null?void 0:l.data)==null?void 0:a.media)==null?void 0:o.id;((c=(n=(s=this.element)==null?void 0:s.config)==null?void 0:n.media)==null?void 0:c.source)==="static"&&t&&e!==t&&(this.element.config.media.value=t)}},created(){this.createdComponent()},methods:{createdComponent(){this.initElementConfig("banner"),this.initElementData("banner")}}});const xe=`{% block sw_cms_element_banner_config %} <h3 class="sw-cms-config-title">Text Settings</h3> <div class="mt-field"> <sw-text-editor :value="bannerContent" label="Banner content" placeholder="Enter content" :allow-fullscreen="true" :height="150" @update:value="changeContent" /> </div> <mt-colorpicker v-model="bannerBackgroundColor" color-output="hex" label="Banner background color" :alpha="true" :z-index="1000" @update:model-value="changeBackgroundColor" /> <mt-select v-model="textAlignment" label="Text container alignment" placeholder="Select text container alignment" @update:model-value="changeTextAlignment" :options="textAlignmentOptions" /> <mt-select v-model="textAlignmentHorizontal" label="Text container horizontal alignment" placeholder="Select text container horizontal alignment" @update:model-value="changeTextAlignmentHorizontal" :options="textAlignmentHorizontalOptions" /> <mt-colorpicker v-model="textContainerBackground" color-output="hex" label="Text container background color" :alpha="true" :z-index="1000" @update:model-value="changeTextContainerBackground" /> <mt-switch v-model="enableTextPadding" label="Enable padding inside text container" /> <mt-text-field v-model="textContainerPadding" label="Text container padding (default: 2rem)" placeholder="rem" v-if="enableTextPadding" @update:model-value="changeTextContainerPadding" /> <mt-text-field v-model="textContainerMaxWidth" label="Max width of text container (optional)" @update:model-value="changeTextContainerMaxWidth" /> <h3 class="sw-cms-config-title">Media Settings</h3> <mt-select v-model="imageFit" label="Image fit" @update:model-value="changeImageFit" :options="imageFitOptions" /> <mt-switch v-model="enableCustomHeight" label="Set custom height for element" /> <mt-text-field v-if="enableCustomHeight" v-model="mobileHeight" label="Element mobile height" @update:model-value="changeMobileHeight" /> <mt-text-field v-if="enableCustomHeight" v-model="tabletHeight" label="Element tablet height" @update:model-value="changeTabletHeight" /> <mt-text-field v-if="enableCustomHeight" v-model="desktopHeight" label="Element desktop height" @update:model-value="changeDesktopHeight" /> <div class="sw-cms-el-config-image"> {% block sw_cms_element_image_config_media_upload %} <sw-cms-mapping-field v-model:config="element.config.media" :label="$tc('sw-cms.elements.image.label')" value-types="entity" entity="media" @update:value="changeMedia"> </sw-cms-mapping-field> <sw-media-upload-v2 variant="regular" :upload-tag="uploadTag" :source="previewSource" :allow-multi-select="false" :default-folder="cmsPageState.pageEntityName" :caption="$tc('sw-cms.elements.general.config.caption.mediaUpload')" @media-upload-sidebar-open="onOpenMediaModal" @media-upload-remove-image="onImageRemove" @update:value="changeUploadSource"> </sw-media-upload-v2> <sw-upload-listener :upload-tag="uploadTag" auto-upload @media-upload-finish="onImageUpload" /> {% endblock %} {% block sw_cms_element_image_config_media_modal %} <sw-media-modal-v2 v-if="mediaModalIsOpen" variant="full" :caption="$tc('sw-cms.elements.general.config.caption.mediaUpload')" :entity-context="cmsPageState.entityName" :allow-multi-select="false" :initial-folder-id="cmsPageState.defaultMediaFolderId" @media-upload-remove-image="onImageRemove" @media-modal-selection-change="onSelectionChanges" @modal-close="onCloseModal" /> {% endblock %} </div> {% endblock %}`;Shopware.Component.register("sw-cms-el-config-banner",{template:xe,mixins:["cms-element"],inject:["repositoryFactory"],data(){return{mediaModalIsOpen:!1,initialFolderId:null,textAlignmentOptions:[{value:"flex-start",label:"Top"},{value:"center",label:"Center"},{value:"flex-end",label:"Bottom"}],textAlignmentHorizontalOptions:[{value:"flex-start",label:"Top"},{value:"center",label:"Center (Horizontal)"},{value:"flex-end",label:"Bottom"}],imageFitOptions:[{value:"cover",label:"Cover"},{value:"contain",label:"Contain"}]}},computed:{bannerContent:{get(){return this.element.config.bannerContent.value},set(e){this.element.config.bannerContent.value=e}},bannerBackgroundColor:{get(){return this.element.config.bannerBackgroundColor.value},set(e){this.element.config.bannerBackgroundColor.value=e}},textAlignment:{get(){return this.element.config.textAlignment.value||"center"},set(e){this.element.config.textAlignment.value=e,this.$emit("element-update",this.element)}},textAlignmentHorizontal:{get(){return this.element.config.textAlignmentHorizontal.value||"center"},set(e){this.element.config.textAlignmentHorizontal.value=e,this.$emit("element-update",this.element)}},textContainerBackground:{get(){return this.element.config.textContainerBackground.value},set(e){this.element.config.textContainerBackground.value=e}},enableTextPadding:{get(){return this.element.config.enableTextPadding.value},set(e){this.element.config.enableTextPadding.value=e,this.$emit("element-update",this.element)}},textContainerPadding:{get(){return this.element.config.textContainerPadding.value},set(e){this.element.config.textContainerPadding.value=e}},textContainerMaxWidth:{get(){return this.element.config.textContainerMaxWidth.value},set(e){this.element.config.textContainerMaxWidth.value=e}},imageFit:{get(){return this.element.config.imageFit.value||"cover"},set(e){this.element.config.imageFit.value=e,this.$emit("element-update",this.element)}},enableCustomHeight:{get(){return this.element.config.enableCustomHeight.value},set(e){this.element.config.enableCustomHeight.value=e,this.$emit("element-update",this.element)}},mobileHeight:{get(){return this.element.config.mobileHeight.value},set(e){this.element.config.mobileHeight.value=e}},tabletHeight:{get(){return this.element.config.tabletHeight.value},set(e){this.element.config.tabletHeight.value=e}},desktopHeight:{get(){return this.element.config.desktopHeight.value},set(e){this.element.config.desktopHeight.value=e}},mediaRepository(){return this.repositoryFactory.create("media")},uploadTag(){return`cms-element-media-config-${this.element.id}`},previewSource(){var e,t,i;return(i=(t=(e=this.element)==null?void 0:e.data)==null?void 0:t.media)!=null&&i.id?this.element.data.media:this.element.config.media.value}},created(){this.createdComponent()},methods:{createdComponent(){this.initElementConfig("banner")},changeContent(e){this.element.config.bannerContent.value=e,this.$emit("element-update",this.element)},changeBackgroundColor(e){this.element.config.bannerBackgroundColor.value=e,this.$emit("element-update",this.element)},changeTextAlignment(e){this.element.config.textAlignment.value=e,this.$emit("element-update",this.element)},changeTextAlignmentHorizontal(e){this.element.config.textAlignmentHorizontal.value=e,this.$emit("element-update",this.element)},changeTextContainerBackground(e){this.element.config.textContainerBackground.value=e,this.$emit("element-update",this.element)},changeTextContainerPadding(e){this.element.config.textContainerPadding.value=e,this.$emit("element-update",this.element)},changeTextContainerMaxWidth(e){this.element.config.textContainerMaxWidth.value=e,this.$emit("element-update",this.element)},changeImageFit(e){this.element.config.imageFit.value=e,this.$emit("element-update",this.element)},changeMobileHeight(e){this.element.config.mobileHeight.value=e,this.$emit("element-update",this.element)},changeTabletHeight(e){this.element.config.tabletHeight.value=e,this.$emit("element-update",this.element)},changeDesktopHeight(e){this.element.config.desktopHeight.value=e,this.$emit("element-update",this.element)},async onImageUpload({targetId:e}){const t=await this.mediaRepository.get(e,Shopware.Context.api);this.element.config.media.value=t.id,this.updateElementData(t),this.$emit("element-update",this.element)},onImageRemove(){this.element.config.media.value=null,this.updateElementData(),this.$emit("element-update",this.element)},onCloseModal(){this.mediaModalIsOpen=!1},onSelectionChanges(e){const t=e[0];this.element.config.media.value=t.id,this.updateElementData(t),this.$emit("element-update",this.element)},updateElementData(e=null){this.$set(this.element.data,"mediaId",e===null?null:e.id),this.$set(this.element.data,"media",e)},onOpenMediaModal(){this.mediaModalIsOpen=!0}}});const Te='{% block sw_cms_element_banner_preview %} <div class="sw-cms-preview-banner" :style="`background-image: url(${assetFilter(\'/administration/administration/static/img/cms/preview_mountain_small.jpg\')}); background-size: cover; background-position: center;`"> <div class="sw-cms-preview-banner-content"> <h5>Banner</h5> </div> </div> {% endblock %}';Shopware.Component.register("sw-cms-el-preview-banner",{template:Te,computed:{assetFilter(){return Shopware.Filter.getByName("asset")}}});Shopware.Service("cmsService").registerCmsElement({name:"banner",label:"sw-cms.elements.banner.label",component:"sw-cms-el-banner",configComponent:"sw-cms-el-config-banner",previewComponent:"sw-cms-el-preview-banner",defaultConfig:{media:{source:"static",value:null,entity:{name:"media"}},bannerContent:{source:"static",value:"Banner Content"},bannerBackgroundColor:{source:"static",value:"#cecece"},textAlignment:{source:"static",value:"center"},textAlignmentHorizontal:{source:"static",value:"center"},textContainerBackground:{source:"static",value:"#ffffff"},enableTextPadding:{source:"static",value:!1},textContainerPadding:{source:"static",value:"2rem"},textContainerMaxWidth:{source:"static",value:""},imageFit:{source:"static",value:"cover"},enableCustomHeight:{source:"static",value:!1},mobileHeight:{source:"static",value:""},tabletHeight:{source:"static",value:""},desktopHeight:{source:"static",value:""}}});const Ie='{% block sw_cms_element_banner_featured_links %} <div class="sw-cms-el-banner-featured-links" :style="bannerBackgroundColor"> <div class="sw-cms-el-banner-featured-links-content"> <div v-html="element.config.bannerContent.value"></div> </div> <div class="sw-cms-el-banner-featured-links-image"> <img :src="mediaUrl" alt="" > </div> </div> {% endblock %}';Shopware.Component.register("sw-cms-el-banner-featured-links",{template:Ie,mixins:["cms-element"],computed:{bannerContent(){return`${this.element.config.bannerContent.value}`},bannerBackgroundColor(){return{"background-color":this.element.config.bannerBackgroundColor.value}},displayModeClass(){return this.element.config.displayMode.value==="standard"?null:`is--${this.element.config.displayMode.value}`},styles(){return{"min-height":this.element.config.displayMode.value==="cover"&&this.element.config.minHeight.value&&this.element.config.minHeight.value!==0?this.element.config.minHeight.value:"340px"}},imgStyles(){return{"align-self":this.element.config.verticalAlign.value||null}},horizontalAlign(){var e;return{"justify-content":((e=this.element.config.horizontalAlign)==null?void 0:e.value)||null}},mediaUrl(){const e=this.assetFilter("/administration/administration/static/img/cms/preview_mountain_small.jpg"),t=this.element.data.media;if(this.element.config.media.source==="mapped"){const l=this.getDemoValue(this.element.config.media.value);if(l&&l.url)return l.url}return t&&t.id?this.element.data.media.url:t&&t.url?this.assetFilter(t.url):e},assetFilter(){return Shopware.Filter.getByName("asset")},mediaConfigValue(){var e,t,i;return(i=(t=(e=this.element)==null?void 0:e.config)==null?void 0:t.sliderItems)==null?void 0:i.value}},watch:{cmsPageState:{deep:!0,handler(){this.$forceUpdate()}},mediaConfigValue(e){var l,a,o,s,n,c;const t=(o=(a=(l=this.element)==null?void 0:l.data)==null?void 0:a.media)==null?void 0:o.id;((c=(n=(s=this.element)==null?void 0:s.config)==null?void 0:n.media)==null?void 0:c.source)==="static"&&t&&e!==t&&(this.element.config.media.value=t)}},created(){this.createdComponent()},methods:{createdComponent(){this.initElementConfig("banner-featured-links"),this.initElementData("banner-featured-links")}}});const $e=`{% block sw_cms_element_banner_featured_links_config %} <div class="mt-field"> <sw-text-editor :value="bannerContent" label="Banner content" placeholder="Enter content" :allow-fullscreen="true" :height="150" @update:value="changeContent" /> </div> <mt-colorpicker v-model="bannerBackgroundColor" color-output="hex" label="Banner background color" :alpha="true" zIndex="1000" @update:model-value="changeBackgroundColor" /> <div class="sw-cms-el-config-image"> {% block sw_cms_element_image_config_media_upload %} <sw-cms-mapping-field v-model:config="element.config.media" :label="$tc('sw-cms.elements.image.label')" value-types="entity" entity="media" > <sw-media-upload-v2 variant="regular" :upload-tag="uploadTag" :source="previewSource" :allow-multi-select="false" :default-folder="cmsPageState.pageEntityName" :caption="$tc('sw-cms.elements.general.config.caption.mediaUpload')" @media-upload-sidebar-open="onOpenMediaModal" @media-upload-remove-image="onImageRemove" /> <template #preview="{ demoValue }"> <div class="sw-cms-el-config-image__mapping-preview"> <img v-if="demoValue.url" :src="demoValue.url" alt="" > <sw-alert v-else class="sw-cms-el-config-image__preview-info" variant="info" > {{ $tc('sw-cms.detail.label.mappingEmptyPreview') }} </sw-alert> </div> </template> </sw-cms-mapping-field> <sw-upload-listener :upload-tag="uploadTag" auto-upload @media-upload-finish="onImageUpload" /> {% endblock %} {% block sw_cms_element_image_config_media_modal %} <sw-media-modal-v2 v-if="mediaModalIsOpen" variant="full" :caption="$tc('sw-cms.elements.general.config.caption.mediaUpload')" :entity-context="cmsPageState.entityName" :allow-multi-select="false" :initial-folder-id="cmsPageState.defaultMediaFolderId" @media-upload-remove-image="onImageRemove" @media-modal-selection-change="onSelectionChanges" @modal-close="onCloseModal" /> {% endblock %} </div> {% endblock %}`;Shopware.Component.register("sw-cms-el-config-banner-featured-links",{template:$e,mixins:["cms-element"],inject:["repositoryFactory"],data(){return{mediaModalIsOpen:!1,initialFolderId:null}},computed:{bannerContent:{get(){return this.element.config.bannerContent.value},set(e){this.element.config.bannerContent.value=e}},bannerBackgroundColor:{get(){return this.element.config.bannerBackgroundColor.value},set(e){this.element.config.bannerBackgroundColor.value=e}},mediaRepository(){return this.repositoryFactory.create("media")},uploadTag(){return`cms-element-media-config-${this.element.id}`},previewSource(){var e,t,i;return(i=(t=(e=this.element)==null?void 0:e.data)==null?void 0:t.media)!=null&&i.id?this.element.data.media:this.element.config.media.value}},created(){this.createdComponent()},methods:{createdComponent(){this.initElementConfig("banner-featured-links")},changeContent(e){this.element.config.bannerContent.value=e,this.$emit("element-update",this.element)},changeBackgroundColor(e){this.element.config.bannerBackgroundColor.value=e,this.$emit("element-update",this.element)},async onImageUpload({targetId:e}){const t=await this.mediaRepository.get(e,Shopware.Context.api);this.element.config.media.value=t.id,this.updateElementData(t),this.$emit("element-update",this.element)},onImageRemove(){this.element.config.media.value=null,this.updateElementData(),this.$emit("element-update",this.element)},onCloseModal(){this.mediaModalIsOpen=!1},onSelectionChanges(e){const t=e[0];this.element.config.media.value=t.id,this.updateElementData(t),this.$emit("element-update",this.element)},updateElementData(e=null){this.$set(this.element.data,"mediaId",e===null?null:e.id),this.$set(this.element.data,"media",e)},onOpenMediaModal(){this.mediaModalIsOpen=!0}}});const Be='{% block sw_cms_element_banner_featured_links_preview %} <div class="sw-cms-preview-banner-featured-links" :style="`background-image: url(${assetFilter(\'/administration/administration/static/img/cms/preview_mountain_small.jpg\')}); background-size: cover; background-position: center;`"> <div class="sw-cms-preview-banner-featured-links-content"> <h5>Banner</h5> </div> </div> {% endblock %}';Shopware.Component.register("sw-cms-el-preview-banner-featured-links",{template:Be,computed:{assetFilter(){return Shopware.Filter.getByName("asset")}}});Shopware.Service("cmsService").registerCmsElement({name:"banner-featured-links",label:"sw-cms.elements.banner-featured-links.label",component:"sw-cms-el-banner-featured-links",configComponent:"sw-cms-el-config-banner-featured-links",previewComponent:"sw-cms-el-preview-banner-featured-links",defaultConfig:{media:{source:"static",value:null,entity:{name:"media"}},bannerContent:{source:"static",value:"Banner Content"},bannerBackgroundColor:{source:"static",value:"#cecece"}}});const Me=`{% block sw_cms_element_banner_link %} <div :class="{ 'is-clickable': element.config.buttonType.value === 'clickable' }" class="sw-cms-el-banner-link" :style="generalBackgroundColor"> <div class="sw-cms-el-banner-link-image" :style="isFallbackImage() ? bannerBackgroundColor : null"> <img v-if="!isFallbackImage()" :src="mediaUrl" alt="" :style="imgStyles"> </div> <div class="sw-cms-el-banner-link-content"> <div class="sw-cms-el-banner-link-content-text"> <h1 :style="generalTitleColor">{{ element.config.generalTitle.value }}</h1> <p v-html="element.config.generalDescription.value"></p> <span v-if="element.config.actionLabel.value" :class="['action-label', element.config.labelType.value, labelPosition]" :style="{ fontWeight: element.config.labelFontWeight.value }"> {{ element.config.labelContent.value }} </span> </div> <div class="sw-cms-el-banner-link-content-button" v-if="shouldShowButtonDiv" :class="buttonPosition"> <a :class="buttonTypeClass" :style="buttonStyles"> <span v-if="element.config.buttonType.value == 'arrow'" class="material-symbols-rounded"> → </span> <span v-else> {{ element.config.bannerLinkButtonText.value }} </span> </a> </div> </div> </div> {% endblock %}`;Shopware.Component.register("sw-cms-el-banner-link",{template:Me,mixins:["cms-element"],computed:{generalTitle(){return`${this.element.config.generalTitle.value}`},titleHeadingType(){return`${this.element.config.titleHeadingType.value}`},minHeightSm(){return`${this.element.config.minHeightSm.value}`},minHeightMd(){return`${this.element.config.minHeightMd.value}`},minHeightLg(){return`${this.element.config.minHeightLg.value}`},elementPadding(){return`${this.element.config.elementPadding.value}`},generalTitleColor(){return{color:this.element.config.generalTitleColor.value}},generalDescription(){return`${this.element.config.generalDescription.value}`},generalBackgroundColor(){return{"background-color":this.element.config.generalBackgroundColor.value}},shouldShowButtonDiv(){return!["clickable"].includes(this.element.config.buttonType.value)},bannerLinkButtonText(){return`${this.element.config.bannerLinkButtonText.value}`},bannerLinkButtonUrl(){return`${this.element.config.bannerLinkButtonUrl.value}`},buttonTypeClass(){return`btn btn-${this.element.config.buttonType.value}`},buttonType(){return`${this.element.config.buttonType.value}`},labelContent(){return`${this.element.config.labelContent.value}`},labelPosition(){return`label-position-${this.element.config.labelPosition.value}`},buttonPosition(){return`button-position-${this.element.config.buttonPosition.value}`},actionLabel(){return this.element.config.actionLabel.value},labelTypeClass(){return`label-${this.element.config.labelType.value}`},typeIsArrow(){return this.element.config.buttonType.value==="arrow"},typeIsPrimary(){return this.element.config.buttonType.value==="primary"},typeIsSecondary(){return this.element.config.buttonType.value==="secondary"},typeIsCustom(){return this.element.config.buttonType.value==="custom"},buttonBorderColor(){return this.typeIsArrow||this.typeIsCustom?{"border-color":this.element.config.buttonBorderColor.value||"#000"}:{}},buttonBackgroundColor(){return this.typeIsArrow||this.typeIsCustom?{"background-color":this.element.config.buttonBackgroundColor.value||"#fff"}:{}},buttonContentColor(){return this.typeIsArrow||this.typeIsCustom?{color:this.element.config.buttonContentColor.value||"#000"}:{}},hoverColor(){return this.typeIsArrow||this.typeIsCustom?{color:this.element.config.hoverColor.value||"#f00"}:{}},hoverBackgroundColor(){return this.typeIsArrow||this.typeIsCustom?{"background-color":this.element.config.hoverBackgroundColor.value||"#f0f0f0"}:{}},hoverBorderColor(){return this.typeIsArrow||this.typeIsCustom?{"border-color":this.element.config.hoverBorderColor.value||"#ccc"}:{}},buttonStyles(){return{...this.buttonBorderColor,...this.buttonBackgroundColor,...this.buttonContentColor,":hover":{...this.hoverColor,...this.hoverBackgroundColor,...this.hoverBorderColor}}},displayModeClass(){return this.element.config.displayMode.value==="standard"?null:`is--${this.element.config.displayMode.value}`},styles(){return{"min-height":this.element.config.displayMode.value==="cover"&&this.element.config.minHeight.value&&this.element.config.minHeight.value!==0?this.element.config.minHeight.value:"340px"}},imgStyles(){return{"object-fit":this.element.config.bannerImageFit.value||"cover","object-position":this.element.config.imagePosition.value||"center"}},horizontalAlign(){var e;return{"justify-content":((e=this.element.config.horizontalAlign)==null?void 0:e.value)||null}},bannerImageFit(){return this.element.config.bannerImageFit.value||"cover"},mediaUrl(){const e=this.assetFilter("/administration/administration/static/img/cms/preview_mountain_small.jpg"),t=this.element.data.media;if(this.element.config.media.source==="mapped"){const l=this.getDemoValue(this.element.config.media.value);if(l&&l.url)return l.url}return t&&t.id?this.element.data.media.url:t&&t.url?this.assetFilter(t.url):e},assetFilter(){return Shopware.Filter.getByName("asset")},mediaConfigValue(){var e,t,i;return(i=(t=(e=this.element)==null?void 0:e.config)==null?void 0:t.sliderItems)==null?void 0:i.value}},watch:{cmsPageState:{deep:!0,handler(){this.$forceUpdate()}},mediaConfigValue(e){var l,a,o,s,n,c;const t=(o=(a=(l=this.element)==null?void 0:l.data)==null?void 0:a.media)==null?void 0:o.id;((c=(n=(s=this.element)==null?void 0:s.config)==null?void 0:n.media)==null?void 0:c.source)==="static"&&t&&e!==t&&(this.element.config.media.value=t)}},created(){this.createdComponent()},methods:{createdComponent(){this.initElementConfig("banner-link"),this.initElementData("banner-link")},isFallbackImage(){const e=this.assetFilter("/administration/administration/static/img/cms/preview_mountain_small.jpg");return this.mediaUrl===e}}});const Fe=`{% block sw_cms_element_banner_link_config %} <mt-tabs :items="[ { label: 'General settings', name: 'general' }, { label: 'Button settings', name: 'button' }, { label: 'Label settings', name: 'label' } ]" @new-item-active="setActiveItem" /> <sw-container v-if="activeTab === 'general'" class="sw-cms-el-config-banner-link__tab-content" style="margin-top: 2rem;"> <mt-text-field v-model="minHeightSm" label="Min height (sm or less)" placeholder="Enter min height (e.g., 100px)" help-text="Set a minimum height for small screens or less. This ensures the element remains visually appealing, even with or without buttons or actions." @update:model-value="changeMinHeightSm" /> <mt-text-field v-model="minHeightMd" label="Min height (md)" placeholder="Enter min height (e.g., 200px)" help-text="Set a minimum height for medium screens. This is useful for maintaining the desired layout, whether or not a button or action is present." @update:model-value="changeMinHeightMd" /> <mt-text-field v-model="minHeightLg" label="Min height (lg)" placeholder="Enter min height (e.g., 400px)" help-text="Set a minimum height for large screens. This allows for more customization, including showing more of the image or content, even with buttons or actions." @update:model-value="changeMinHeightLg" /> <mt-text-field v-model="elementPadding" label="Element Padding" placeholder="Enter padding (e.g., 16px, 8px 16px)" help-text="Specify the padding for the element. Use CSS shorthand (e.g., '10px' for all sides, '10px 20px' for top-bottom and left-right). Adjust to control spacing within the element." @update:model-value="changeElementPadding" /> <mt-text-field v-model="generalTitle" label="Title" placeholder="Enter a title" @update:model-value="changeTitle" /> <mt-colorpicker v-model="generalTitleColor" color-output="hex" label="Title color" :alpha="true" :z-index="1000" @update:model-value="onChangeTitleColor" /> <mt-select v-model="element.config.titleHeadingType.value" class="sw-cms-el-config-title-heading-type" label="Title Heading Type" placeholder="Select heading level" help-text="Choose the HTML heading level for the title (e.g., h1 for main headings, h2 for subheadings)." @update:model-value="changeTitleHeadingType" :options="headingTypeOptions" /> <div class="mt-field"> <sw-text-editor :value="generalDescription" label="Subtitle" placeholder="Enter a description" :allow-fullscreen="true" :height="150" @update:value="changeDescription" /> </div> <mt-colorpicker v-model="generalBackgroundColor" color-output="hex" label="Background color" :alpha="true" :z-index="1000" @update:model-value="changeBackgroundColor" /> <div class="sw-cms-el-config-image sw-field"> {% block sw_cms_element_image_config_media_upload %} <sw-cms-mapping-field v-model:config="element.config.media" :label="$tc('sw-cms.elements.image.label')" value-types="entity" entity="media" > <sw-media-upload-v2 variant="regular" :upload-tag="uploadTag" :source="previewSource" :allow-multi-select="false" :default-folder="cmsPageState.pageEntityName" :caption="$tc('sw-cms.elements.general.config.caption.mediaUpload')" @media-upload-sidebar-open="onOpenMediaModal" @media-upload-remove-image="onImageRemove" /> <template #preview="{ demoValue }"> <div class="sw-cms-el-config-image__mapping-preview"> <img v-if="demoValue.url" :src="demoValue.url" alt="" > <sw-alert v-else class="sw-cms-el-config-image__preview-info" variant="info" > {{ $tc('sw-cms.detail.label.mappingEmptyPreview') }} </sw-alert> </div> </template> </sw-cms-mapping-field> <sw-upload-listener :upload-tag="uploadTag" auto-upload @media-upload-finish="onImageUpload" /> {% endblock %} {% block sw_cms_element_image_config_media_modal %} <sw-media-modal-v2 v-if="mediaModalIsOpen" variant="full" :caption="$tc('sw-cms.elements.general.config.caption.mediaUpload')" :entity-context="cmsPageState.entityName" :allow-multi-select="false" :initial-folder-id="cmsPageState.defaultMediaFolderId" @media-upload-remove-image="onImageRemove" @media-modal-selection-change="onSelectionChanges" @modal-close="onCloseModal" /> {% endblock %} </div> <mt-select v-model="bannerImageFit" label="Select an image fit option" placeholder="Choose how the image should fit within the element" @update:model-value="changeBannerImageFit" :options="imageFitOptions" /> <mt-select v-model="imagePosition" label="Select Image Position" placeholder="Choose how the image should be positioned horizontally" @update:model-value="changeImagePosition" :options="imagePositionOptions" /> <mt-select v-if="bannerImageFit === 'cover'" v-model="imagePositionVertical" label="Select Image Vertical Position" placeholder="Choose how the image should be positioned vertically" @update:model-value="changeImagePositionVertical" :options="imagePositionVerticalOptions" /> </sw-container> <sw-container v-if="activeTab === 'button'" class="sw-cms-el-config-banner-link__tab-button" style="margin-top: 2rem;"> <mt-select v-model="element.config.buttonType.value" label="Button type" @update:model-value="changeButtonType" :options="buttonTypeOptions" /> <mt-text-field v-if="typeIsCustom || typeIsPrimary || typeIsSecondary" v-model="bannerLinkButtonText" label="Call to action text" placeholder="Enter button text" @update:model-value="changeButtonText" /> <mt-text-field v-model="bannerLinkButtonUrl" label="Call to action url or block url" placeholder="Enter button url" @update:model-value="changeButtonUrl" /> <mt-colorpicker v-if="typeIsArrow || typeIsCustom" v-model="buttonBorderColor" color-output="hex" label="Button border color" :alpha="true" :z-index="1000" @update:model-value="onChangeButtonBorderColor" /> <mt-colorpicker v-if="typeIsArrow || typeIsCustom" v-model="buttonBackgroundColor" color-output="hex" label="Button background color" :alpha="true" :z-index="1000" @update:model-value="changeButtonBackgroundColor" /> <mt-colorpicker v-if="typeIsArrow || typeIsCustom" v-model="buttonContentColor" color-output="hex" label="Text or icon color" :alpha="true" :z-index="1000" @update:model-value="changeButtonContentColor" /> <mt-colorpicker v-if="typeIsArrow || typeIsCustom" v-model="hoverColor" color-output="hex" label="Hover color" :alpha="true" :z-index="1000" @update:model-value="changeHoverColor" /> <mt-colorpicker v-if="typeIsArrow || typeIsCustom" v-model="hoverBorderColor" color-output="hex" label="Hover border color" :alpha="true" :z-index="1000" @update:model-value="changeHoverBorderColor" /> <mt-colorpicker v-if="typeIsArrow || typeIsCustom" v-model="hoverBackgroundColor" color-output="hex" label="Hover background color" :alpha="true" :z-index="1000" @update:model-value="changeHoverBackgroundColor" /> <mt-select v-if="typeIsArrow || typeIsCustom || typeIsPrimary || typeIsSecondary" v-model="element.config.buttonPosition.value" label="Button position" @update:model-value="changeButtonPosition" :options="buttonPositionOptions" /> </sw-container> <sw-container v-if="activeTab === 'label'" class="sw-cms-el-config-banner-link__tab-label" style="margin-top: 2rem;"> <div class="mt-field"> <mt-checkbox :model-value="actionLabel" label="Show action label" @change="changeActionLabel" /> </div> <mt-select v-if="showActionLabel" v-model="element.config.labelFontWeight.value" label="Font weight" @update:model-value="changeLabelFontWeight" :options="labelFontWeightOptions" /> <mt-text-field v-if="showActionLabel" v-model="labelContent" label="Label content" placeholder="Enter label content" @update:model-value="changeLabelContent" /> <mt-select v-if="showActionLabel" v-model="element.config.labelType.value" label="Label style" @update:model-value="changeLabelType" :options="labelTypeOptions" /> <mt-select v-if="showActionLabel" v-model="element.config.labelPosition.value" label="Label position" @update:model-value="changeLabelPosition" :options="labelPositionOptions" /> </sw-container> {% endblock %}`;Shopware.Component.register("sw-cms-el-config-banner-link",{template:Fe,mixins:["cms-element"],inject:["repositoryFactory"],data(){return{mediaModalIsOpen:!1,actionLabel:!1,activeTab:"general",initialFolderId:null,headingTypeOptions:[{value:"h1",label:"H1"},{value:"h2",label:"H2"},{value:"h3",label:"H3"},{value:"h4",label:"H4"},{value:"h5",label:"H5"},{value:"h6",label:"H6"},{value:"span",label:"Span"}],imageFitOptions:[{value:"contain",label:"Contain"},{value:"cover",label:"Cover"}],imagePositionOptions:[{value:"left",label:"Left"},{value:"center",label:"Center"},{value:"right",label:"Right"}],imagePositionVerticalOptions:[{value:"top",label:"Top"},{value:"center",label:"Center"},{value:"bottom",label:"Bottom"}],buttonTypeOptions:[{value:"primary",label:"Primary"},{value:"secondary",label:"Secondary"},{value:"custom",label:"Custom"},{value:"clickable",label:"Element clickable"},{value:"arrow",label:"Arrow"}],buttonPositionOptions:[{value:"left",label:"Left"},{value:"center",label:"Center"},{value:"right",label:"Right"}],labelFontWeightOptions:[{value:"300",label:"300"},{value:"400",label:"400"},{value:"600",label:"600"}],labelTypeOptions:[{value:"danger",label:"Danger"},{value:"success",label:"Success"},{value:"info",label:"Info"},{value:"warning",label:"Warning"}],labelPositionOptions:[{value:"top-right",label:"Above the text on the right side"},{value:"bottom-right",label:"Under the text on the right side"},{value:"bottom-left",label:"Under the text on the left side"}]}},computed:{showActionLabel(){var e;return!!((e=this.element.config.actionLabel)!=null&&e.value)},minHeightSm:{get(){return this.element.config.minHeightSm.value},set(e){this.element.config.minHeightSm.value=e}},minHeightMd:{get(){return this.element.config.minHeightMd.value},set(e){this.element.config.minHeightMd.value=e}},minHeightLg:{get(){return this.element.config.minHeightLg.value},set(e){this.element.config.minHeightLg.value=e}},elementPadding:{get(){return this.element.config.elementPadding.value},set(e){this.element.config.elementPadding.value=e}},imagePosition:{get(){return this.element.config.imagePosition.value||"center"},set(e){this.element.config.imagePosition.value=e,this.$emit("element-update",this.element)}},imagePositionVertical:{get(){return this.element.config.imagePositionVertical.value||"center"},set(e){this.element.config.imagePositionVertical.value=e,this.$emit("element-update",this.element)}},generalTitle:{get(){return this.element.config.generalTitle.value},set(e){this.element.config.generalTitle.value=e}},generalTitleColor:{get(){return this.element.config.generalTitleColor.value},set(e){this.element.config.generalTitleColor.value=e}},titleHeadingType:{get(){return this.element.config.titleHeadingType.value||"h2"},set(e){this.element.config.titleHeadingType.value=e,this.$emit("element-update",this.element)}},generalDescription:{get(){return this.element.config.generalDescription.value},set(e){this.element.config.generalDescription.value=e}},generalBackgroundColor:{get(){return this.element.config.generalBackgroundColor.value},set(e){this.element.config.generalBackgroundColor.value=e}},bannerLinkButtonText:{get(){return this.element.config.bannerLinkButtonText.value},set(e){this.element.config.bannerLinkButtonText.value=e}},bannerLinkButtonUrl:{get(){return this.element.config.bannerLinkButtonUrl.value},set(e){this.element.config.bannerLinkButtonUrl.value=e}},buttonBorderColor:{get(){return this.element.config.buttonBorderColor.value},set(e){this.element.config.buttonBorderColor.value=e}},buttonContentColor:{get(){return this.element.config.buttonContentColor.value},set(e){this.element.config.buttonContentColor.value=e}},buttonBackgroundColor:{get(){return this.element.config.buttonBackgroundColor.value},set(e){this.element.config.buttonBackgroundColor.value=e}},buttonType:{get(){return this.element.config.buttonType.value||"primary"},set(e){this.element.config.buttonType.value=e,this.$emit("element-update",this.element)}},typeIsArrow(){var e;return((e=this.element.config.buttonType)==null?void 0:e.value)==="arrow"},typeIsPrimary(){var e;return((e=this.element.config.buttonType)==null?void 0:e.value)==="primary"},typeIsSecondary(){var e;return((e=this.element.config.buttonType)==null?void 0:e.value)==="secondary"},typeIsCustom(){var e;return((e=this.element.config.buttonType)==null?void 0:e.value)==="custom"},hoverColor:{get(){return this.element.config.hoverColor.value},set(e){this.element.config.hoverColor.value=e}},hoverBorderColor:{get(){return this.element.config.hoverBorderColor.value},set(e){this.element.config.hoverBorderColor.value=e}},hoverBackgroundColor:{get(){return this.element.config.hoverBackgroundColor.value},set(e){this.element.config.hoverBackgroundColor.value=e}},buttonPosition:{get(){return this.element.config.buttonPosition.value||"left"},set(e){this.element.config.buttonPosition.value=e,this.$emit("element-update",this.element)}},actionLabel:{get(){return this.element.config.actionLabel.value??!1},set(e){this.element.config.actionLabel.value=e,this.$emit("element-update",this.element)}},labelType:{get(){return this.element.config.labelType.value||"success"},set(e){this.element.config.labelType.value=e,this.$emit("element-update",this.element)}},labelFontWeight:{get(){return this.element.config.labelFontWeight.value||"600"},set(e){this.element.config.labelFontWeight.value=e,this.$emit("element-update",this.element)}},labelPosition:{get(){return this.element.config.labelPosition.value||"top-right"},set(e){this.element.config.labelPosition.value=e,this.$emit("element-update",this.element)}},labelContent:{get(){return this.element.config.labelContent.value},set(e){this.element.config.labelContent.value=e}},bannerImageFit:{get(){return this.element.config.bannerImageFit.value||"cover"},set(e){this.element.config.bannerImageFit.value=e,this.$emit("element-update",this.element)}},mediaRepository(){return this.repositoryFactory.create("media")},uploadTag(){return`cms-element-media-config-${this.element.id}`},previewSource(){var e,t,i;return(i=(t=(e=this.element)==null?void 0:e.data)==null?void 0:t.media)!=null&&i.id?this.element.data.media:this.element.config.media.value}},created(){this.createdComponent(),this.element.config.actionLabel||this.$set(this.element.config,"actionLabel",{source:"static",value:!1})},methods:{createdComponent(){this.initElementConfig("banner-link"),this.element.config.actionLabel||(this.element.config.actionLabel={source:"static",value:!1})},setActiveItem(e){this.activeTab=e},changeActionLabel(e){this.element.config.actionLabel?this.element.config.actionLabel.value=e:this.$set(this.element.config,"actionLabel",{source:"static",value:e}),this.$emit("element-update",this.element)},changeMinHeightSm(e){this.element.config.minHeightSm.value=e,this.$emit("element-update",this.element)},changeMinHeightMd(e){this.element.config.minHeightMd.value=e,this.$emit("element-update",this.element)},changeMinHeightLg(e){this.element.config.minHeightLg.value=e,this.$emit("element-update",this.element)},changeElementPadding(e){this.element.config.elementPadding.value=e,this.$emit("element-update",this.element)},changeBannerImageFit(e){this.element.config.bannerImageFit.value=e,this.$emit("element-update",this.element)},changeImagePosition(e){this.element.config.imagePosition.value=e,this.$emit("element-update",this.element)},changeImagePositionVertical(e){this.element.config.imagePositionVertical.value=e,this.$emit("element-update",this.element)},changeButtonUrl(e){this.element.config.bannerLinkButtonUrl.value=e,this.$emit("element-update",this.element)},changeTitle(e){this.element.config.generalTitle.value=e,this.$emit("element-update",this.element)},changeTitleHeadingType(e){this.element.config.titleHeadingType.value=e,this.$emit("element-update",this.element)},onChangeTitleColor(e){this.element.config.generalTitleColor.value=e,this.$emit("element-update",this.element)},changeDescription(e){this.element.config.generalDescription.value=e,this.$emit("element-update",this.element)},changeBackgroundColor(e){this.element.config.generalBackgroundColor.value=e,this.$emit("element-update",this.element)},changeButtonText(e){this.element.config.bannerLinkButtonText.value=e,this.$emit("element-update",this.element)},changeButtonType(e){this.element.config.buttonType.value=e,this.$emit("element-update",this.element)},changeButtonPosition(e){this.element.config.buttonPosition.value=e,this.$emit("element-update",this.element)},changeLabelType(e){this.$emit("element-update",this.element)},changeLabelFontWeight(e){this.element.config.labelFontWeight.value=e,this.$emit("element-update",this.element)},changeLabelPosition(e){this.element.config.labelPosition.value=e,this.$emit("element-update",this.element)},onChangeButtonBorderColor(e){this.element.config.buttonBorderColor.value=e,this.$emit("element-update",this.element)},changeButtonBackgroundColor(e){this.element.config.buttonBackgroundColor.value=e,this.$emit("element-update",this.element)},changeButtonContentColor(e){this.element.config.buttonContentColor.value=e,this.$emit("element-update",this.element)},changeActionLabel(e){this.element.config.actionLabel.value=e,this.$emit("element-update",this.element)},changeLabelContent(e){this.element.config.labelContent.value=e,this.$emit("element-update",this.element)},changeHoverColor(e){this.element.config.hoverColor.value=e,this.$emit("element-update",this.element)},changeHoverBorderColor(e){this.element.config.hoverBorderColor.value=e,this.$emit("element-update",this.element)},changeHoverBackgroundColor(e){this.element.config.hoverBackgroundColor.value=e,this.$emit("element-update",this.element)},async onImageUpload({targetId:e}){const t=await this.mediaRepository.get(e,Shopware.Context.api);this.element.config.media.value=t.id,this.updateElementData(t),this.$emit("element-update",this.element)},onImageRemove(){this.element.config.media.value=null,this.updateElementData(),this.$emit("element-update",this.element)},onCloseModal(){this.mediaModalIsOpen=!1},onSelectionChanges(e){const t=e[0];this.element.config.media.value=t.id,this.updateElementData(t),this.$emit("element-update",this.element)},updateElementData(e=null){this.$set(this.element.data,"mediaId",e===null?null:e.id),this.$set(this.element.data,"media",e)},onOpenMediaModal(){this.mediaModalIsOpen=!0}}});const He='{% block sw_cms_element_banner_link_preview %} <div class="sw-cms-preview-el-banner-link" :style="`background-image: url(${assetFilter(\'/administration/administration/static/img/cms/preview_mountain_small.jpg\')}); background-size: cover; background-position: center;`"> <div class="sw-cms-preview-el-banner-link-content"> <h5>Lorem ipsum</h5> <div class="sw-cms-preview-el-banner-link-label">Label</div> <div class="sw-cms-preview-el-banner-link-button">Button</div> </div> </div> {% endblock %}';Shopware.Component.register("sw-cms-el-preview-banner-link",{template:He,computed:{assetFilter(){return Shopware.Filter.getByName("asset")}}});Shopware.Service("cmsService").registerCmsElement({name:"banner-link",label:"sw-cms.elements.banner-link.label",component:"sw-cms-el-banner-link",configComponent:"sw-cms-el-config-banner-link",previewComponent:"sw-cms-el-preview-banner-link",defaultConfig:{media:{source:"static",value:null,entity:{name:"media"}},generalTitle:{source:"static",value:"Title"},generalTitleColor:{source:"static",value:"#000"},titleHeadingType:{source:"static",value:null},generalDescription:{source:"static",value:"Lorem ipsum dolor sit amet, consectetur adipiscing elit."},generalBackgroundColor:{source:"static",value:"#ececec"},bannerLinkButtonText:{source:"static",value:"Button text"},bannerLinkButtonUrl:{source:"static",value:"/"},buttonType:{source:"static",value:"primary"},buttonBorderColor:{source:"static",value:"#000"},buttonBackgroundColor:{source:"static",value:"#000"},buttonContentColor:{source:"static",value:"#FFF"},actionLabel:{source:"static",value:null},labelType:{source:"static",value:"alert"},labelFontWeight:{source:"static",value:"300"},labelPosition:{source:"static",value:"bottom-left"},labelContent:{source:"static",value:"OP = OP"},buttonPosition:{source:"static",value:"right"},hoverBackgroundColor:{source:"static",value:"#FFF"},hoverBorderColor:{source:"static",value:"#FFF"},hoverColor:{source:"static",value:"#FFF"},minHeightSm:{source:"static",value:""},minHeightMd:{source:"static",value:""},minHeightLg:{source:"static",value:""},bannerImageFit:{source:"static",value:"cover"},imagePosition:{source:"static",value:"center"},imagePositionVertical:{source:"static",value:"center"},elementPadding:{source:"static",value:"16px"}}});const Pe='{% block sw_cms_element_category %} <div class="sw-cms-el-category" :class="categoryShape"> <div class="sw-cms-el-category-image" :style="categoryBackgroundColor"> <img :src="mediaUrl" alt="Category Image" :class="categoryImageFit"> </div> <div class="sw-cms-el-category-content" :class="categoryContentClass"> <component :is="categoryTitleStyle" v-if="categoryName" :style="categoryTitleColorStyle" > {{ categoryName }} </component> <component :is="categoryTitleStyle" v-else :style="categoryTitleColorStyle" > Category placeholder </component> </div> </div> {% endblock %}';Shopware.Component.register("sw-cms-el-category",{template:Pe,mixins:["cms-element"],inject:["repositoryFactory"],data(){return{categoryName:"",mediaUrl:""}},computed:{categoryBackgroundColor(){return{"background-color":this.element.config.categoryBackgroundColor.value}},categoryTitleStyle(){return this.element.config.categoryTitleStyle.value||"h3"},categoryTitleColorStyle(){var t;const e=(t=this.element.config.categoryTitleColor)==null?void 0:t.value;return e?{color:e}:{}},categoryContentClass(){return{"is-on-top":this.categoryTitlePosition==="on-top"}},categoryTitlePosition(){var e;return((e=this.element.config.categoryTitlePosition)==null?void 0:e.value)||"under"},categoryShape(){return`is-${this.element.config.categoryShape.value}`},categoryImageFit(){return`is-${this.element.config.categoryImageFit.value}`},categoryImagePadding(){return{padding:this.element.config.categoryImagePadding.value}},categoryCriteria(){const e=new Shopware.Data.Criteria;return e.addSorting({field:"name",order:"ASC"}),e}},watch:{"element.config.category.value":{handler(e){this.fetchCategoryName()},immediate:!0},cmsPageState:{deep:!0,handler(){this.$forceUpdate()}}},created(){this.initElementConfig("category"),this.fetchCategoryName()},methods:{fetchCategoryName(){const e=this.element.config.category.value;if(!e){this.categoryName="",this.mediaUrl=this.getFallbackImage();return}const t=this.repositoryFactory.create("category"),i=new Shopware.Data.Criteria;i.addAssociation("media"),t.get(e,Shopware.Context.api,i).then(l=>{this.categoryName=l.name,l.media&&l.media.url?this.mediaUrl=l.media.url:this.mediaUrl=this.getFallbackImage()})},getFallbackImage(){return Shopware.Filter.getByName("asset")("administration/static/img/cms/preview_mountain_large.jpg")},initElementConfig(e){this.element.config||(this.element.config={}),this.element.config[e]||(this.element.config[e]={value:null})}}});const Le=`{% block sw_cms_element_category_config %} <mt-colorpicker v-model="categoryBackgroundColor" color-output="hex" label="Category background color" :alpha="true" :z-index="1000" @update:model-value="changeBackgroundColor" /> <sw-entity-single-select v-model:value="element.config.category.value" :criteria="categoryCriteria" entity="category" label="Select a highlighted category" @update:value="changeCategory"> </sw-entity-single-select> <mt-select v-model="element.config.categoryTitleStyle.value" class="sw-cms-el-config-cta-title-type" label="Select a title tag style" @update:model-value="changeCategoryTitleStyle" :options="titleOptions" /> <mt-colorpicker v-model="categoryTitleColor" color-output="hex" label="Category title color" :alpha="true" :z-index="1000" @update:model-value="changeTitleColor" /> <mt-select v-model="element.config.categoryTitlePosition.value" label="Select a title position" @update:model-value="changeCategoryTitlePosition" :options="titlePositionOptions" /> <mt-select v-if="element.config.categoryTitlePosition?.value === 'on-top'" v-model="element.config.categoryTitleHorizontal.value" label="Title horizontal alignment" @update:model-value="changeCategoryTitleHorizontal" :options="titleHorizontalOptions" /> <mt-select v-if="element.config.categoryTitlePosition?.value === 'on-top'" v-model="element.config.categoryTitleVertical.value" label="Title vertical alignment" @update:model-value="changeCategoryTitleVertical" :options="titleVerticalOptions" /> <mt-text-field v-if="element.config.categoryTitlePosition?.value === 'on-top'" v-model="categoryImageInnerPadding" label="Image inner padding" placeholder="16px" @update:model-value="onChangeInnerPadding" /> <mt-select v-model="element.config.categoryShape.value" label="Select a shape option" @update:model-value="changeCategoryShape" :options="categoryShapeOptions" /> <mt-select v-model="element.config.categoryImageFit.value" label="Select an image fit option" @update:model-value="changeCategoryImageFit" :options="imageFitOptions" /> <mt-text-field v-model="categoryImagePadding" label="Image padding" placeholder="0px" @update:model-value="onChangePadding" /> {% endblock %}`,{Service:Ke}=Shopware;Shopware.Component.register("sw-cms-el-config-category",{template:Le,mixins:["cms-element"],inject:["repositoryFactory"],data(){return{titleOptions:[{value:"h1",label:"H1"},{value:"h2",label:"H2"},{value:"h3",label:"H3"},{value:"h4",label:"H4"},{value:"h5",label:"H5"},{value:"h6",label:"H6"},{value:"span",label:"Span"}],titlePositionOptions:[{value:"under",label:"Under image"},{value:"on-top",label:"On top of image"}],titleHorizontalOptions:[{value:"flex-start",label:"Left"},{value:"center",label:"Center"},{value:"flex-end",label:"Right"}],titleVerticalOptions:[{value:"flex-start",label:"Top"},{value:"center",label:"Center"},{value:"flex-end",label:"Bottom"}],categoryShapeOptions:[{value:"circle",label:"Circle"},{value:"square",label:"Square"}],imageFitOptions:[{value:"contain",label:"Contain"},{value:"cover",label:"Cover"}]}},computed:{categoryShape:{get(){var e;return((e=this.element.config.categoryShape)==null?void 0:e.value)||"circle"},set(e){this.element.config.categoryShape.value=e,this.$emit("element-update",this.element)}},category:{get(){return this.element.config.category.value},set(e){this.element.config.category.value=e}},categoryTitleStyle:{get(){var e;return((e=this.element.config.categoryTitleStyle)==null?void 0:e.value)||"h2"},set(e){this.element.config.categoryTitleStyle.value=e,this.$emit("element-update",this.element)}},categoryTitlePosition:{get(){var e;return((e=this.element.config.categoryTitlePosition)==null?void 0:e.value)||"under"},set(e){this.element.config.categoryTitlePosition.value=e,this.$emit("element-update",this.element)}},categoryTitleHorizontal:{get(){var e;return((e=this.element.config.categoryTitleHorizontal)==null?void 0:e.value)||"flex-start"},set(e){this.element.config.categoryTitleHorizontal.value=e,this.$emit("element-update",this.element)}},categoryTitleVertical:{get(){var e;return((e=this.element.config.categoryTitleVertical)==null?void 0:e.value)||"flex-start"},set(e){this.element.config.categoryTitleVertical.value=e,this.$emit("element-update",this.element)}},categoryImageInnerPadding:{get(){return this.element.config.categoryImageInnerPadding.value},set(e){this.element.config.categoryImageInnerPadding.value=e}},categoryImageFit:{get(){var e;return((e=this.element.config.categoryImageFit)==null?void 0:e.value)||"cover"},set(e){this.element.config.categoryImageFit.value=e,this.$emit("element-update",this.element)}},categoryBackgroundColor:{get(){return this.element.config.categoryBackgroundColor.value},set(e){this.element.config.categoryBackgroundColor.value=e}},categoryTitleColor:{get(){return this.element.config.categoryTitleColor.value},set(e){this.element.config.categoryTitleColor.value=e}},categoryImagePadding:{get(){return this.element.config.categoryImagePadding.value},set(e){this.element.config.categoryImagePadding.value=e}}},created(){this.createdComponent()},methods:{createdComponent(){this.initElementConfig("category")},changeBackgroundColor(e){this.element.config.categoryBackgroundColor.value=e,this.$emit("element-update",this.element)},changeTitleColor(e){this.element.config.categoryTitleColor.value=e,this.$emit("element-update",this.element)},changeCategory(e){this.element.config.category.value=e,this.$emit("element-update",this.element)},changeCategoryTitleStyle(e){this.element.config.categoryTitleStyle.value=e,this.$emit("element-update",this.element)},changeCategoryTitlePosition(e){this.element.config.categoryTitlePosition.value=e,this.$emit("element-update",this.element)},changeCategoryTitleHorizontal(e){this.element.config.categoryTitleHorizontal.value=e,this.$emit("element-update",this.element)},changeCategoryTitleVertical(e){this.element.config.categoryTitleVertical.value=e,this.$emit("element-update",this.element)},onChangeInnerPadding(e){this.element.config.categoryImageInnerPadding.value=e,this.$emit("element-update",this.element)},changeCategoryShape(e){this.element.config.categoryShape.value=e,this.$emit("element-update",this.element)},changeCategoryImageFit(e){this.element.config.categoryImageFit.value=e,this.$emit("element-update",this.element)},onChangePadding(e){this.element.config.categoryImagePadding.value=e,this.$emit("element-update",this.element)}}});const ze=`{% block sw_cms_element_category_preview %} <div class="sw-cms-preview-category"> <div class="sw-cms-preview-category-content"> <div class="sw-cms-preview-category-content-image"> <img :src="assetFilter('/administration/administration/static/img/cms/preview_mountain_small.jpg')" alt="" > </div> <h5>Category label</h5> </div> </div> {% endblock %}`;Shopware.Component.register("sw-cms-el-preview-category",{template:ze,computed:{assetFilter(){return Shopware.Filter.getByName("asset")}}});Shopware.Service("cmsService").registerCmsElement({name:"category",label:"sw-cms.elements.category.label",component:"sw-cms-el-category",configComponent:"sw-cms-el-config-category",previewComponent:"sw-cms-el-preview-category",defaultConfig:{categoryBackgroundColor:{source:"static",value:"#cecece"},category:{source:"static",value:null},categoryTitleStyle:{source:"static",value:"h4"},categoryTitleColor:{source:"static",value:"#000"},categoryTitlePosition:{source:"static",value:"under"},categoryTitleHorizontal:{source:"static",value:"flex-start"},categoryTitleVertical:{source:"static",value:"flex-end"},categoryImageInnerPadding:{source:"static",value:"16px"},categoryShape:{source:"static",value:"circle"},categoryImageFit:{source:"static",value:"contain"},categoryImagePadding:{source:"static",value:"0px"}}});const Ee='{% block sw_cms_element_category_slider %} <div class="sw-cms-el-category-slider"> <div class="sw-cms-el-category-slider-intro"> <div v-if="element?.config?.categoryContent?.value" v-html="element.config.categoryContent.value"></div> </div> <div v-if="selectedCategories.length > 0" class="category-slider"> <sw-icon class="sw-cms-el-category-slider-intro-navigation-button" name="regular-chevron-left" size="24" /> <div class="category-slider-list"> <div v-for="(category, index) in selectedCategories.slice(0, 3)" :key="category.name" class="category-slider-item" :class="categoryShape" > <div class="category-slider-item-image" :style="combinedStyles"> <img :src="category.mediaUrl || getFallbackImage()" :alt="category.name" class="category-slider-image" :class="categoryImageFit" /> </div> <div class="category-slider-item-info"> <p class="category-slider-name">{{ category.name }}</p> </div> </div> </div> <sw-icon class="sw-cms-el-category-slider-intro-navigation-button" name="regular-chevron-right" size="24" /> </div> <p v-else class="category-slider-empty">No categories selected</p> </div> {% endblock %}';Shopware.Component.register("sw-cms-el-category-slider",{template:Ee,mixins:["cms-element"],inject:["repositoryFactory"],data(){return{selectedCategories:[],mediaUrl:""}},computed:{combinedStyles(){return{...this.categoryImagePadding,...this.categoryBackgroundColor}},selectedCategoriesForTemplate(){return this.selectedCategories},categoryShape(){var e;return`is-${((e=this.element.config.categoryShape)==null?void 0:e.value)||"circle"}`},categoryImageFit(){var e;return`is-${((e=this.element.config.categoryImageFit)==null?void 0:e.value)||"default"}`},categoryImagePadding(){var t;return{padding:((t=this.element.config.categoryImagePadding)==null?void 0:t.value)||"16px"}},categoryBackgroundColor(){var t;return{"background-color":((t=this.element.config.categoryBackgroundColor)==null?void 0:t.value)||"#cecece"}},categoryContent(){var e,t,i;return((i=(t=(e=this.element)==null?void 0:e.config)==null?void 0:t.categoryContent)==null?void 0:i.value)||"Content placeholder"},categoryCriteria(){const e=new Shopware.Data.Criteria;return e.addSorting({field:"name",order:"ASC"}),e}},watch:{selectedCategoriesForTemplate(e){},"element.config.categories.value":{deep:!0,handler(e){this.fetchCategoryDetails(e)}},cmsPageState:{deep:!0,handler(){this.$forceUpdate()}}},mounted(){var t;this.initElementConfig("category-slider");const e=((t=this.element.config.categories)==null?void 0:t.value)||[];this.fetchCategoryDetails(e)},methods:{async fetchCategoryDetails(e){if(!e||e.length===0){this.selectedCategories=[];return}try{const t=this.repositoryFactory.create("category"),i=new Shopware.Data.Criteria;i.setIds(e),i.addAssociation("media");const l=await t.search(i,Shopware.Context.api);this.selectedCategories=l.map(a=>({name:a.name,mediaUrl:a.media?a.media.url:null}))}catch{this.selectedCategories=[]}},getFallbackImage(){return Shopware.Filter.getByName("asset")("administration/static/img/cms/preview_mountain_large.jpg")},initElementConfig(e){this.element.config||(this.element.config={}),this.element.config.categories||(this.element.config.categories={value:[]}),this.element.config.categoryShape||(this.element.config.categoryShape={value:"circle"}),this.element.config.categoryImageFit||(this.element.config.categoryImageFit={value:"cover"}),this.element.config.categoryImagePadding||(this.element.config.categoryImagePadding={value:"16px"}),this.element.config.categoryBackgroundColor||(this.element.config.categoryBackgroundColor={value:"#cecece"}),this.element.config.categoryContent||(this.element.config.categoryContent={value:"<h2>Content placeholder</h2>"}),this.element.config.categorySliderItemsSm||(this.element.config.categorySliderItemsSm={value:"2"}),this.element.config.categorySliderItemsMd||(this.element.config.categorySliderItemsMd={value:"4"}),this.element.config.categorySliderItemsLg||(this.element.config.categorySliderItemsLg={value:"6"}),this.element.config.categorySliderNav||(this.element.config.categorySliderNav={value:!1}),this.element.config.categorySliderControls||(this.element.config.categorySliderControls={value:!0}),(!this.element.config.categorySliderControlPosition||!this.element.config.categorySliderControlPosition.value||!["top-right","centered","centered-whitespace"].includes(this.element.config.categorySliderControlPosition.value))&&(this.element.config.categorySliderControlPosition={value:"top-right"}),this.element.config.categorySliderControlSpacing||(this.element.config.categorySliderControlSpacing={value:""}),this.element.config.categorySliderAuto||(this.element.config.categorySliderAuto={value:!1}),this.element.config.categorySliderSpeed||(this.element.config.categorySliderSpeed={value:"400"}),this.element.config.categorySliderGutter||(this.element.config.categorySliderGutter={value:"16"}),this.element.config.categorySliderLazy||(this.element.config.categorySliderLazy={value:!0}),this.element.config.categorySliderLoop||(this.element.config.categorySliderLoop={value:!0}),this.element.config.categorySliderDrag||(this.element.config.categorySliderDrag={value:!0}),this.element.config.categorySliderMobileNav||(this.element.config.categorySliderMobileNav={value:!0}),this.element.config.categorySliderMobileControls||(this.element.config.categorySliderMobileControls={value:!0}),this.element.config.categorySliderSlideBy||(this.element.config.categorySliderSlideBy={value:"1"})},async save(){const e=this.element;this.element.config.categories.value||(this.element.config.categories.value=[]),this.element.config.categoryShape.value||(this.element.config.categoryShape.value="circle");try{const t=await axios.patch(`/api/cms-page/${this.element.id}`,e)}catch(t){this.handleSaveError(t)}},changeCategories(e){Array.isArray(e)?this.element.config.categories.value=e:this.element.config.categories.value=[],this.$emit("element-update",this.element)},handleSaveError(e){e.response&&e.response.data?console.error("Error response:",e.response.data):console.error("Save request failed:",e.message)}}});const qe=`{% block sw_cms_element_category_slider_config %} <mt-tabs :items="[ { label: 'Category Settings', name: 'category' }, { label: 'Slider Settings', name: 'slider' } ]" @new-item-active="setActiveItem" /> <sw-container v-if="activeTab === 'category'" class="sw-cms-el-config-category-slider__tab-content" style="margin-top: 2rem;"> <div class="mt-field"> <sw-text-editor v-model="categoryContent" label="Content" placeholder="Enter content" @update:model-value="onChangeContent" /> </div> <sw-multi-select v-model:value="categories" label="Select categories" :options="multiSelectValues" @update:value="changeCategories" :loading="isLoading"> </sw-multi-select> <div v-if="warningMessage" style="color: red; margin-top: -24px; margin-bottom: 24px;"> {{ warningMessage }} </div> <mt-colorpicker v-model="categoryBackgroundColor" color-output="hex" label="Category background color" :alpha="true" zIndex="1000" @update:model-value="changeBackgroundColor" /> <mt-select v-model="element.config.categoryShape.value" label="Select a shape option" @update:model-value="changeCategoryShape" :options="shapeOptions" /> <mt-select v-model="element.config.categoryImageFit.value" label="Select an image fit option" @update:model-value="changeCategoryImageFit" :options="imageFitOptions" /> <sw-text-field v-model="categoryImagePadding" label="Image padding" placeholder="16px" @update:value="onChangePadding"> </sw-text-field> </sw-container> <sw-container v-if="activeTab === 'slider'" class="sw-cms-el-config-category-slider__tab-slider-settings" style="margin-top: 2rem;"> <mt-text-field v-model="categorySliderItemsSm" label="Items on Small Screens (sm)" placeholder="2" @update:model-value="changeCategorySliderItemsSm" /> <mt-text-field v-model="categorySliderItemsMd" label="Items on Medium Screens (md)" placeholder="4" @update:model-value="changeCategorySliderItemsMd" /> <mt-text-field v-model="categorySliderItemsLg" label="Items on Large Screens (lg)" placeholder="6" @update:model-value="changeCategorySliderItemsLg" /> <mt-text-field v-model="categorySliderSpeed" label="Slider Speed" placeholder="Enter speed in ms (e.g., 300)" @update:model-value="changeCategorySliderSpeed" /> <mt-text-field v-model="categorySliderGutter" label="Slider gutter" placeholder="Enter gutter (e.g., 16)" @update:model-value="changeCategorySliderGutter" /> <mt-select v-model="element.config.categorySliderControlPosition.value" label="Controls Position" @update:model-value="changeCategorySliderControlPosition" :options="controlPositionOptions" /> <mt-text-field v-if="categorySliderControlPosition === 'centered-whitespace'" v-model="categorySliderControlSpacing" label="Space between controls and slider" placeholder="Enter space in px (e.g., 50)" @update:model-value="changeCategorySliderControlSpacing" /> <mt-text-field v-model="categorySliderSlideBy" label="Slide By" placeholder="Enter a positive number or page" :help-text="'Set how many items to slide at once. Use a positive number (e.g., 2) or page to slide by the number of visible items.'" @update:model-value="changeCategorySliderSlideBy" /> <div class="mt-field"> <mt-checkbox :model-value="categorySliderNav" label="Show navigation" @change="changeCategorySliderNav" /> </div> <div class="mt-field"> <mt-checkbox :model-value="categorySliderControls" label="Show controls" @change="changeCategorySliderControls" /> </div> <div class="mt-field"> <mt-checkbox :model-value="categorySliderAuto" label="Enable autoplay" @change="changeCategorySliderAuto" /> </div> <div class="mt-field"> <mt-checkbox :model-value="categorySliderLazy" label="Enable lazy loading" @change="changeCategorySliderLazy" /> </div> <div class="mt-field"> <mt-checkbox :model-value="categorySliderLoop" label="Enable loop" @change="changeCategorySliderLoop" /> </div> <div class="mt-field"> <mt-checkbox :model-value="categorySliderDrag" label="Enable mouse drag" @change="changeCategorySliderDrag" /> </div> <h3 style="margin-top: 20px;">Responsive Settings</h3> <div class="mt-field"> <mt-checkbox :model-value="categorySliderMobileNav" label="Mobile Navigation" @change="changeCategorySliderMobileNav" /> </div> <div class="mt-field"> <mt-checkbox :model-value="categorySliderMobileControls" label="Mobile Controls" @change="changeCategorySliderMobileControls" /> </div> </sw-container> {% endblock %}`,{Service:Ae}=Shopware;Shopware.Component.register("sw-cms-el-config-category-slider",{template:qe,mixins:["cms-element"],inject:["repositoryFactory"],data(){return{multiSelectValues:[],isLoading:!1,activeTab:"category",warningMessage:"",shapeOptions:[{value:"circle",label:"Circle"},{value:"square",label:"Square"}],imageFitOptions:[{value:"cover",label:"Cover"},{value:"contain",label:"Contain"}],controlPositionOptions:[{value:"top-right",label:"Top (Right Side)"},{value:"centered",label:"Centered"},{value:"centered-whitespace",label:"Centered with Space"}]}},computed:{categoryContent:{get(){return this.element.config.categoryContent.value},set(e){this.element.config.categoryContent.value=e}},categoryBackgroundColor:{get(){return this.element.config.categoryBackgroundColor.value},set(e){this.element.config.categoryBackgroundColor.value=e}},categoryShape:{get(){var e;return((e=this.element.config.categoryShape)==null?void 0:e.value)||"circle"},set(e){this.element.config.categoryShape.value=e,this.$emit("element-update",this.element)}},categories:{get(){return this.element.config.categories.value},set(e){this.element.config.categories.value=e}},categoryImageFit:{get(){var e;return((e=this.element.config.categoryImageFit)==null?void 0:e.value)||"cover"},set(e){this.element.config.categoryImageFit.value=e,this.$emit("element-update",this.element)}},categoryImagePadding:{get(){return this.element.config.categoryImagePadding.value},set(e){this.element.config.categoryImagePadding.value=e}},categorySliderItemsSm:{get(){return this.element.config.categorySliderItemsSm.value},set(e){this.element.config.categorySliderItemsSm.value=e}},categorySliderItemsMd:{get(){return this.element.config.categorySliderItemsMd.value},set(e){this.element.config.categorySliderItemsMd.value=e}},categorySliderItemsLg:{get(){return this.element.config.categorySliderItemsLg.value},set(e){this.element.config.categorySliderItemsLg.value=e}},categorySliderSpeed:{get(){return this.element.config.categorySliderSpeed.value},set(e){this.element.config.categorySliderSpeed.value=e}},categorySliderGutter:{get(){return this.element.config.categorySliderGutter.value},set(e){this.element.config.categorySliderGutter.value=e}},categorySliderSlideBy:{get(){return this.element.config.categorySliderSlideBy.value},set(e){this.element.config.categorySliderSlideBy.value=e}},categorySliderNav:{get(){return this.element.config.categorySliderNav.value},set(e){this.element.config.categorySliderNav.value=e}},categorySliderControls:{get(){return this.element.config.categorySliderControls.value},set(e){this.element.config.categorySliderControls.value=e}},categorySliderControlPosition:{get(){var e;return((e=this.element.config.categorySliderControlPosition)==null?void 0:e.value)||"centered"},set(e){this.element.config.categorySliderControlPosition.value=e,this.$emit("element-update",this.element)}},categorySliderControlSpacing:{get(){return this.element.config.categorySliderControlSpacing.value},set(e){this.element.config.categorySliderControlSpacing.value=e}},categorySliderAuto:{get(){return this.element.config.categorySliderAuto.value},set(e){this.element.config.categorySliderAuto.value=e}},categorySliderLazy:{get(){return this.element.config.categorySliderLazy.value},set(e){this.element.config.categorySliderLazy.value=e}},categorySliderLoop:{get(){return this.element.config.categorySliderLoop.value},set(e){this.element.config.categorySliderLoop.value=e}},categorySliderDrag:{get(){return this.element.config.categorySliderDrag.value},set(e){this.element.config.categorySliderDrag.value=e}},categorySliderMobileNav:{get(){return this.element.config.categorySliderMobileNav.value},set(e){this.element.config.categorySliderMobileNav.value=e}},categorySliderMobileControls:{get(){return this.element.config.categorySliderMobileControls.value},set(e){this.element.config.categorySliderMobileControls.value=e}}},created(){this.createdComponent(),this.loadCategories(),Array.isArray(this.element.config.categories.value)||(this.element.config.categories.value=[])},methods:{createdComponent(){this.initElementConfig("category-slider")},setActiveItem(e){this.activeTab=e},changeBackgroundColor(e){this.element.config.categoryBackgroundColor.value=e,this.$emit("element-update",this.element)},onChangeContent(e){this.element.config.categoryContent.value=e,this.$emit("element-update",this.element)},changeCategories(e){console.log("changeCategories called with:",e),Array.isArray(e)?this.element.config.categories.value=e:this.element.config.categories.value=[],this.element.config.categories.value.length===0?this.warningMessage="At least one category must be selected.":this.warningMessage="",this.$emit("element-update",this.element)},changeCategoryShape(e){this.element.config.categoryShape.value=e,this.$emit("element-update",this.element)},changeCategoryImageFit(e){this.element.config.categoryImageFit.value=e,this.$emit("element-update",this.element)},onChangePadding(e){this.element.config.categoryImagePadding.value=e,this.$emit("element-update",this.element)},changeCategorySliderItemsSm(e){this.element.config.categorySliderItemsSm||(this.element.config.categorySliderItemsSm={value:""}),this.element.config.categorySliderItemsSm.value=e,this.$emit("element-update",this.element)},changeCategorySliderItemsMd(e){this.element.config.categorySliderItemsMd||(this.element.config.categorySliderItemsMd={value:""}),this.element.config.categorySliderItemsMd.value=e,this.$emit("element-update",this.element)},changeCategorySliderItemsLg(e){this.element.config.categorySliderItemsLg||(this.element.config.categorySliderItemsLg={value:""}),this.element.config.categorySliderItemsLg.value=e,this.$emit("element-update",this.element)},changeCategorySliderSpeed(e){this.element.config.categorySliderSpeed.value=e,this.$emit("element-update",this.element)},changeCategorySliderGutter(e){this.element.config.categorySliderGutter.value=e,this.$emit("element-update",this.element)},changeCategorySliderSlideBy(e){this.element.config.categorySliderSlideBy.value=e,this.$emit("element-update",this.element)},changeCategorySliderNav(e){this.element.config.categorySliderNav.value=e,this.$emit("element-update",this.element)},changeCategorySliderControls(e){this.element.config.categorySliderControls.value=e,this.$emit("element-update",this.element)},changeCategorySliderControlPosition(e){this.element.config.categorySliderControlPosition.value=e,this.$emit("element-update",this.element)},changeCategorySliderControlSpacing(e){this.element.config.categorySliderControlSpacing.value=e,this.$emit("element-update",this.element)},changeCategorySliderAuto(e){this.element.config.categorySliderAuto.value=e,this.$emit("element-update",this.element)},changeCategorySliderLazy(e){this.element.config.categorySliderLazy.value=e,this.$emit("element-update",this.element)},changeCategorySliderLoop(e){this.element.config.categorySliderLoop.value=e,this.$emit("element-update",this.element)},changeCategorySliderDrag(e){this.element.config.categorySliderDrag.value=e,this.$emit("element-update",this.element)},changeCategorySliderMobileNav(e){this.element.config.categorySliderMobileNav.value=e,this.$emit("element-update",this.element)},changeCategorySliderMobileControls(e){this.element.config.categorySliderMobileControls.value=e,this.$emit("element-update",this.element)},async loadCategories(){this.isLoading=!0;try{const e=Ae("repositoryFactory").create("category"),t=new Shopware.Data.Criteria,i=await e.search(t,Shopware.Context.api);this.multiSelectValues=i.map(l=>({label:l.name,value:l.id}))}catch{this.multiSelectValues=[]}finally{this.isLoading=!1}}}});const De=`{% block sw_cms_element_category_slider_preview %} <div class="sw-cms-preview-category-slider"> <div class="sw-cms-preview-category-slider-content"> <div class="sw-cms-preview-category-slider-content-top"> <sw-icon name="regular-chevron-left" size="10" /> <div class="sw-cms-preview-category-slider-content-image"> <img :src="assetFilter('/administration/administration/static/img/cms/preview_mountain_small.jpg')" alt="" > </div> <sw-icon name="regular-chevron-right" size="10" /> </div> <h5>Slider label</h5> </div> </div> {% endblock %}`;Shopware.Component.register("sw-cms-el-preview-category-slider",{template:De,computed:{assetFilter(){return Shopware.Filter.getByName("asset")}}});Shopware.Service("cmsService").registerCmsElement({name:"category-slider",label:"sw-cms.elements.category-slider.label",component:"sw-cms-el-category-slider",configComponent:"sw-cms-el-config-category-slider",previewComponent:"sw-cms-el-preview-category-slider",defaultConfig:{categoryContent:{source:"static",value:"Content placeholder"},categories:{source:"static",value:null},categoryShape:{source:"static",value:"circle"},categoryImageFit:{source:"static",value:"contain"},categoryImagePadding:{source:"static",value:"16px"},categoryBackgroundColor:{source:"static",value:"#cecece"},categorySliderItemsSm:{source:"static",value:"2"},categorySliderItemsMd:{source:"static",value:"4"},categorySliderItemsLg:{source:"static",value:"6"},categorySliderNav:{source:"static",value:null},categorySliderControls:{source:"static",value:!0},categorySliderControlPosition:{source:"static",value:"centered"},categorySliderControlSpacing:{source:"static",value:""},categorySliderAuto:{source:"static",value:null},categorySliderSpeed:{source:"static",value:"400"},categorySliderGutter:{source:"static",value:"16"},categorySliderLazy:{source:"static",value:!0},categorySliderLoop:{source:"static",value:!0},categorySliderDrag:{source:"static",value:!0},categorySliderMobileNav:{source:"static",value:!0},categorySliderMobileControls:{source:"static",value:!0},categorySliderSlideBy:{source:"static",value:"1"}}});const Oe='{% block sw_cms_element_category_highlight %} <div class="sw-cms-el-category-highlight" :style="categoryHighlightBackgroundColor"> <div class="sw-cms-el-category-highlight-content"> <h3 :style="categoryTitleStyles">{{ element.config.categoryTitle.value }}</h3> <hr> <div class="sw-cms-el-category-placeholder-listing"> <div :style="categoryLinkColor" class="sw-cms-el-category-highlight__placeholder">Placeholder</div> <div :style="categoryLinkColor" class="sw-cms-el-category-highlight__placeholder--subcategory">Placeholder</div> <div :style="categoryLinkColor" class="sw-cms-el-category-highlight__placeholder--subcategory">Placeholder</div> <div :style="categoryLinkColor" class="sw-cms-el-category-highlight__placeholder--subcategory">Placeholder</div> <div :style="categoryLinkColor" class="sw-cms-el-category-highlight__placeholder--subcategory">Placeholder</div> <hr> <div :style="highlight1Color" class="sw-cms-el-category-highlight__placeholder">Highlight 1</div> <hr> <div :style="highlight2Color" class="sw-cms-el-category-highlight__placeholder">Highlight 2</div> <hr> <div :style="highlight3Color" class="sw-cms-el-category-highlight__placeholder">Highlight 3</div> </div> </div> </div> {% endblock %}';Shopware.Component.register("sw-cms-el-category-highlight",{template:Oe,mixins:["cms-element"],computed:{categoryTitle(){return`${this.element.config.categoryTitle.value}`},categoryTitleSize(){return{"font-size":this.element.config.categoryTitleSize.value}},categoryTitleColor(){return{color:this.element.config.categoryTitleColor.value}},categoryTitleStyles(){return{...this.categoryTitleSize,...this.categoryTitleColor}},categoryLinkColor(){return{color:this.element.config.categoryLinkColor.value}},highlight1Color(){return{color:this.element.config.highlight1Color.value}},highlight2Color(){return{color:this.element.config.highlight2Color.value}},highlight3Color(){return{color:this.element.config.highlight3Color.value}},categoryCriteria(){const e=new Shopware.Data.Criteria;return e.addSorting({field:"name",order:"ASC"}),e}},watch:{cmsPageState:{deep:!0,handler(){this.$forceUpdate()}}},created(){this.createdComponent()},methods:{createdComponent(){this.initElementConfig("category-highlight"),this.initElementData("category-highlight")}}});const Ne='{% block sw_cms_element_category_highlight_config %} <mt-text-field v-model="categoryTitle" label="Title placeholder" placeholder="Enter a title" @update:model-value="changeTitle" /> <mt-text-field v-model="categoryTitleSize" label="Title font size" placeholder="1.875rem" @update:model-value="changeTitleSize" /> <mt-colorpicker v-model="categoryTitleColor" color-output="hex" label="Title color" :alpha="true" :z-index="1000" @update:model-value="changeTitleColor" /> <sw-entity-single-select v-model:value="categoryMain" :criteria="categoryCriteria" entity="category" label="Select a main category for the tree"> </sw-entity-single-select> <mt-colorpicker v-model="categoryLinkColor" color-output="hex" label="Link color" :alpha="true" :z-index="1000" @update:model-value="changeLinkColor" /> <sw-entity-single-select v-model:value="element.config.categoryHighlight1.value" :criteria="categoryCriteria" entity="category" label="Select a highlighted category" @update:value="changeCategoryHighlight1"> </sw-entity-single-select> <mt-colorpicker v-model="highlight1Color" color-output="hex" label="Highlight 1 color" :alpha="true" :z-index="1000" @update:model-value="changeHighlight1Color" /> <sw-entity-single-select v-model:value="element.config.categoryHighlight2.value" :criteria="categoryCriteria" entity="category" label="Select a highlighted category" @update:value="changeCategoryHighlight2"> </sw-entity-single-select> <mt-colorpicker v-model="highlight2Color" color-output="hex" label="Highlight 2 color" :alpha="true" :z-index="1000" @update:model-value="changeHighlight2Color" /> <sw-entity-single-select v-model:value="element.config.categoryHighlight3.value" :criteria="categoryCriteria" entity="category" label="Select a highlighted category" @update:value="changeCategoryHighlight3"> </sw-entity-single-select> <mt-colorpicker v-model="highlight3Color" color-output="hex" label="Highlight 3 color" :alpha="true" :z-index="1000" @update:model-value="changeHighlight3Color" /> {% endblock %}';Shopware.Component.register("sw-cms-el-config-category-highlight",{template:Ne,mixins:["cms-element"],inject:["repositoryFactory"],computed:{categoryTitle:{get(){return this.element.config.categoryTitle.value},set(e){this.element.config.categoryTitle.value=e}},categoryTitleSize:{get(){return this.element.config.categoryTitleSize.value},set(e){this.element.config.categoryTitleSize.value=e}},categoryTitleColor:{get(){return this.element.config.categoryTitleColor.value},set(e){this.element.config.categoryTitleColor.value=e}},categoryMain:{get(){return this.element.config.categoryMain.value},set(e){this.element.config.categoryMain.value=e}},categoryLinkColor:{get(){return this.element.config.categoryLinkColor.value},set(e){this.element.config.categoryLinkColor.value=e}},categoryHighlight1:{get(){return this.element.config.categoryHighlight1.value},set(e){this.element.config.categoryHighlight1.value=e}},highlight1Color:{get(){return this.element.config.highlight1Color.value},set(e){this.element.config.highlight1Color.value=e}},categoryHighlight2:{get(){return this.element.config.categoryHighlight2.value},set(e){this.element.config.categoryHighlight2.value=e}},highlight2Color:{get(){return this.element.config.highlight2Color.value},set(e){this.element.config.highlight2Color.value=e}},categoryHighlight3:{get(){return this.element.config.categoryHighlight3.value},set(e){this.element.config.categoryHighlight3.value=e}},highlight3Color:{get(){return this.element.config.highlight3Color.value},set(e){this.element.config.highlight3Color.value=e}}},created(){this.createdComponent()},methods:{createdComponent(){this.initElementConfig("category-highlight")},changeTitle(e){this.element.config.categoryTitle.value=e,this.$emit("element-update",this.element)},changeTitleSize(e){this.element.config.categoryTitleSize.value=e,this.$emit("element-update",this.element)},changeTitleColor(e){this.element.config.categoryTitleColor.value=e,this.$emit("element-update",this.element)},changeCategoryMain(e){console.log("Selected category:",e),this.element.config.categoryMain.value=e,console.log("After setting:",this.element.config.categoryMain.value),this.$emit("element-update",this.element)},changeLinkColor(e){this.element.config.categoryLinkColor.value=e,this.$emit("element-update",this.element)},changeCategoryHighlight1(e){this.element.config.categoryHighlight1.value=e,this.$emit("element-update",this.element)},changeHighlight1Color(e){this.element.config.highlight1Color.value=e,this.$emit("element-update",this.element)},changeCategoryHighlight2(e){this.element.config.categoryHighlight2.value=e,this.$emit("element-update",this.element)},changeHighlight2Color(e){this.element.config.highlight2Color.value=e,this.$emit("element-update",this.element)},changeCategoryHighlight3(e){this.element.config.categoryHighlight3.value=e,this.$emit("element-update",this.element)},changeHighlight3Color(e){this.element.config.highlight3Color.value=e,this.$emit("element-update",this.element)}},watch:{"element.config.categoryMain.value"(e){console.log("Watcher triggered for categoryMain. New value:",e)}}});const Ue='{% block sw_cms_element_category_highlight_preview %} <div class="sw-cms-el-preview-category-highlight"> <div class="sw-cms-el-preview-category-navigation"> <p>Category Highlight</p> <hr> <div class="sw-cms-el-category-placeholder-listing"> <div class="sw-cms-el-category-navigation__placeholder"></div> <hr> <div class="sw-cms-el-category-navigation__placeholder"></div> <div class="sw-cms-el-category-navigation__placeholder--subcategory"></div> <div class="sw-cms-el-category-navigation__placeholder--subcategory"></div> </div> </div> </div> {% endblock %}';Shopware.Component.register("sw-cms-el-preview-category-highlight",{template:Ue,computed:{assetFilter(){return Shopware.Filter.getByName("asset")}}});Shopware.Service("cmsService").registerCmsElement({name:"category-highlight",label:"Category Highlight",component:"sw-cms-el-category-highlight",configComponent:"sw-cms-el-config-category-highlight",previewComponent:"sw-cms-el-preview-category-highlight",defaultConfig:{categoryTitle:{source:"static",value:"Title placeholder"},categoryTitleSize:{source:"static",value:"1.875rem"},categoryTitleColor:{source:"static",value:"#000"},categoryMain:{source:"static",value:null},categoryLinkColor:{source:"static",value:"#000"},categoryHighlight1:{source:"static",value:null},highlight1Color:{source:"static",value:"#ff5000"},categoryHighlight2:{source:"static",value:null},highlight2Color:{source:"static",value:"#ff5000"},categoryHighlight3:{source:"static",value:null},highlight3Color:{source:"static",value:"#ff5000"}}});const Ve=`{% block sw_cms_el_comaxx_image_slider %} <div class="comaxx-image-slider-wrapper" style="position: relative; display: flex; align-items: center;"> <mt-icon class="sw-cms-el-image-slider__navigation-button left" name="regular-chevron-left" size="24" @click="setSliderArrowItem(-1)" /> <div class="comaxx-image-slider" :style="'min-height: ' + (element.config.minHeight.value || '300px')"> <div v-for="(item, index) in sliderItems.slice(0, 4)" :key="index" class="comaxx-image-slider__slide" role="img" :aria-label="item.alt || ''" :aria-hidden="!item.alt" :style="getBackgroundStyle(item)"> </div> </div> <mt-icon class="sw-cms-el-image-slider__navigation-button right" name="regular-chevron-right" size="24" @click="setSliderArrowItem(1)" /> </div> {% endblock %}`,{Component:Re,Mixin:je}=Shopware;Re.register("sw-cms-el-comaxx-image-slider",{template:Ve,mixins:[je.getByName("cms-element")],data(){return{sliderItems:[]}},watch:{"element.config.sliderItems.value":{handler(){this.enrichSliderItems()},immediate:!0,deep:!0}},methods:{enrichSliderItems(){var i;const t=(((i=this.element.config.sliderItems)==null?void 0:i.value)||[]).map(l=>{var s,n;const a=((s=l.media)==null?void 0:s.url)||l.mediaUrl||null,o=((n=l.media)==null?void 0:n.alt)||l.alt||"";return{mediaUrl:a,alt:o}});this.sliderItems=t},getBackgroundStyle(e){var i,l;const t=e.mediaUrl||"";return{backgroundImage:t?`url('${encodeURI(t)}')`:"none",backgroundSize:((i=this.element.config.displayMode)==null?void 0:i.value)||"cover",backgroundPosition:((l=this.element.config.verticalAlign)==null?void 0:l.value)||"center",width:"100%",height:"auto",backgroundColor:t?"transparent":"#eee"}}}});const Qe=`<div class="sw-cms-el-config-image-slider"> <sw-tabs position-identifier="sw-cms-element-config-image-slider" class="sw-cms-el-config-image-slider__tabs" default-item="content" > <template #default="{ active }"> <sw-tabs-item :title="$t('sw-cms.elements.general.config.tab.content')" name="content" :active-tab="active" > {{ $t('sw-cms.elements.general.config.tab.content') }} </sw-tabs-item> <sw-tabs-item :title="$t('sw-cms.elements.general.config.tab.settings')" name="settings" :active-tab="active" > {{ $t('sw-cms.elements.general.config.tab.settings') }} </sw-tabs-item> </template> <template #content="{ active }" > <sw-container v-if="active === 'content'" class="sw-cms-el-config-image-slider__tab-content" > <sw-media-list-selection-v2 :entity-media-items="mediaItems" :entity="entity" :upload-tag="uploadTag" :default-folder-name="defaultFolderName" @upload-finish="onImageUpload" @item-remove="onItemRemove" @open-sidebar="onOpenMediaModal" @item-sort="onItemSort" /> <sw-media-modal-v2 v-if="mediaModalIsOpen" variant="full" :caption="$t('sw-cms.elements.general.config.caption.mediaUpload')" :entity-context="cmsPageState.entityName" :initial-folder-id="cmsPageState.defaultMediaFolderId" @media-upload-remove-image="onItemRemove" @media-modal-selection-change="onMediaSelectionChange" @modal-close="onCloseMediaModal" /> </sw-container> <sw-container v-if="active === 'settings'" class="sw-cms-el-config-image-slider__tab-settings" > <div class="sw-cms-el-config-image-slider__settings-options"> <div class="sw-cms-el-config-image-slider__setting-option"> <mt-select v-model="element.config.displayMode.value" class="sw-cms-el-config-image-slider__setting-display-mode" :label="$t('sw-cms.elements.general.config.label.displayMode')" :help-text="$t('sw-cms.elements.imageSlider.config.helpText.displayMode')" :options="displayModeValueOptions" @update:model-value="onChangeDisplayMode" /> <mt-text-field v-model="element.config.minHeight.value" :label="$t('sw-cms.elements.image.config.label.minHeight')" :placeholder="$t('sw-cms.elements.image.config.label.minHeight')" :help-text="$t('sw-cms.elements.image.config.label.minHeightHelpText')" :disabled="element.config.displayMode.value !== 'cover'" @update:model-value="onChangeMinHeight" /> <mt-select v-model="element.config.verticalAlign.value" :label="$t('sw-cms.elements.general.config.label.verticalAlign')" :placeholder="$t('sw-cms.elements.general.config.label.verticalAlign')" :disabled="element.config.displayMode.value === 'cover'" :options="verticalAlignValueOptions" /> </div> <div class="sw-cms-el-config-image-slider__setting-navigations sw-cms-el-config-image-slider__setting-option"> <div class="sw-cms-el-config-image-slider__settings-navigation"> <mt-select v-model="element.config.navigationArrows.value" :label="$t('sw-cms.elements.imageSlider.config.label.navigationArrows')" :options="navigationArrowsValueOptions" @update:model-value="emitUpdateEl" /> </div> <div class="sw-cms-el-config-image-slider__settings-navigation"> <mt-select v-model="element.config.navigationDots.value" :label="$t('sw-cms.elements.imageSlider.config.label.navigationDots')" :options="navigationDotsValueOptions" @update:model-value="emitUpdateEl" /> </div> <div class="sw-cms-el-config-image-slider__settings-navigation"> <mt-number-field v-model="element.config.itemsSm.value" number-type="int" :min="0" :max="10" :label="'Amount of slides on Mobile'" :placeholder="2" :help-text="'Maximum number of slides on mobile devices'" /> </div> <div class="sw-cms-el-config-image-slider__settings-navigation"> <mt-number-field v-model="element.config.itemsMd.value" number-type="int" :min="0" :max="10" :label="'Amount of slides on Tablet'" :placeholder="4" :help-text="'Maximum number of slides on tablets'" /> </div> <div class="sw-cms-el-config-image-slider__settings-navigation"> <mt-number-field v-model="element.config.itemsLg.value" number-type="int" :min="0" :max="10" :label="'Amount of slides on Desktop'" :placeholder="8" :help-text="'Maximum number of slides on desktop screens'" /> </div> <div class="sw-cms-el-config-image-slider__settings-navigation"> <mt-switch v-model="element.config.categorySliderLazy.value" class="sw-cms-el-config-image-slider__setting-category-slider-lazy" label="Enable lazy loading" bordered @update:model-value="onChangeCategorySliderLazy" /> </div> <div class="sw-cms-el-config-image-slider__settings-navigation"> <mt-switch v-model="element.config.categorySliderLoop.value" class="sw-cms-el-config-image-slider__setting-category-slider-loop" label="Enable loop" bordered @update:model-value="onChangeCategorySliderLoop" /> </div> <div class="sw-cms-el-config-image-slider__settings-navigation"> <mt-switch v-model="element.config.categorySliderDrag.value" class="sw-cms-el-config-image-slider__setting-category-slider-drag" label="Enable mouse drag" bordered @update:model-value="onChangeCategorySliderDrag" /> </div> <div class="sw-cms-el-config-image-slider__settings-navigation"> <mt-number-field v-model="element.config.gutter.value" number-type="int" :min="0" :max="999" :label="'Space between slides (Gutter)'" :placeholder="32" /> </div> </div> <div class="sw-cms-el-config-image-slider__setting-speed"> <mt-number-field v-model="element.config.speed.value" class="sw-cms-el-config-image-slider__setting-speed-slide" number-type="int" :min="0" :max="3600000" :label="$t('sw-cms.elements.general.config.label.speed')" :placeholder="$t('sw-cms.elements.general.config.label.speed')" :help-text="$t('sw-cms.elements.general.config.helpText.speed')" /> </div> <mt-banner class="sw-cms-el-config-image-slider__setting-auto-slide" variant="attention" :title="$t('sw-cms.elements.general.config.infoText.autoSlideTitle')" > <p class="sw-cms-el-config-image-slider__setting-auto-slide-attention"> {{ $t('sw-cms.elements.general.config.infoText.autoSlide') }} </p> <div class="sw-cms-el-config-image-slider__setting-auto-slide-container sw-cms-el-config-image-slider__setting-option"> <div class="sw-cms-el-config-image-slider__setting-auto-slide-switch"> <mt-switch v-model="element.config.autoSlide.value" class="sw-cms-el-config-image-slider__setting-auto-slide" :label="$t('sw-cms.elements.general.config.label.autoSlide')" bordered @update:model-value="onChangeAutoSlide" /> </div> <div class="sw-cms-el-config-image-slider__setting-auto-slide-delay"> <mt-number-field v-model="element.config.autoplayTimeout.value" class="sw-cms-el-config-image-slider__setting-delay-slide" number-type="int" :min="0" :max="3600000" :label="$t('sw-cms.elements.general.config.label.autoplayTimeout')" :placeholder="$t('sw-cms.elements.general.config.label.autoplayTimeout')" :help-text="$t('sw-cms.elements.general.config.helpText.autoplayTimeout')" /> </div> </div> </mt-banner> <div class="sw-cms-el-config-image-slider__settings-links sw-cms-el-config-image-slider__setting-option"> <div v-for="(sliderItem, index) in items" :key="index" class="sw-cms-el-config-image-slider__settings-link" > <sw-container :key="sliderItem.mediaId" class="sw-cms-el-config-image-slider__settings-link-container" > <img v-if="sliderItem.mediaUrl" class="sw-cms-el-config-image-slider__settings-link-prefix" :src="sliderItem.mediaUrl" alt="" > <mt-url-field v-model="sliderItem.url" class="sw-cms-el-config-image-slider__settings-link-input" :name="sliderItem.mediaUrl" :label="$t('sw-cms.elements.image.config.label.linkTo')" :placeholder="$t('sw-cms.elements.image.config.placeholder.enterUrl')" /> </sw-container> <mt-switch v-model="sliderItem.newTab" class="sw-cms-el-config-image-slider__settings-link-tab" :name="sliderItem.mediaId" :label="$t('sw-cms.elements.image.config.label.linkNewTab')" bordered /> </div> </div> <mt-switch class="sw-cms-el-config-image-slider__settings-is-decorative" :model-value="element.config.isDecorative.value" :label="$t('sw-cms.elements.image.config.label.isDecorative')" :help-text="$t('sw-cms.elements.image.config.label.isDecorativeHelpText')" bordered @update:model-value="onChangeIsDecorative" /> </div> </sw-container> </template> </sw-tabs> </div>`,{Mixin:We}=Shopware,{moveItem:m,object:{cloneDeep:Ge}}=Shopware.Utils,Ye=Shopware.Data.Criteria;Shopware.Component.register("sw-cms-el-config-comaxx-image-slider",{template:Qe,inject:["repositoryFactory"],mixins:[We.getByName("cms-element")],emits:["element-update"],data(){return{mediaModalIsOpen:!1,initialFolderId:null,entity:this.element,mediaItems:[],showSlideConfig:!1}},computed:{uploadTag(){return`cms-element-media-config-${this.element.id}`},mediaRepository(){return this.repositoryFactory.create("media")},defaultFolderName(){return this.cmsPageState.pageEntityName},items(){var e,t;return((t=(e=this.element.config)==null?void 0:e.sliderItems)==null?void 0:t.value)||[]},speedDefault(){return this.cmsService.getCmsElementConfigByName("comaxx-image-slider").defaultConfig.speed.value},autoplayTimeoutDefault(){return this.cmsService.getCmsElementConfigByName("comaxx-image-slider").defaultConfig.autoplayTimeout.value},displayModeValueOptions(){return[{value:"standard",label:this.$tc("sw-cms.elements.general.config.label.displayModeStandard")},{value:"contain",label:this.$tc("sw-cms.elements.general.config.label.displayModeContain")},{value:"cover",label:this.$tc("sw-cms.elements.general.config.label.displayModeCover")}]},verticalAlignValueOptions(){return[{value:"flex-start",label:this.$tc("sw-cms.elements.general.config.label.verticalAlignTop")},{value:"center",label:this.$tc("sw-cms.elements.general.config.label.verticalAlignCenter")},{value:"flex-end",label:this.$tc("sw-cms.elements.general.config.label.verticalAlignBottom")}]},navigationArrowsValueOptions(){return[{value:"none",label:this.$tc("sw-cms.elements.imageSlider.config.label.navigationPositionNone")},{value:"top-right",label:"Top right"},{value:"inside",label:this.$tc("sw-cms.elements.imageSlider.config.label.navigationPositionInside")},{value:"outside",label:this.$tc("sw-cms.elements.imageSlider.config.label.navigationPositionOutside")}]},navigationDotsValueOptions(){return[{value:"none",label:this.$tc("sw-cms.elements.imageSlider.config.label.navigationPositionNone")},{value:"inside",label:this.$tc("sw-cms.elements.imageSlider.config.label.navigationPositionInside")},{value:"outside",label:this.$tc("sw-cms.elements.imageSlider.config.label.navigationPositionOutside")}]},itemsSm(){var e,t;return((t=(e=this.element.config)==null?void 0:e.itemsSm)==null?void 0:t.value)??1},itemsMd(){var e,t;return((t=(e=this.element.config)==null?void 0:e.itemsMd)==null?void 0:t.value)??2},itemsLg(){var e,t;return((t=(e=this.element.config)==null?void 0:e.itemsLg)==null?void 0:t.value)??3},gutter(){var e,t;return((t=(e=this.element.config)==null?void 0:e.gutter)==null?void 0:t.value)??3}},created(){this.createdComponent()},methods:{async createdComponent(){var e;if(this.initElementConfig("comaxx-image-slider"),(e=this.element.config.autoSlide)!=null&&e.value&&(this.showSlideConfig=!0),this.element.config.sliderItems.source!=="default"&&this.element.config.sliderItems.value.length>0){const t=this.element.config.sliderItems.value.map(a=>a.mediaId),i=new Ye(1,25);i.setIds(t);const l=await this.mediaRepository.search(i);this.mediaItems=t.map(a=>l.get(a)).filter(a=>a!==null),this.element.config.sliderItems.value.forEach((a,o)=>{l.get(a.mediaId)===null&&this.onItemRemove({id:a.mediaId},o)})}},onImageUpload(e){const t=this.element.config.sliderItems;t.source==="default"&&(t.value=[],t.source="static"),this.mediaItems.find(l=>l.id===e.id)&&(this.mediaItems=this.mediaItems.filter(l=>l.id!==e.id),t.value=t.value.filter(l=>l.mediaId!==e.id)),t.value.push({mediaUrl:e.url,mediaId:e.id,url:null,newTab:!1}),this.mediaItems.push(e),this.updateMediaDataValue(),this.emitUpdateEl()},onItemRemove(e,t){const i=e.id;this.element.config.sliderItems.value=this.element.config.sliderItems.value.filter((l,a)=>l.mediaId!==i||a!==t),this.mediaItems=this.mediaItems.filter((l,a)=>l.id!==i||a!==t),this.updateMediaDataValue(),this.emitUpdateEl()},onCloseMediaModal(){this.mediaModalIsOpen=!1},onMediaSelectionChange(e){const t=this.element.config.sliderItems;t.source==="default"&&(t.value=[],t.source="static"),e.forEach(i=>{t.value.push({mediaUrl:i.url,mediaId:i.id,url:null,newTab:!1})}),this.mediaItems.push(...e),this.updateMediaDataValue(),this.emitUpdateEl()},onItemSort(e,t){m(this.mediaItems,e.position,t.position),m(this.element.config.sliderItems.value,e.position,t.position),this.updateMediaDataValue(),this.emitUpdateEl()},updateMediaDataValue(){const e=Ge(this.element.config.sliderItems.value);if(e.forEach(t=>{const i=this.mediaItems.find(l=>l.id===t.mediaId);i&&(t.media=i)}),!this.element.data){this.element.data={sliderItems:e};return}this.element.data.sliderItems=e},onOpenMediaModal(){this.mediaModalIsOpen=!0},onChangeMinHeight(e){this.element.config.minHeight.value=e??"",this.$emit("element-update",this.element)},onChangeAutoSlide(e){this.showSlideConfig=e,e||(this.element.config.autoplayTimeout.value=this.autoplayTimeoutDefault,this.element.config.speed.value=this.speedDefault)},onChangeDisplayMode(e){e==="cover"&&(this.element.config.verticalAlign.value=null),this.$emit("element-update",this.element)},onChangeIsDecorative(e){this.element.config.isDecorative.value=e,this.$emit("element-update",this.element)},onChangeCategorySliderLazy(e){this.element.config.categorySliderLazy.value=e,this.emitUpdateEl()},onChangeCategorySliderLoop(e){this.element.config.categorySliderLoop.value=e,this.emitUpdateEl()},onChangeCategorySliderDrag(e){this.element.config.categorySliderDrag.value=e,this.emitUpdateEl()},emitUpdateEl(){this.$emit("element-update",this.element)}}});const Je=`{% block sw_cms_element_category_slider_preview %} <div class="sw-cms-preview-category-slider"> <div class="sw-cms-preview-category-slider-content"> <div class="sw-cms-preview-category-slider-content-top"> <sw-icon name="regular-chevron-left" size="10" /> <div class="sw-cms-preview-category-slider-content-image"> <img :src="assetFilter('/administration/administration/static/img/cms/preview_mountain_small.jpg')" alt="" > </div> <sw-icon name="regular-chevron-right" size="10" /> </div> <h5>Slider label</h5> </div> </div> {% endblock %}`;Shopware.Component.register("sw-cms-el-preview-comaxx-image-slider",{template:Je,computed:{assetFilter(){return Shopware.Filter.getByName("asset")}}});Shopware.Service("cmsService").registerCmsElement({name:"comaxx-image-slider",label:"sw-cms.elements.comaxx-image-slider.label",component:"sw-cms-el-comaxx-image-slider",configComponent:"sw-cms-el-config-comaxx-image-slider",previewComponent:"sw-cms-el-preview-comaxx-image-slider",defaultConfig:{sliderItems:{source:"static",value:[],required:!0,entity:{name:"media"}},navigationArrows:{source:"static",value:"outside"},navigationDots:{source:"static",value:"none"},displayMode:{source:"static",value:"standard"},minHeight:{source:"static",value:"300px"},verticalAlign:{source:"static",value:null},itemsSm:{value:2,source:"static"},itemsMd:{value:4,source:"static"},itemsLg:{value:8,source:"static"},categorySliderLazy:{source:"static",value:!1},categorySliderLoop:{source:"static",value:!1},categorySliderDrag:{source:"static",value:!1},gutter:{source:"static",value:32},speed:{value:300,source:"static"},autoSlide:{value:!1,source:"static"},autoplayTimeout:{value:5e3,source:"static"},isDecorative:{source:"static",value:!1}},enrich:function(t,i){if(Object.keys(i).length<1)return;let l=0;Object.keys(t.config).forEach(a=>{const o=t.config[a];if(o.entity){const s=`entity-${o.entity.name}-${l}`;if(l+=1,!i[s]||(t.data[a]=[],!Array.isArray(o.value)))return;o.value.forEach(n=>{const c={newTab:n.newTab,url:n.url,media:i[s].get(n.mediaId)||null};t.data[a].push(c)})}else t.data[a]=o.value})}});Shopware.Module.register("comaxx-menu",{type:"core",name:"Comaxx Settings Page",title:"Comaxx Settings",description:"The page for Comaxx Settings",color:"#ff5000",position:100,routes:{settings:{component:"comaxx-menu-settings",path:"settings"}},navigation:[{label:"Comaxx",color:"#ff5000",path:"comaxx.menu.settings",icon:"regular-sparkles",position:1e3}]});const Xe=`{% block comaxx_menu_settings %} <sw-page class="comaxx-menu-settings"> <template v-slot:content> <br> <br> <sw-meteor-card defaultTab="tab1"> <template #tabs="{ activeTab }"> <sw-tabs-item name="comaxxTheme" :activeTab="activeTab">Comaxx Theme</sw-tabs-item> <sw-tabs-item name="comaxxTab" :activeTab="activeTab">Comaxx CMS</sw-tabs-item> </template> <template #default="{ activeTab }"> <p v-if="activeTab === 'tab1'"> <router-link :to="{ name: 'sw.theme.manager.detail', params: { id: customThemeId }}" > <p>Naar de Comaxx Thema instellingen</p> </router-link> </p> <p v-if="activeTab === 'tab2'"> <router-link :to="{ name: 'sw.extension.config', params: { namespace: 'ComaxxCms' }}" > <p>Naar de Comaxx CMS instellingen</p> </router-link> </p> </template> </sw-meteor-card> </template> </sw-page> {% endblock %}`,{Mixin:et}=Shopware,{Criteria:g}=Shopware.Data;Shopware.Component.register("comaxx-menu-settings",{template:Xe,inject:["repositoryFactory"],data(){return{customThemeId:1}},mounted(){this.themeRepository=this.repositoryFactory.create("theme"),this.loadCustomThemeId()},methods:{openRoute(e){this.$router.push(e)},loadCustomThemeId(){const e=new g;e.addFilter(g.equals("name","ComaxxTheme")),this.themeRepository.search(e,Shopware.Context.api).then(t=>{t.length>0&&(this.customThemeId=t[0].id)})}}});
//# sourceMappingURL=comaxx-cms-K33UJ0Az.js.map
